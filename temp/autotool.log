

this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71279520">
<ol start="81" class="pre-context" id="pre71279520">
<li onclick="toggle('pre71279520', 'post71279520')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71279520', 'post71279520')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71279520', 'post71279520')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71279520', 'post71279520')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71279520', 'post71279520')"></li>
<li onclick="toggle('pre71279520', 'post71279520')">    @staticmethod</li>
<li onclick="toggle('pre71279520', 'post71279520')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71279520', 'post71279520')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71279520">
<li onclick="toggle('pre71279520', 'post71279520')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71279520', 'post71279520')">            return tf.tell()</li>
<li onclick="toggle('pre71279520', 'post71279520')">    @staticmethod</li>
<li onclick="toggle('pre71279520', 'post71279520')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71279520', 'post71279520')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71279520', 'post71279520')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71280520">
<ol start="29" class="pre-context" id="pre71280520">
<li onclick="toggle('pre71280520', 'post71280520')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71280520', 'post71280520')"></li>
<li onclick="toggle('pre71280520', 'post71280520')">    def start(self):</li>
<li onclick="toggle('pre71280520', 'post71280520')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71280520', 'post71280520')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71280520', 'post71280520')">        start_time = time.time()</li>
<li onclick="toggle('pre71280520', 'post71280520')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71280520', 'post71280520')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71280520">
<li onclick="toggle('pre71280520', 'post71280520')">        with self.lock:</li>
<li onclick="toggle('pre71280520', 'post71280520')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71280520', 'post71280520')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71280520', 'post71280520')"></li>
<li onclick="toggle('pre71280520', 'post71280520')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71280520', 'post71280520')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA170&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71281160">
<ol start="150" class="pre-context" id="pre71281160">
<li onclick="toggle('pre71281160', 'post71281160')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71281160', 'post71281160')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71281160', 'post71281160')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71281160', 'post71281160')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71281160', 'post71281160')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71281160', 'post71281160')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71281160', 'post71281160')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71281160', 'post71281160')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71281160">
<li onclick="toggle('pre71281160', 'post71281160')"></li>
<li onclick="toggle('pre71281160', 'post71281160')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71281160', 'post71281160')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71281160', 'post71281160')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71281160', 'post71281160')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71281160', 'post71281160')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281160')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281160"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA170&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDCB0&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71279960">
<ol start="117" class="pre-context" id="pre71279960">
<li onclick="toggle('pre71279960', 'post71279960')">        try:</li>
<li onclick="toggle('pre71279960', 'post71279960')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71279960', 'post71279960')">            body = web.data().strip()</li>
<li onclick="toggle('pre71279960', 'post71279960')">            print body</li>
<li onclick="toggle('pre71279960', 'post71279960')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71279960', 'post71279960')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279960', 'post71279960')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71279960', 'post71279960')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71279960">
<li onclick="toggle('pre71279960', 'post71279960')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71279960', 'post71279960')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71279960', 'post71279960')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71279960', 'post71279960')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279960', 'post71279960')">                try:</li>
<li onclick="toggle('pre71279960', 'post71279960')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDCB0&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71282520">
<ol start="430" class="pre-context" id="pre71282520">
<li onclick="toggle('pre71282520', 'post71282520')">        def handle_class(cls):</li>
<li onclick="toggle('pre71282520', 'post71282520')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71282520', 'post71282520')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71282520', 'post71282520')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71282520', 'post71282520')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71282520', 'post71282520')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71282520', 'post71282520')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71282520', 'post71282520')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71282520">
<li onclick="toggle('pre71282520', 'post71282520')">            </li>
<li onclick="toggle('pre71282520', 'post71282520')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71282520', 'post71282520')">            </li>
<li onclick="toggle('pre71282520', 'post71282520')">        if f is None:</li>
<li onclick="toggle('pre71282520', 'post71282520')">            raise web.notfound()</li>
<li onclick="toggle('pre71282520', 'post71282520')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DDCB0&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71281360">
<ol start="454" class="pre-context" id="pre71281360">
<li onclick="toggle('pre71281360', 'post71281360')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71281360', 'post71281360')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71281360', 'post71281360')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71281360', 'post71281360')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71281360', 'post71281360')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71281360', 'post71281360')">            else:</li>
<li onclick="toggle('pre71281360', 'post71281360')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71281360', 'post71281360')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71281360">
<li onclick="toggle('pre71281360', 'post71281360')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71281360', 'post71281360')">            return f()</li>
<li onclick="toggle('pre71281360', 'post71281360')">        else:</li>
<li onclick="toggle('pre71281360', 'post71281360')">            return web.notfound()</li>
<li onclick="toggle('pre71281360', 'post71281360')"></li>
<li onclick="toggle('pre71281360', 'post71281360')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281360')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281360"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326F30&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x04326FB0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71280960">
<ol start="222" class="pre-context" id="pre71280960">
<li onclick="toggle('pre71280960', 'post71280960')"></li>
<li onclick="toggle('pre71280960', 'post71280960')">    def browser(self):</li>
<li onclick="toggle('pre71280960', 'post71280960')">        import browser</li>
<li onclick="toggle('pre71280960', 'post71280960')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71280960', 'post71280960')"></li>
<li onclick="toggle('pre71280960', 'post71280960')">    def handle(self):</li>
<li onclick="toggle('pre71280960', 'post71280960')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71280960', 'post71280960')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71280960">
<li onclick="toggle('pre71280960', 'post71280960')">        </li>
<li onclick="toggle('pre71280960', 'post71280960')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280960', 'post71280960')">        def process(processors):</li>
<li onclick="toggle('pre71280960', 'post71280960')">            try:</li>
<li onclick="toggle('pre71280960', 'post71280960')">                if processors:</li>
<li onclick="toggle('pre71280960', 'post71280960')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71281240">
<ol start="231" class="pre-context" id="pre71281240">
<li onclick="toggle('pre71281240', 'post71281240')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71281240', 'post71281240')">        def process(processors):</li>
<li onclick="toggle('pre71281240', 'post71281240')">            try:</li>
<li onclick="toggle('pre71281240', 'post71281240')">                if processors:</li>
<li onclick="toggle('pre71281240', 'post71281240')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71281240', 'post71281240')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71281240', 'post71281240')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71281240', 'post71281240')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71281240">
<li onclick="toggle('pre71281240', 'post71281240')">            except web.HTTPError:</li>
<li onclick="toggle('pre71281240', 'post71281240')">                raise</li>
<li onclick="toggle('pre71281240', 'post71281240')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71281240', 'post71281240')">                raise</li>
<li onclick="toggle('pre71281240', 'post71281240')">            except:</li>
<li onclick="toggle('pre71281240', 'post71281240')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x04326070&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62600&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x02838510&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71279240">
<ol start="81" class="pre-context" id="pre71279240">
<li onclick="toggle('pre71279240', 'post71279240')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71279240', 'post71279240')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71279240', 'post71279240')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71279240', 'post71279240')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71279240', 'post71279240')"></li>
<li onclick="toggle('pre71279240', 'post71279240')">    @staticmethod</li>
<li onclick="toggle('pre71279240', 'post71279240')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71279240', 'post71279240')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71279240">
<li onclick="toggle('pre71279240', 'post71279240')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71279240', 'post71279240')">            return tf.tell()</li>
<li onclick="toggle('pre71279240', 'post71279240')">    @staticmethod</li>
<li onclick="toggle('pre71279240', 'post71279240')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71279240', 'post71279240')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71279240', 'post71279240')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71281240">
<ol start="29" class="pre-context" id="pre71281240">
<li onclick="toggle('pre71281240', 'post71281240')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71281240', 'post71281240')"></li>
<li onclick="toggle('pre71281240', 'post71281240')">    def start(self):</li>
<li onclick="toggle('pre71281240', 'post71281240')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71281240', 'post71281240')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71281240', 'post71281240')">        start_time = time.time()</li>
<li onclick="toggle('pre71281240', 'post71281240')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71281240', 'post71281240')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71281240">
<li onclick="toggle('pre71281240', 'post71281240')">        with self.lock:</li>
<li onclick="toggle('pre71281240', 'post71281240')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71281240', 'post71281240')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71281240', 'post71281240')"></li>
<li onclick="toggle('pre71281240', 'post71281240')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71281240', 'post71281240')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FAE18&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71280960">
<ol start="150" class="pre-context" id="pre71280960">
<li onclick="toggle('pre71280960', 'post71280960')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280960', 'post71280960')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71280960', 'post71280960')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71280960', 'post71280960')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71280960', 'post71280960')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71280960', 'post71280960')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71280960', 'post71280960')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71280960', 'post71280960')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71280960">
<li onclick="toggle('pre71280960', 'post71280960')"></li>
<li onclick="toggle('pre71280960', 'post71280960')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71280960', 'post71280960')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71280960', 'post71280960')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71280960', 'post71280960')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280960', 'post71280960')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FAE18&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DD9B0&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71280520">
<ol start="117" class="pre-context" id="pre71280520">
<li onclick="toggle('pre71280520', 'post71280520')">        try:</li>
<li onclick="toggle('pre71280520', 'post71280520')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71280520', 'post71280520')">            body = web.data().strip()</li>
<li onclick="toggle('pre71280520', 'post71280520')">            print body</li>
<li onclick="toggle('pre71280520', 'post71280520')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71280520', 'post71280520')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280520', 'post71280520')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71280520', 'post71280520')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71280520">
<li onclick="toggle('pre71280520', 'post71280520')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71280520', 'post71280520')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71280520', 'post71280520')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71280520', 'post71280520')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280520', 'post71280520')">                try:</li>
<li onclick="toggle('pre71280520', 'post71280520')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DD9B0&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71280040">
<ol start="430" class="pre-context" id="pre71280040">
<li onclick="toggle('pre71280040', 'post71280040')">        def handle_class(cls):</li>
<li onclick="toggle('pre71280040', 'post71280040')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71280040', 'post71280040')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280040', 'post71280040')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71280040', 'post71280040')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280040', 'post71280040')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71280040', 'post71280040')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71280040', 'post71280040')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71280040">
<li onclick="toggle('pre71280040', 'post71280040')">            </li>
<li onclick="toggle('pre71280040', 'post71280040')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71280040', 'post71280040')">            </li>
<li onclick="toggle('pre71280040', 'post71280040')">        if f is None:</li>
<li onclick="toggle('pre71280040', 'post71280040')">            raise web.notfound()</li>
<li onclick="toggle('pre71280040', 'post71280040')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280040')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280040"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DD9B0&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71279520">
<ol start="454" class="pre-context" id="pre71279520">
<li onclick="toggle('pre71279520', 'post71279520')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71279520', 'post71279520')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71279520', 'post71279520')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71279520', 'post71279520')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71279520', 'post71279520')">            else:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71279520', 'post71279520')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71279520">
<li onclick="toggle('pre71279520', 'post71279520')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71279520', 'post71279520')">            return f()</li>
<li onclick="toggle('pre71279520', 'post71279520')">        else:</li>
<li onclick="toggle('pre71279520', 'post71279520')">            return web.notfound()</li>
<li onclick="toggle('pre71279520', 'post71279520')"></li>
<li onclick="toggle('pre71279520', 'post71279520')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326F30&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x04326270&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71280440">
<ol start="222" class="pre-context" id="pre71280440">
<li onclick="toggle('pre71280440', 'post71280440')"></li>
<li onclick="toggle('pre71280440', 'post71280440')">    def browser(self):</li>
<li onclick="toggle('pre71280440', 'post71280440')">        import browser</li>
<li onclick="toggle('pre71280440', 'post71280440')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71280440', 'post71280440')"></li>
<li onclick="toggle('pre71280440', 'post71280440')">    def handle(self):</li>
<li onclick="toggle('pre71280440', 'post71280440')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71280440', 'post71280440')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71280440">
<li onclick="toggle('pre71280440', 'post71280440')">        </li>
<li onclick="toggle('pre71280440', 'post71280440')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280440', 'post71280440')">        def process(processors):</li>
<li onclick="toggle('pre71280440', 'post71280440')">            try:</li>
<li onclick="toggle('pre71280440', 'post71280440')">                if processors:</li>
<li onclick="toggle('pre71280440', 'post71280440')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280440')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280440"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71282160">
<ol start="231" class="pre-context" id="pre71282160">
<li onclick="toggle('pre71282160', 'post71282160')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71282160', 'post71282160')">        def process(processors):</li>
<li onclick="toggle('pre71282160', 'post71282160')">            try:</li>
<li onclick="toggle('pre71282160', 'post71282160')">                if processors:</li>
<li onclick="toggle('pre71282160', 'post71282160')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71282160', 'post71282160')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71282160', 'post71282160')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71282160', 'post71282160')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71282160">
<li onclick="toggle('pre71282160', 'post71282160')">            except web.HTTPError:</li>
<li onclick="toggle('pre71282160', 'post71282160')">                raise</li>
<li onclick="toggle('pre71282160', 'post71282160')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71282160', 'post71282160')">                raise</li>
<li onclick="toggle('pre71282160', 'post71282160')">            except:</li>
<li onclick="toggle('pre71282160', 'post71282160')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282160')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282160"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x04326CB0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62604&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x043DD7D0&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71279480">
<ol start="81" class="pre-context" id="pre71279480">
<li onclick="toggle('pre71279480', 'post71279480')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71279480', 'post71279480')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71279480', 'post71279480')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71279480', 'post71279480')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71279480', 'post71279480')"></li>
<li onclick="toggle('pre71279480', 'post71279480')">    @staticmethod</li>
<li onclick="toggle('pre71279480', 'post71279480')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71279480', 'post71279480')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71279480">
<li onclick="toggle('pre71279480', 'post71279480')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71279480', 'post71279480')">            return tf.tell()</li>
<li onclick="toggle('pre71279480', 'post71279480')">    @staticmethod</li>
<li onclick="toggle('pre71279480', 'post71279480')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71279480', 'post71279480')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71279480', 'post71279480')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279480')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279480"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71279680">
<ol start="29" class="pre-context" id="pre71279680">
<li onclick="toggle('pre71279680', 'post71279680')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71279680', 'post71279680')"></li>
<li onclick="toggle('pre71279680', 'post71279680')">    def start(self):</li>
<li onclick="toggle('pre71279680', 'post71279680')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71279680', 'post71279680')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71279680', 'post71279680')">        start_time = time.time()</li>
<li onclick="toggle('pre71279680', 'post71279680')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71279680', 'post71279680')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71279680">
<li onclick="toggle('pre71279680', 'post71279680')">        with self.lock:</li>
<li onclick="toggle('pre71279680', 'post71279680')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71279680', 'post71279680')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71279680', 'post71279680')"></li>
<li onclick="toggle('pre71279680', 'post71279680')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71279680', 'post71279680')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279680')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279680"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x028378C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71279000">
<ol start="150" class="pre-context" id="pre71279000">
<li onclick="toggle('pre71279000', 'post71279000')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71279000', 'post71279000')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71279000', 'post71279000')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71279000', 'post71279000')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71279000', 'post71279000')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71279000', 'post71279000')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71279000', 'post71279000')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71279000', 'post71279000')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71279000">
<li onclick="toggle('pre71279000', 'post71279000')"></li>
<li onclick="toggle('pre71279000', 'post71279000')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71279000', 'post71279000')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71279000', 'post71279000')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71279000', 'post71279000')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71279000', 'post71279000')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279000')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279000"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x028378C8&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDB70&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71279520">
<ol start="117" class="pre-context" id="pre71279520">
<li onclick="toggle('pre71279520', 'post71279520')">        try:</li>
<li onclick="toggle('pre71279520', 'post71279520')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71279520', 'post71279520')">            body = web.data().strip()</li>
<li onclick="toggle('pre71279520', 'post71279520')">            print body</li>
<li onclick="toggle('pre71279520', 'post71279520')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71279520', 'post71279520')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279520', 'post71279520')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71279520', 'post71279520')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71279520">
<li onclick="toggle('pre71279520', 'post71279520')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71279520', 'post71279520')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71279520', 'post71279520')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279520', 'post71279520')">                try:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDB70&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71280440">
<ol start="430" class="pre-context" id="pre71280440">
<li onclick="toggle('pre71280440', 'post71280440')">        def handle_class(cls):</li>
<li onclick="toggle('pre71280440', 'post71280440')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71280440', 'post71280440')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280440', 'post71280440')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71280440', 'post71280440')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280440', 'post71280440')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71280440', 'post71280440')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71280440', 'post71280440')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71280440">
<li onclick="toggle('pre71280440', 'post71280440')">            </li>
<li onclick="toggle('pre71280440', 'post71280440')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71280440', 'post71280440')">            </li>
<li onclick="toggle('pre71280440', 'post71280440')">        if f is None:</li>
<li onclick="toggle('pre71280440', 'post71280440')">            raise web.notfound()</li>
<li onclick="toggle('pre71280440', 'post71280440')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280440')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280440"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DDB70&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71280040">
<ol start="454" class="pre-context" id="pre71280040">
<li onclick="toggle('pre71280040', 'post71280040')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71280040', 'post71280040')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71280040', 'post71280040')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71280040', 'post71280040')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71280040', 'post71280040')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71280040', 'post71280040')">            else:</li>
<li onclick="toggle('pre71280040', 'post71280040')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71280040', 'post71280040')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71280040">
<li onclick="toggle('pre71280040', 'post71280040')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71280040', 'post71280040')">            return f()</li>
<li onclick="toggle('pre71280040', 'post71280040')">        else:</li>
<li onclick="toggle('pre71280040', 'post71280040')">            return web.notfound()</li>
<li onclick="toggle('pre71280040', 'post71280040')"></li>
<li onclick="toggle('pre71280040', 'post71280040')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280040')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280040"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x043267B0&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x043269F0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71282160">
<ol start="222" class="pre-context" id="pre71282160">
<li onclick="toggle('pre71282160', 'post71282160')"></li>
<li onclick="toggle('pre71282160', 'post71282160')">    def browser(self):</li>
<li onclick="toggle('pre71282160', 'post71282160')">        import browser</li>
<li onclick="toggle('pre71282160', 'post71282160')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71282160', 'post71282160')"></li>
<li onclick="toggle('pre71282160', 'post71282160')">    def handle(self):</li>
<li onclick="toggle('pre71282160', 'post71282160')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71282160', 'post71282160')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71282160">
<li onclick="toggle('pre71282160', 'post71282160')">        </li>
<li onclick="toggle('pre71282160', 'post71282160')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71282160', 'post71282160')">        def process(processors):</li>
<li onclick="toggle('pre71282160', 'post71282160')">            try:</li>
<li onclick="toggle('pre71282160', 'post71282160')">                if processors:</li>
<li onclick="toggle('pre71282160', 'post71282160')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282160')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282160"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71278960">
<ol start="231" class="pre-context" id="pre71278960">
<li onclick="toggle('pre71278960', 'post71278960')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71278960', 'post71278960')">        def process(processors):</li>
<li onclick="toggle('pre71278960', 'post71278960')">            try:</li>
<li onclick="toggle('pre71278960', 'post71278960')">                if processors:</li>
<li onclick="toggle('pre71278960', 'post71278960')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71278960', 'post71278960')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71278960', 'post71278960')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71278960', 'post71278960')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71278960">
<li onclick="toggle('pre71278960', 'post71278960')">            except web.HTTPError:</li>
<li onclick="toggle('pre71278960', 'post71278960')">                raise</li>
<li onclick="toggle('pre71278960', 'post71278960')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71278960', 'post71278960')">                raise</li>
<li onclick="toggle('pre71278960', 'post71278960')">            except:</li>
<li onclick="toggle('pre71278960', 'post71278960')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71278960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71278960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x04326370&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62608&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x04393E30&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c42171048">
<ol start="81" class="pre-context" id="pre42171048">
<li onclick="toggle('pre42171048', 'post42171048')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre42171048', 'post42171048')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre42171048', 'post42171048')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre42171048', 'post42171048')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre42171048', 'post42171048')"></li>
<li onclick="toggle('pre42171048', 'post42171048')">    @staticmethod</li>
<li onclick="toggle('pre42171048', 'post42171048')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre42171048', 'post42171048')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post42171048">
<li onclick="toggle('pre42171048', 'post42171048')">            tf.seek(0,2)</li>
<li onclick="toggle('pre42171048', 'post42171048')">            return tf.tell()</li>
<li onclick="toggle('pre42171048', 'post42171048')">    @staticmethod</li>
<li onclick="toggle('pre42171048', 'post42171048')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre42171048', 'post42171048')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre42171048', 'post42171048')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '42171048')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v42171048"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c42172128">
<ol start="29" class="pre-context" id="pre42172128">
<li onclick="toggle('pre42172128', 'post42172128')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre42172128', 'post42172128')"></li>
<li onclick="toggle('pre42172128', 'post42172128')">    def start(self):</li>
<li onclick="toggle('pre42172128', 'post42172128')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre42172128', 'post42172128')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre42172128', 'post42172128')">        start_time = time.time()</li>
<li onclick="toggle('pre42172128', 'post42172128')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre42172128', 'post42172128')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post42172128">
<li onclick="toggle('pre42172128', 'post42172128')">        with self.lock:</li>
<li onclick="toggle('pre42172128', 'post42172128')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre42172128', 'post42172128')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre42172128', 'post42172128')"></li>
<li onclick="toggle('pre42172128', 'post42172128')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre42172128', 'post42172128')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '42172128')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v42172128"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x028375F8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c42171128">
<ol start="150" class="pre-context" id="pre42171128">
<li onclick="toggle('pre42171128', 'post42171128')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre42171128', 'post42171128')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre42171128', 'post42171128')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre42171128', 'post42171128')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre42171128', 'post42171128')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre42171128', 'post42171128')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre42171128', 'post42171128')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre42171128', 'post42171128')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post42171128">
<li onclick="toggle('pre42171128', 'post42171128')"></li>
<li onclick="toggle('pre42171128', 'post42171128')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre42171128', 'post42171128')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre42171128', 'post42171128')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre42171128', 'post42171128')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre42171128', 'post42171128')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '42171128')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v42171128"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x028375F8&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DD8D0&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c42171568">
<ol start="117" class="pre-context" id="pre42171568">
<li onclick="toggle('pre42171568', 'post42171568')">        try:</li>
<li onclick="toggle('pre42171568', 'post42171568')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre42171568', 'post42171568')">            body = web.data().strip()</li>
<li onclick="toggle('pre42171568', 'post42171568')">            print body</li>
<li onclick="toggle('pre42171568', 'post42171568')">            msgobj = eval(body)</li>
<li onclick="toggle('pre42171568', 'post42171568')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre42171568', 'post42171568')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre42171568', 'post42171568')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post42171568">
<li onclick="toggle('pre42171568', 'post42171568')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre42171568', 'post42171568')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre42171568', 'post42171568')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre42171568', 'post42171568')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre42171568', 'post42171568')">                try:</li>
<li onclick="toggle('pre42171568', 'post42171568')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '42171568')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v42171568"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DD8D0&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c42170568">
<ol start="430" class="pre-context" id="pre42170568">
<li onclick="toggle('pre42170568', 'post42170568')">        def handle_class(cls):</li>
<li onclick="toggle('pre42170568', 'post42170568')">            meth = web.ctx.method</li>
<li onclick="toggle('pre42170568', 'post42170568')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre42170568', 'post42170568')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre42170568', 'post42170568')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre42170568', 'post42170568')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre42170568', 'post42170568')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre42170568', 'post42170568')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post42170568">
<li onclick="toggle('pre42170568', 'post42170568')">            </li>
<li onclick="toggle('pre42170568', 'post42170568')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre42170568', 'post42170568')">            </li>
<li onclick="toggle('pre42170568', 'post42170568')">        if f is None:</li>
<li onclick="toggle('pre42170568', 'post42170568')">            raise web.notfound()</li>
<li onclick="toggle('pre42170568', 'post42170568')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '42170568')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v42170568"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DD8D0&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c42170408">
<ol start="454" class="pre-context" id="pre42170408">
<li onclick="toggle('pre42170408', 'post42170408')">                raise web.redirect(url)</li>
<li onclick="toggle('pre42170408', 'post42170408')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre42170408', 'post42170408')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre42170408', 'post42170408')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre42170408', 'post42170408')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre42170408', 'post42170408')">            else:</li>
<li onclick="toggle('pre42170408', 'post42170408')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre42170408', 'post42170408')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post42170408">
<li onclick="toggle('pre42170408', 'post42170408')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre42170408', 'post42170408')">            return f()</li>
<li onclick="toggle('pre42170408', 'post42170408')">        else:</li>
<li onclick="toggle('pre42170408', 'post42170408')">            return web.notfound()</li>
<li onclick="toggle('pre42170408', 'post42170408')"></li>
<li onclick="toggle('pre42170408', 'post42170408')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '42170408')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v42170408"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326A70&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x043264F0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71280520">
<ol start="222" class="pre-context" id="pre71280520">
<li onclick="toggle('pre71280520', 'post71280520')"></li>
<li onclick="toggle('pre71280520', 'post71280520')">    def browser(self):</li>
<li onclick="toggle('pre71280520', 'post71280520')">        import browser</li>
<li onclick="toggle('pre71280520', 'post71280520')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71280520', 'post71280520')"></li>
<li onclick="toggle('pre71280520', 'post71280520')">    def handle(self):</li>
<li onclick="toggle('pre71280520', 'post71280520')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71280520', 'post71280520')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71280520">
<li onclick="toggle('pre71280520', 'post71280520')">        </li>
<li onclick="toggle('pre71280520', 'post71280520')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280520', 'post71280520')">        def process(processors):</li>
<li onclick="toggle('pre71280520', 'post71280520')">            try:</li>
<li onclick="toggle('pre71280520', 'post71280520')">                if processors:</li>
<li onclick="toggle('pre71280520', 'post71280520')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71281960">
<ol start="231" class="pre-context" id="pre71281960">
<li onclick="toggle('pre71281960', 'post71281960')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71281960', 'post71281960')">        def process(processors):</li>
<li onclick="toggle('pre71281960', 'post71281960')">            try:</li>
<li onclick="toggle('pre71281960', 'post71281960')">                if processors:</li>
<li onclick="toggle('pre71281960', 'post71281960')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71281960', 'post71281960')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71281960', 'post71281960')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71281960', 'post71281960')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71281960">
<li onclick="toggle('pre71281960', 'post71281960')">            except web.HTTPError:</li>
<li onclick="toggle('pre71281960', 'post71281960')">                raise</li>
<li onclick="toggle('pre71281960', 'post71281960')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71281960', 'post71281960')">                raise</li>
<li onclick="toggle('pre71281960', 'post71281960')">            except:</li>
<li onclick="toggle('pre71281960', 'post71281960')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x043261F0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62632&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0293E190&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71279080">
<ol start="81" class="pre-context" id="pre71279080">
<li onclick="toggle('pre71279080', 'post71279080')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71279080', 'post71279080')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71279080', 'post71279080')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71279080', 'post71279080')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71279080', 'post71279080')"></li>
<li onclick="toggle('pre71279080', 'post71279080')">    @staticmethod</li>
<li onclick="toggle('pre71279080', 'post71279080')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71279080', 'post71279080')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71279080">
<li onclick="toggle('pre71279080', 'post71279080')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71279080', 'post71279080')">            return tf.tell()</li>
<li onclick="toggle('pre71279080', 'post71279080')">    @staticmethod</li>
<li onclick="toggle('pre71279080', 'post71279080')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71279080', 'post71279080')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71279080', 'post71279080')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279080')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279080"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71281240">
<ol start="29" class="pre-context" id="pre71281240">
<li onclick="toggle('pre71281240', 'post71281240')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71281240', 'post71281240')"></li>
<li onclick="toggle('pre71281240', 'post71281240')">    def start(self):</li>
<li onclick="toggle('pre71281240', 'post71281240')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71281240', 'post71281240')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71281240', 'post71281240')">        start_time = time.time()</li>
<li onclick="toggle('pre71281240', 'post71281240')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71281240', 'post71281240')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71281240">
<li onclick="toggle('pre71281240', 'post71281240')">        with self.lock:</li>
<li onclick="toggle('pre71281240', 'post71281240')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71281240', 'post71281240')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71281240', 'post71281240')"></li>
<li onclick="toggle('pre71281240', 'post71281240')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71281240', 'post71281240')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA9B8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71282520">
<ol start="150" class="pre-context" id="pre71282520">
<li onclick="toggle('pre71282520', 'post71282520')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71282520', 'post71282520')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71282520', 'post71282520')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71282520', 'post71282520')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71282520', 'post71282520')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71282520', 'post71282520')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71282520', 'post71282520')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71282520', 'post71282520')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71282520">
<li onclick="toggle('pre71282520', 'post71282520')"></li>
<li onclick="toggle('pre71282520', 'post71282520')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71282520', 'post71282520')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71282520', 'post71282520')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71282520', 'post71282520')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71282520', 'post71282520')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA9B8&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDC50&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71280960">
<ol start="117" class="pre-context" id="pre71280960">
<li onclick="toggle('pre71280960', 'post71280960')">        try:</li>
<li onclick="toggle('pre71280960', 'post71280960')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71280960', 'post71280960')">            body = web.data().strip()</li>
<li onclick="toggle('pre71280960', 'post71280960')">            print body</li>
<li onclick="toggle('pre71280960', 'post71280960')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71280960', 'post71280960')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280960', 'post71280960')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71280960', 'post71280960')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71280960">
<li onclick="toggle('pre71280960', 'post71280960')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71280960', 'post71280960')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71280960', 'post71280960')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71280960', 'post71280960')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280960', 'post71280960')">                try:</li>
<li onclick="toggle('pre71280960', 'post71280960')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDC50&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71279600">
<ol start="430" class="pre-context" id="pre71279600">
<li onclick="toggle('pre71279600', 'post71279600')">        def handle_class(cls):</li>
<li onclick="toggle('pre71279600', 'post71279600')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71279600', 'post71279600')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71279600', 'post71279600')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71279600', 'post71279600')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71279600', 'post71279600')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71279600', 'post71279600')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71279600', 'post71279600')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71279600">
<li onclick="toggle('pre71279600', 'post71279600')">            </li>
<li onclick="toggle('pre71279600', 'post71279600')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71279600', 'post71279600')">            </li>
<li onclick="toggle('pre71279600', 'post71279600')">        if f is None:</li>
<li onclick="toggle('pre71279600', 'post71279600')">            raise web.notfound()</li>
<li onclick="toggle('pre71279600', 'post71279600')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279600')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279600"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DDC50&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71281600">
<ol start="454" class="pre-context" id="pre71281600">
<li onclick="toggle('pre71281600', 'post71281600')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71281600', 'post71281600')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71281600', 'post71281600')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71281600', 'post71281600')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71281600', 'post71281600')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71281600', 'post71281600')">            else:</li>
<li onclick="toggle('pre71281600', 'post71281600')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71281600', 'post71281600')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71281600">
<li onclick="toggle('pre71281600', 'post71281600')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71281600', 'post71281600')">            return f()</li>
<li onclick="toggle('pre71281600', 'post71281600')">        else:</li>
<li onclick="toggle('pre71281600', 'post71281600')">            return web.notfound()</li>
<li onclick="toggle('pre71281600', 'post71281600')"></li>
<li onclick="toggle('pre71281600', 'post71281600')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281600')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281600"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x043263B0&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x043269B0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71280360">
<ol start="222" class="pre-context" id="pre71280360">
<li onclick="toggle('pre71280360', 'post71280360')"></li>
<li onclick="toggle('pre71280360', 'post71280360')">    def browser(self):</li>
<li onclick="toggle('pre71280360', 'post71280360')">        import browser</li>
<li onclick="toggle('pre71280360', 'post71280360')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71280360', 'post71280360')"></li>
<li onclick="toggle('pre71280360', 'post71280360')">    def handle(self):</li>
<li onclick="toggle('pre71280360', 'post71280360')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71280360', 'post71280360')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71280360">
<li onclick="toggle('pre71280360', 'post71280360')">        </li>
<li onclick="toggle('pre71280360', 'post71280360')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280360', 'post71280360')">        def process(processors):</li>
<li onclick="toggle('pre71280360', 'post71280360')">            try:</li>
<li onclick="toggle('pre71280360', 'post71280360')">                if processors:</li>
<li onclick="toggle('pre71280360', 'post71280360')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280360')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280360"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71280240">
<ol start="231" class="pre-context" id="pre71280240">
<li onclick="toggle('pre71280240', 'post71280240')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280240', 'post71280240')">        def process(processors):</li>
<li onclick="toggle('pre71280240', 'post71280240')">            try:</li>
<li onclick="toggle('pre71280240', 'post71280240')">                if processors:</li>
<li onclick="toggle('pre71280240', 'post71280240')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71280240', 'post71280240')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71280240', 'post71280240')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71280240', 'post71280240')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71280240">
<li onclick="toggle('pre71280240', 'post71280240')">            except web.HTTPError:</li>
<li onclick="toggle('pre71280240', 'post71280240')">                raise</li>
<li onclick="toggle('pre71280240', 'post71280240')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71280240', 'post71280240')">                raise</li>
<li onclick="toggle('pre71280240', 'post71280240')">            except:</li>
<li onclick="toggle('pre71280240', 'post71280240')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x04326F70&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62634&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x04393DD0&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71280800">
<ol start="81" class="pre-context" id="pre71280800">
<li onclick="toggle('pre71280800', 'post71280800')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71280800', 'post71280800')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71280800', 'post71280800')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71280800', 'post71280800')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71280800', 'post71280800')"></li>
<li onclick="toggle('pre71280800', 'post71280800')">    @staticmethod</li>
<li onclick="toggle('pre71280800', 'post71280800')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71280800', 'post71280800')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71280800">
<li onclick="toggle('pre71280800', 'post71280800')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71280800', 'post71280800')">            return tf.tell()</li>
<li onclick="toggle('pre71280800', 'post71280800')">    @staticmethod</li>
<li onclick="toggle('pre71280800', 'post71280800')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71280800', 'post71280800')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71280800', 'post71280800')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280800')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280800"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71282200">
<ol start="29" class="pre-context" id="pre71282200">
<li onclick="toggle('pre71282200', 'post71282200')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71282200', 'post71282200')"></li>
<li onclick="toggle('pre71282200', 'post71282200')">    def start(self):</li>
<li onclick="toggle('pre71282200', 'post71282200')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71282200', 'post71282200')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71282200', 'post71282200')">        start_time = time.time()</li>
<li onclick="toggle('pre71282200', 'post71282200')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71282200', 'post71282200')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71282200">
<li onclick="toggle('pre71282200', 'post71282200')">        with self.lock:</li>
<li onclick="toggle('pre71282200', 'post71282200')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71282200', 'post71282200')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71282200', 'post71282200')"></li>
<li onclick="toggle('pre71282200', 'post71282200')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71282200', 'post71282200')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282200')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282200"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x02845B20&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71280040">
<ol start="150" class="pre-context" id="pre71280040">
<li onclick="toggle('pre71280040', 'post71280040')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280040', 'post71280040')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71280040', 'post71280040')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71280040', 'post71280040')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71280040', 'post71280040')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71280040', 'post71280040')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71280040', 'post71280040')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71280040', 'post71280040')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71280040">
<li onclick="toggle('pre71280040', 'post71280040')"></li>
<li onclick="toggle('pre71280040', 'post71280040')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71280040', 'post71280040')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71280040', 'post71280040')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71280040', 'post71280040')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280040', 'post71280040')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280040')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280040"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x02845B20&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDEB0&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71280440">
<ol start="117" class="pre-context" id="pre71280440">
<li onclick="toggle('pre71280440', 'post71280440')">        try:</li>
<li onclick="toggle('pre71280440', 'post71280440')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71280440', 'post71280440')">            body = web.data().strip()</li>
<li onclick="toggle('pre71280440', 'post71280440')">            print body</li>
<li onclick="toggle('pre71280440', 'post71280440')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71280440', 'post71280440')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280440', 'post71280440')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71280440', 'post71280440')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71280440">
<li onclick="toggle('pre71280440', 'post71280440')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71280440', 'post71280440')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71280440', 'post71280440')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71280440', 'post71280440')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280440', 'post71280440')">                try:</li>
<li onclick="toggle('pre71280440', 'post71280440')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280440')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280440"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDEB0&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71282000">
<ol start="430" class="pre-context" id="pre71282000">
<li onclick="toggle('pre71282000', 'post71282000')">        def handle_class(cls):</li>
<li onclick="toggle('pre71282000', 'post71282000')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71282000', 'post71282000')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71282000', 'post71282000')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71282000', 'post71282000')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71282000', 'post71282000')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71282000', 'post71282000')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71282000', 'post71282000')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71282000">
<li onclick="toggle('pre71282000', 'post71282000')">            </li>
<li onclick="toggle('pre71282000', 'post71282000')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71282000', 'post71282000')">            </li>
<li onclick="toggle('pre71282000', 'post71282000')">        if f is None:</li>
<li onclick="toggle('pre71282000', 'post71282000')">            raise web.notfound()</li>
<li onclick="toggle('pre71282000', 'post71282000')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282000')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282000"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DDEB0&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71281720">
<ol start="454" class="pre-context" id="pre71281720">
<li onclick="toggle('pre71281720', 'post71281720')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71281720', 'post71281720')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71281720', 'post71281720')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71281720', 'post71281720')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71281720', 'post71281720')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71281720', 'post71281720')">            else:</li>
<li onclick="toggle('pre71281720', 'post71281720')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71281720', 'post71281720')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71281720">
<li onclick="toggle('pre71281720', 'post71281720')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71281720', 'post71281720')">            return f()</li>
<li onclick="toggle('pre71281720', 'post71281720')">        else:</li>
<li onclick="toggle('pre71281720', 'post71281720')">            return web.notfound()</li>
<li onclick="toggle('pre71281720', 'post71281720')"></li>
<li onclick="toggle('pre71281720', 'post71281720')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281720')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281720"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x043267B0&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x043264F0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71282520">
<ol start="222" class="pre-context" id="pre71282520">
<li onclick="toggle('pre71282520', 'post71282520')"></li>
<li onclick="toggle('pre71282520', 'post71282520')">    def browser(self):</li>
<li onclick="toggle('pre71282520', 'post71282520')">        import browser</li>
<li onclick="toggle('pre71282520', 'post71282520')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71282520', 'post71282520')"></li>
<li onclick="toggle('pre71282520', 'post71282520')">    def handle(self):</li>
<li onclick="toggle('pre71282520', 'post71282520')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71282520', 'post71282520')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71282520">
<li onclick="toggle('pre71282520', 'post71282520')">        </li>
<li onclick="toggle('pre71282520', 'post71282520')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71282520', 'post71282520')">        def process(processors):</li>
<li onclick="toggle('pre71282520', 'post71282520')">            try:</li>
<li onclick="toggle('pre71282520', 'post71282520')">                if processors:</li>
<li onclick="toggle('pre71282520', 'post71282520')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71280880">
<ol start="231" class="pre-context" id="pre71280880">
<li onclick="toggle('pre71280880', 'post71280880')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280880', 'post71280880')">        def process(processors):</li>
<li onclick="toggle('pre71280880', 'post71280880')">            try:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                if processors:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71280880', 'post71280880')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71280880', 'post71280880')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71280880', 'post71280880')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71280880">
<li onclick="toggle('pre71280880', 'post71280880')">            except web.HTTPError:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                raise</li>
<li onclick="toggle('pre71280880', 'post71280880')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71280880', 'post71280880')">                raise</li>
<li onclick="toggle('pre71280880', 'post71280880')">            except:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280880')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280880"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x043266B0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62639&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x043DDE30&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71278960">
<ol start="81" class="pre-context" id="pre71278960">
<li onclick="toggle('pre71278960', 'post71278960')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71278960', 'post71278960')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71278960', 'post71278960')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71278960', 'post71278960')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71278960', 'post71278960')"></li>
<li onclick="toggle('pre71278960', 'post71278960')">    @staticmethod</li>
<li onclick="toggle('pre71278960', 'post71278960')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71278960', 'post71278960')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71278960">
<li onclick="toggle('pre71278960', 'post71278960')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71278960', 'post71278960')">            return tf.tell()</li>
<li onclick="toggle('pre71278960', 'post71278960')">    @staticmethod</li>
<li onclick="toggle('pre71278960', 'post71278960')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71278960', 'post71278960')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71278960', 'post71278960')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71278960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71278960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71281520">
<ol start="29" class="pre-context" id="pre71281520">
<li onclick="toggle('pre71281520', 'post71281520')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71281520', 'post71281520')"></li>
<li onclick="toggle('pre71281520', 'post71281520')">    def start(self):</li>
<li onclick="toggle('pre71281520', 'post71281520')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71281520', 'post71281520')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71281520', 'post71281520')">        start_time = time.time()</li>
<li onclick="toggle('pre71281520', 'post71281520')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71281520', 'post71281520')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71281520">
<li onclick="toggle('pre71281520', 'post71281520')">        with self.lock:</li>
<li onclick="toggle('pre71281520', 'post71281520')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71281520', 'post71281520')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71281520', 'post71281520')"></li>
<li onclick="toggle('pre71281520', 'post71281520')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71281520', 'post71281520')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x027FE878&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71279440">
<ol start="150" class="pre-context" id="pre71279440">
<li onclick="toggle('pre71279440', 'post71279440')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71279440', 'post71279440')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71279440', 'post71279440')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71279440', 'post71279440')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71279440', 'post71279440')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71279440', 'post71279440')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71279440', 'post71279440')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71279440', 'post71279440')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71279440">
<li onclick="toggle('pre71279440', 'post71279440')"></li>
<li onclick="toggle('pre71279440', 'post71279440')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71279440', 'post71279440')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71279440', 'post71279440')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71279440', 'post71279440')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71279440', 'post71279440')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279440')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279440"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x027FE878&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DD890&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71280120">
<ol start="117" class="pre-context" id="pre71280120">
<li onclick="toggle('pre71280120', 'post71280120')">        try:</li>
<li onclick="toggle('pre71280120', 'post71280120')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71280120', 'post71280120')">            body = web.data().strip()</li>
<li onclick="toggle('pre71280120', 'post71280120')">            print body</li>
<li onclick="toggle('pre71280120', 'post71280120')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71280120', 'post71280120')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280120', 'post71280120')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71280120', 'post71280120')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71280120">
<li onclick="toggle('pre71280120', 'post71280120')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71280120', 'post71280120')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71280120', 'post71280120')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71280120', 'post71280120')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280120', 'post71280120')">                try:</li>
<li onclick="toggle('pre71280120', 'post71280120')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280120')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280120"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DD890&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71280040">
<ol start="430" class="pre-context" id="pre71280040">
<li onclick="toggle('pre71280040', 'post71280040')">        def handle_class(cls):</li>
<li onclick="toggle('pre71280040', 'post71280040')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71280040', 'post71280040')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280040', 'post71280040')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71280040', 'post71280040')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280040', 'post71280040')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71280040', 'post71280040')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71280040', 'post71280040')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71280040">
<li onclick="toggle('pre71280040', 'post71280040')">            </li>
<li onclick="toggle('pre71280040', 'post71280040')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71280040', 'post71280040')">            </li>
<li onclick="toggle('pre71280040', 'post71280040')">        if f is None:</li>
<li onclick="toggle('pre71280040', 'post71280040')">            raise web.notfound()</li>
<li onclick="toggle('pre71280040', 'post71280040')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280040')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280040"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DD890&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71279000">
<ol start="454" class="pre-context" id="pre71279000">
<li onclick="toggle('pre71279000', 'post71279000')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71279000', 'post71279000')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71279000', 'post71279000')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71279000', 'post71279000')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71279000', 'post71279000')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71279000', 'post71279000')">            else:</li>
<li onclick="toggle('pre71279000', 'post71279000')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71279000', 'post71279000')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71279000">
<li onclick="toggle('pre71279000', 'post71279000')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71279000', 'post71279000')">            return f()</li>
<li onclick="toggle('pre71279000', 'post71279000')">        else:</li>
<li onclick="toggle('pre71279000', 'post71279000')">            return web.notfound()</li>
<li onclick="toggle('pre71279000', 'post71279000')"></li>
<li onclick="toggle('pre71279000', 'post71279000')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279000')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279000"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326AF0&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x04326CF0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71282000">
<ol start="222" class="pre-context" id="pre71282000">
<li onclick="toggle('pre71282000', 'post71282000')"></li>
<li onclick="toggle('pre71282000', 'post71282000')">    def browser(self):</li>
<li onclick="toggle('pre71282000', 'post71282000')">        import browser</li>
<li onclick="toggle('pre71282000', 'post71282000')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71282000', 'post71282000')"></li>
<li onclick="toggle('pre71282000', 'post71282000')">    def handle(self):</li>
<li onclick="toggle('pre71282000', 'post71282000')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71282000', 'post71282000')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71282000">
<li onclick="toggle('pre71282000', 'post71282000')">        </li>
<li onclick="toggle('pre71282000', 'post71282000')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71282000', 'post71282000')">        def process(processors):</li>
<li onclick="toggle('pre71282000', 'post71282000')">            try:</li>
<li onclick="toggle('pre71282000', 'post71282000')">                if processors:</li>
<li onclick="toggle('pre71282000', 'post71282000')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282000')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282000"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71279520">
<ol start="231" class="pre-context" id="pre71279520">
<li onclick="toggle('pre71279520', 'post71279520')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71279520', 'post71279520')">        def process(processors):</li>
<li onclick="toggle('pre71279520', 'post71279520')">            try:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                if processors:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71279520', 'post71279520')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71279520', 'post71279520')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71279520', 'post71279520')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71279520">
<li onclick="toggle('pre71279520', 'post71279520')">            except web.HTTPError:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                raise</li>
<li onclick="toggle('pre71279520', 'post71279520')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71279520', 'post71279520')">                raise</li>
<li onclick="toggle('pre71279520', 'post71279520')">            except:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x043267F0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62642&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x04393A70&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71280160">
<ol start="81" class="pre-context" id="pre71280160">
<li onclick="toggle('pre71280160', 'post71280160')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71280160', 'post71280160')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71280160', 'post71280160')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71280160', 'post71280160')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71280160', 'post71280160')"></li>
<li onclick="toggle('pre71280160', 'post71280160')">    @staticmethod</li>
<li onclick="toggle('pre71280160', 'post71280160')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71280160', 'post71280160')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71280160">
<li onclick="toggle('pre71280160', 'post71280160')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71280160', 'post71280160')">            return tf.tell()</li>
<li onclick="toggle('pre71280160', 'post71280160')">    @staticmethod</li>
<li onclick="toggle('pre71280160', 'post71280160')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71280160', 'post71280160')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71280160', 'post71280160')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280160')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280160"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71280040">
<ol start="29" class="pre-context" id="pre71280040">
<li onclick="toggle('pre71280040', 'post71280040')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71280040', 'post71280040')"></li>
<li onclick="toggle('pre71280040', 'post71280040')">    def start(self):</li>
<li onclick="toggle('pre71280040', 'post71280040')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71280040', 'post71280040')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71280040', 'post71280040')">        start_time = time.time()</li>
<li onclick="toggle('pre71280040', 'post71280040')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71280040', 'post71280040')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71280040">
<li onclick="toggle('pre71280040', 'post71280040')">        with self.lock:</li>
<li onclick="toggle('pre71280040', 'post71280040')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71280040', 'post71280040')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71280040', 'post71280040')"></li>
<li onclick="toggle('pre71280040', 'post71280040')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71280040', 'post71280040')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280040')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280040"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x027D3580&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71280120">
<ol start="150" class="pre-context" id="pre71280120">
<li onclick="toggle('pre71280120', 'post71280120')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280120', 'post71280120')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71280120', 'post71280120')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71280120', 'post71280120')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71280120', 'post71280120')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71280120', 'post71280120')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71280120', 'post71280120')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71280120', 'post71280120')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71280120">
<li onclick="toggle('pre71280120', 'post71280120')"></li>
<li onclick="toggle('pre71280120', 'post71280120')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71280120', 'post71280120')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71280120', 'post71280120')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71280120', 'post71280120')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280120', 'post71280120')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280120')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280120"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x027D3580&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x02838C90&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71279000">
<ol start="117" class="pre-context" id="pre71279000">
<li onclick="toggle('pre71279000', 'post71279000')">        try:</li>
<li onclick="toggle('pre71279000', 'post71279000')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71279000', 'post71279000')">            body = web.data().strip()</li>
<li onclick="toggle('pre71279000', 'post71279000')">            print body</li>
<li onclick="toggle('pre71279000', 'post71279000')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71279000', 'post71279000')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279000', 'post71279000')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71279000', 'post71279000')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71279000">
<li onclick="toggle('pre71279000', 'post71279000')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71279000', 'post71279000')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71279000', 'post71279000')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71279000', 'post71279000')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279000', 'post71279000')">                try:</li>
<li onclick="toggle('pre71279000', 'post71279000')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279000')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279000"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x02838C90&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71282000">
<ol start="430" class="pre-context" id="pre71282000">
<li onclick="toggle('pre71282000', 'post71282000')">        def handle_class(cls):</li>
<li onclick="toggle('pre71282000', 'post71282000')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71282000', 'post71282000')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71282000', 'post71282000')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71282000', 'post71282000')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71282000', 'post71282000')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71282000', 'post71282000')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71282000', 'post71282000')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71282000">
<li onclick="toggle('pre71282000', 'post71282000')">            </li>
<li onclick="toggle('pre71282000', 'post71282000')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71282000', 'post71282000')">            </li>
<li onclick="toggle('pre71282000', 'post71282000')">        if f is None:</li>
<li onclick="toggle('pre71282000', 'post71282000')">            raise web.notfound()</li>
<li onclick="toggle('pre71282000', 'post71282000')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282000')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282000"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x02838C90&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71279520">
<ol start="454" class="pre-context" id="pre71279520">
<li onclick="toggle('pre71279520', 'post71279520')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71279520', 'post71279520')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71279520', 'post71279520')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71279520', 'post71279520')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71279520', 'post71279520')">            else:</li>
<li onclick="toggle('pre71279520', 'post71279520')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71279520', 'post71279520')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71279520">
<li onclick="toggle('pre71279520', 'post71279520')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71279520', 'post71279520')">            return f()</li>
<li onclick="toggle('pre71279520', 'post71279520')">        else:</li>
<li onclick="toggle('pre71279520', 'post71279520')">            return web.notfound()</li>
<li onclick="toggle('pre71279520', 'post71279520')"></li>
<li onclick="toggle('pre71279520', 'post71279520')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326BB0&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x04326B30&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71280400">
<ol start="222" class="pre-context" id="pre71280400">
<li onclick="toggle('pre71280400', 'post71280400')"></li>
<li onclick="toggle('pre71280400', 'post71280400')">    def browser(self):</li>
<li onclick="toggle('pre71280400', 'post71280400')">        import browser</li>
<li onclick="toggle('pre71280400', 'post71280400')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71280400', 'post71280400')"></li>
<li onclick="toggle('pre71280400', 'post71280400')">    def handle(self):</li>
<li onclick="toggle('pre71280400', 'post71280400')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71280400', 'post71280400')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71280400">
<li onclick="toggle('pre71280400', 'post71280400')">        </li>
<li onclick="toggle('pre71280400', 'post71280400')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280400', 'post71280400')">        def process(processors):</li>
<li onclick="toggle('pre71280400', 'post71280400')">            try:</li>
<li onclick="toggle('pre71280400', 'post71280400')">                if processors:</li>
<li onclick="toggle('pre71280400', 'post71280400')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280400')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280400"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71278960">
<ol start="231" class="pre-context" id="pre71278960">
<li onclick="toggle('pre71278960', 'post71278960')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71278960', 'post71278960')">        def process(processors):</li>
<li onclick="toggle('pre71278960', 'post71278960')">            try:</li>
<li onclick="toggle('pre71278960', 'post71278960')">                if processors:</li>
<li onclick="toggle('pre71278960', 'post71278960')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71278960', 'post71278960')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71278960', 'post71278960')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71278960', 'post71278960')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71278960">
<li onclick="toggle('pre71278960', 'post71278960')">            except web.HTTPError:</li>
<li onclick="toggle('pre71278960', 'post71278960')">                raise</li>
<li onclick="toggle('pre71278960', 'post71278960')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71278960', 'post71278960')">                raise</li>
<li onclick="toggle('pre71278960', 'post71278960')">            except:</li>
<li onclick="toggle('pre71278960', 'post71278960')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71278960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71278960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x043263B0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62644&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x043DD910&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71279520">
<ol start="81" class="pre-context" id="pre71279520">
<li onclick="toggle('pre71279520', 'post71279520')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71279520', 'post71279520')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71279520', 'post71279520')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71279520', 'post71279520')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71279520', 'post71279520')"></li>
<li onclick="toggle('pre71279520', 'post71279520')">    @staticmethod</li>
<li onclick="toggle('pre71279520', 'post71279520')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71279520', 'post71279520')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71279520">
<li onclick="toggle('pre71279520', 'post71279520')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71279520', 'post71279520')">            return tf.tell()</li>
<li onclick="toggle('pre71279520', 'post71279520')">    @staticmethod</li>
<li onclick="toggle('pre71279520', 'post71279520')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71279520', 'post71279520')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71279520', 'post71279520')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71278960">
<ol start="29" class="pre-context" id="pre71278960">
<li onclick="toggle('pre71278960', 'post71278960')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71278960', 'post71278960')"></li>
<li onclick="toggle('pre71278960', 'post71278960')">    def start(self):</li>
<li onclick="toggle('pre71278960', 'post71278960')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71278960', 'post71278960')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71278960', 'post71278960')">        start_time = time.time()</li>
<li onclick="toggle('pre71278960', 'post71278960')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71278960', 'post71278960')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71278960">
<li onclick="toggle('pre71278960', 'post71278960')">        with self.lock:</li>
<li onclick="toggle('pre71278960', 'post71278960')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71278960', 'post71278960')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71278960', 'post71278960')"></li>
<li onclick="toggle('pre71278960', 'post71278960')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71278960', 'post71278960')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71278960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71278960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA698&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71280400">
<ol start="150" class="pre-context" id="pre71280400">
<li onclick="toggle('pre71280400', 'post71280400')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280400', 'post71280400')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71280400', 'post71280400')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71280400', 'post71280400')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71280400', 'post71280400')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71280400', 'post71280400')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71280400', 'post71280400')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71280400', 'post71280400')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71280400">
<li onclick="toggle('pre71280400', 'post71280400')"></li>
<li onclick="toggle('pre71280400', 'post71280400')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71280400', 'post71280400')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71280400', 'post71280400')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71280400', 'post71280400')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280400', 'post71280400')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280400')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280400"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA698&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x04324030&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71279240">
<ol start="117" class="pre-context" id="pre71279240">
<li onclick="toggle('pre71279240', 'post71279240')">        try:</li>
<li onclick="toggle('pre71279240', 'post71279240')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71279240', 'post71279240')">            body = web.data().strip()</li>
<li onclick="toggle('pre71279240', 'post71279240')">            print body</li>
<li onclick="toggle('pre71279240', 'post71279240')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71279240', 'post71279240')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279240', 'post71279240')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71279240', 'post71279240')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71279240">
<li onclick="toggle('pre71279240', 'post71279240')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71279240', 'post71279240')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71279240', 'post71279240')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71279240', 'post71279240')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279240', 'post71279240')">                try:</li>
<li onclick="toggle('pre71279240', 'post71279240')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x04324030&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71280160">
<ol start="430" class="pre-context" id="pre71280160">
<li onclick="toggle('pre71280160', 'post71280160')">        def handle_class(cls):</li>
<li onclick="toggle('pre71280160', 'post71280160')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71280160', 'post71280160')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280160', 'post71280160')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71280160', 'post71280160')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280160', 'post71280160')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71280160', 'post71280160')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71280160', 'post71280160')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71280160">
<li onclick="toggle('pre71280160', 'post71280160')">            </li>
<li onclick="toggle('pre71280160', 'post71280160')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71280160', 'post71280160')">            </li>
<li onclick="toggle('pre71280160', 'post71280160')">        if f is None:</li>
<li onclick="toggle('pre71280160', 'post71280160')">            raise web.notfound()</li>
<li onclick="toggle('pre71280160', 'post71280160')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280160')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280160"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x04324030&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71280040">
<ol start="454" class="pre-context" id="pre71280040">
<li onclick="toggle('pre71280040', 'post71280040')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71280040', 'post71280040')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71280040', 'post71280040')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71280040', 'post71280040')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71280040', 'post71280040')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71280040', 'post71280040')">            else:</li>
<li onclick="toggle('pre71280040', 'post71280040')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71280040', 'post71280040')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71280040">
<li onclick="toggle('pre71280040', 'post71280040')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71280040', 'post71280040')">            return f()</li>
<li onclick="toggle('pre71280040', 'post71280040')">        else:</li>
<li onclick="toggle('pre71280040', 'post71280040')">            return web.notfound()</li>
<li onclick="toggle('pre71280040', 'post71280040')"></li>
<li onclick="toggle('pre71280040', 'post71280040')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280040')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280040"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326430&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x04326D70&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71279440">
<ol start="222" class="pre-context" id="pre71279440">
<li onclick="toggle('pre71279440', 'post71279440')"></li>
<li onclick="toggle('pre71279440', 'post71279440')">    def browser(self):</li>
<li onclick="toggle('pre71279440', 'post71279440')">        import browser</li>
<li onclick="toggle('pre71279440', 'post71279440')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71279440', 'post71279440')"></li>
<li onclick="toggle('pre71279440', 'post71279440')">    def handle(self):</li>
<li onclick="toggle('pre71279440', 'post71279440')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71279440', 'post71279440')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71279440">
<li onclick="toggle('pre71279440', 'post71279440')">        </li>
<li onclick="toggle('pre71279440', 'post71279440')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71279440', 'post71279440')">        def process(processors):</li>
<li onclick="toggle('pre71279440', 'post71279440')">            try:</li>
<li onclick="toggle('pre71279440', 'post71279440')">                if processors:</li>
<li onclick="toggle('pre71279440', 'post71279440')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279440')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279440"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71280520">
<ol start="231" class="pre-context" id="pre71280520">
<li onclick="toggle('pre71280520', 'post71280520')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280520', 'post71280520')">        def process(processors):</li>
<li onclick="toggle('pre71280520', 'post71280520')">            try:</li>
<li onclick="toggle('pre71280520', 'post71280520')">                if processors:</li>
<li onclick="toggle('pre71280520', 'post71280520')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71280520', 'post71280520')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71280520', 'post71280520')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71280520', 'post71280520')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71280520">
<li onclick="toggle('pre71280520', 'post71280520')">            except web.HTTPError:</li>
<li onclick="toggle('pre71280520', 'post71280520')">                raise</li>
<li onclick="toggle('pre71280520', 'post71280520')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71280520', 'post71280520')">                raise</li>
<li onclick="toggle('pre71280520', 'post71280520')">            except:</li>
<li onclick="toggle('pre71280520', 'post71280520')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x04326BB0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62646&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x043DDFF0&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71282160">
<ol start="81" class="pre-context" id="pre71282160">
<li onclick="toggle('pre71282160', 'post71282160')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71282160', 'post71282160')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71282160', 'post71282160')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71282160', 'post71282160')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71282160', 'post71282160')"></li>
<li onclick="toggle('pre71282160', 'post71282160')">    @staticmethod</li>
<li onclick="toggle('pre71282160', 'post71282160')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71282160', 'post71282160')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71282160">
<li onclick="toggle('pre71282160', 'post71282160')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71282160', 'post71282160')">            return tf.tell()</li>
<li onclick="toggle('pre71282160', 'post71282160')">    @staticmethod</li>
<li onclick="toggle('pre71282160', 'post71282160')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71282160', 'post71282160')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71282160', 'post71282160')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282160')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282160"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71279960">
<ol start="29" class="pre-context" id="pre71279960">
<li onclick="toggle('pre71279960', 'post71279960')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71279960', 'post71279960')"></li>
<li onclick="toggle('pre71279960', 'post71279960')">    def start(self):</li>
<li onclick="toggle('pre71279960', 'post71279960')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71279960', 'post71279960')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71279960', 'post71279960')">        start_time = time.time()</li>
<li onclick="toggle('pre71279960', 'post71279960')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71279960', 'post71279960')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71279960">
<li onclick="toggle('pre71279960', 'post71279960')">        with self.lock:</li>
<li onclick="toggle('pre71279960', 'post71279960')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71279960', 'post71279960')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71279960', 'post71279960')"></li>
<li onclick="toggle('pre71279960', 'post71279960')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71279960', 'post71279960')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA990&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71282240">
<ol start="150" class="pre-context" id="pre71282240">
<li onclick="toggle('pre71282240', 'post71282240')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71282240', 'post71282240')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71282240', 'post71282240')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71282240', 'post71282240')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71282240', 'post71282240')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71282240', 'post71282240')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71282240', 'post71282240')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71282240', 'post71282240')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71282240">
<li onclick="toggle('pre71282240', 'post71282240')"></li>
<li onclick="toggle('pre71282240', 'post71282240')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71282240', 'post71282240')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71282240', 'post71282240')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71282240', 'post71282240')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71282240', 'post71282240')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA990&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x02838CD0&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71281840">
<ol start="117" class="pre-context" id="pre71281840">
<li onclick="toggle('pre71281840', 'post71281840')">        try:</li>
<li onclick="toggle('pre71281840', 'post71281840')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71281840', 'post71281840')">            body = web.data().strip()</li>
<li onclick="toggle('pre71281840', 'post71281840')">            print body</li>
<li onclick="toggle('pre71281840', 'post71281840')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71281840', 'post71281840')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71281840', 'post71281840')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71281840', 'post71281840')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71281840">
<li onclick="toggle('pre71281840', 'post71281840')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71281840', 'post71281840')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71281840', 'post71281840')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71281840', 'post71281840')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71281840', 'post71281840')">                try:</li>
<li onclick="toggle('pre71281840', 'post71281840')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281840')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281840"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x02838CD0&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71280400">
<ol start="430" class="pre-context" id="pre71280400">
<li onclick="toggle('pre71280400', 'post71280400')">        def handle_class(cls):</li>
<li onclick="toggle('pre71280400', 'post71280400')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71280400', 'post71280400')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280400', 'post71280400')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71280400', 'post71280400')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280400', 'post71280400')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71280400', 'post71280400')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71280400', 'post71280400')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71280400">
<li onclick="toggle('pre71280400', 'post71280400')">            </li>
<li onclick="toggle('pre71280400', 'post71280400')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71280400', 'post71280400')">            </li>
<li onclick="toggle('pre71280400', 'post71280400')">        if f is None:</li>
<li onclick="toggle('pre71280400', 'post71280400')">            raise web.notfound()</li>
<li onclick="toggle('pre71280400', 'post71280400')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280400')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280400"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x02838CD0&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71280280">
<ol start="454" class="pre-context" id="pre71280280">
<li onclick="toggle('pre71280280', 'post71280280')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71280280', 'post71280280')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71280280', 'post71280280')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71280280', 'post71280280')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71280280', 'post71280280')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71280280', 'post71280280')">            else:</li>
<li onclick="toggle('pre71280280', 'post71280280')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71280280', 'post71280280')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71280280">
<li onclick="toggle('pre71280280', 'post71280280')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71280280', 'post71280280')">            return f()</li>
<li onclick="toggle('pre71280280', 'post71280280')">        else:</li>
<li onclick="toggle('pre71280280', 'post71280280')">            return web.notfound()</li>
<li onclick="toggle('pre71280280', 'post71280280')"></li>
<li onclick="toggle('pre71280280', 'post71280280')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280280')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280280"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326B30&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x043262F0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71280240">
<ol start="222" class="pre-context" id="pre71280240">
<li onclick="toggle('pre71280240', 'post71280240')"></li>
<li onclick="toggle('pre71280240', 'post71280240')">    def browser(self):</li>
<li onclick="toggle('pre71280240', 'post71280240')">        import browser</li>
<li onclick="toggle('pre71280240', 'post71280240')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71280240', 'post71280240')"></li>
<li onclick="toggle('pre71280240', 'post71280240')">    def handle(self):</li>
<li onclick="toggle('pre71280240', 'post71280240')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71280240', 'post71280240')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71280240">
<li onclick="toggle('pre71280240', 'post71280240')">        </li>
<li onclick="toggle('pre71280240', 'post71280240')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280240', 'post71280240')">        def process(processors):</li>
<li onclick="toggle('pre71280240', 'post71280240')">            try:</li>
<li onclick="toggle('pre71280240', 'post71280240')">                if processors:</li>
<li onclick="toggle('pre71280240', 'post71280240')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71280160">
<ol start="231" class="pre-context" id="pre71280160">
<li onclick="toggle('pre71280160', 'post71280160')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280160', 'post71280160')">        def process(processors):</li>
<li onclick="toggle('pre71280160', 'post71280160')">            try:</li>
<li onclick="toggle('pre71280160', 'post71280160')">                if processors:</li>
<li onclick="toggle('pre71280160', 'post71280160')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71280160', 'post71280160')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71280160', 'post71280160')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71280160', 'post71280160')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71280160">
<li onclick="toggle('pre71280160', 'post71280160')">            except web.HTTPError:</li>
<li onclick="toggle('pre71280160', 'post71280160')">                raise</li>
<li onclick="toggle('pre71280160', 'post71280160')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71280160', 'post71280160')">                raise</li>
<li onclick="toggle('pre71280160', 'post71280160')">            except:</li>
<li onclick="toggle('pre71280160', 'post71280160')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280160')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280160"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x04326830&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62648&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x04393BF0&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71281040">
<ol start="81" class="pre-context" id="pre71281040">
<li onclick="toggle('pre71281040', 'post71281040')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71281040', 'post71281040')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71281040', 'post71281040')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71281040', 'post71281040')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71281040', 'post71281040')"></li>
<li onclick="toggle('pre71281040', 'post71281040')">    @staticmethod</li>
<li onclick="toggle('pre71281040', 'post71281040')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71281040', 'post71281040')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71281040">
<li onclick="toggle('pre71281040', 'post71281040')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71281040', 'post71281040')">            return tf.tell()</li>
<li onclick="toggle('pre71281040', 'post71281040')">    @staticmethod</li>
<li onclick="toggle('pre71281040', 'post71281040')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71281040', 'post71281040')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71281040', 'post71281040')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281040')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281040"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71281520">
<ol start="29" class="pre-context" id="pre71281520">
<li onclick="toggle('pre71281520', 'post71281520')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71281520', 'post71281520')"></li>
<li onclick="toggle('pre71281520', 'post71281520')">    def start(self):</li>
<li onclick="toggle('pre71281520', 'post71281520')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71281520', 'post71281520')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71281520', 'post71281520')">        start_time = time.time()</li>
<li onclick="toggle('pre71281520', 'post71281520')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71281520', 'post71281520')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71281520">
<li onclick="toggle('pre71281520', 'post71281520')">        with self.lock:</li>
<li onclick="toggle('pre71281520', 'post71281520')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71281520', 'post71281520')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71281520', 'post71281520')"></li>
<li onclick="toggle('pre71281520', 'post71281520')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71281520', 'post71281520')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA738&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71279880">
<ol start="150" class="pre-context" id="pre71279880">
<li onclick="toggle('pre71279880', 'post71279880')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71279880', 'post71279880')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71279880', 'post71279880')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71279880', 'post71279880')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71279880', 'post71279880')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71279880', 'post71279880')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71279880', 'post71279880')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71279880', 'post71279880')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71279880">
<li onclick="toggle('pre71279880', 'post71279880')"></li>
<li onclick="toggle('pre71279880', 'post71279880')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71279880', 'post71279880')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71279880', 'post71279880')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71279880', 'post71279880')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71279880', 'post71279880')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279880')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279880"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA738&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDB90&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71280120">
<ol start="117" class="pre-context" id="pre71280120">
<li onclick="toggle('pre71280120', 'post71280120')">        try:</li>
<li onclick="toggle('pre71280120', 'post71280120')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71280120', 'post71280120')">            body = web.data().strip()</li>
<li onclick="toggle('pre71280120', 'post71280120')">            print body</li>
<li onclick="toggle('pre71280120', 'post71280120')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71280120', 'post71280120')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280120', 'post71280120')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71280120', 'post71280120')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71280120">
<li onclick="toggle('pre71280120', 'post71280120')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71280120', 'post71280120')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71280120', 'post71280120')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71280120', 'post71280120')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71280120', 'post71280120')">                try:</li>
<li onclick="toggle('pre71280120', 'post71280120')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280120')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280120"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDB90&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71281840">
<ol start="430" class="pre-context" id="pre71281840">
<li onclick="toggle('pre71281840', 'post71281840')">        def handle_class(cls):</li>
<li onclick="toggle('pre71281840', 'post71281840')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71281840', 'post71281840')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71281840', 'post71281840')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71281840', 'post71281840')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71281840', 'post71281840')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71281840', 'post71281840')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71281840', 'post71281840')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71281840">
<li onclick="toggle('pre71281840', 'post71281840')">            </li>
<li onclick="toggle('pre71281840', 'post71281840')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71281840', 'post71281840')">            </li>
<li onclick="toggle('pre71281840', 'post71281840')">        if f is None:</li>
<li onclick="toggle('pre71281840', 'post71281840')">            raise web.notfound()</li>
<li onclick="toggle('pre71281840', 'post71281840')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281840')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281840"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DDB90&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71282240">
<ol start="454" class="pre-context" id="pre71282240">
<li onclick="toggle('pre71282240', 'post71282240')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71282240', 'post71282240')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71282240', 'post71282240')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71282240', 'post71282240')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71282240', 'post71282240')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71282240', 'post71282240')">            else:</li>
<li onclick="toggle('pre71282240', 'post71282240')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71282240', 'post71282240')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71282240">
<li onclick="toggle('pre71282240', 'post71282240')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71282240', 'post71282240')">            return f()</li>
<li onclick="toggle('pre71282240', 'post71282240')">        else:</li>
<li onclick="toggle('pre71282240', 'post71282240')">            return web.notfound()</li>
<li onclick="toggle('pre71282240', 'post71282240')"></li>
<li onclick="toggle('pre71282240', 'post71282240')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326DF0&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x04326EB0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71282520">
<ol start="222" class="pre-context" id="pre71282520">
<li onclick="toggle('pre71282520', 'post71282520')"></li>
<li onclick="toggle('pre71282520', 'post71282520')">    def browser(self):</li>
<li onclick="toggle('pre71282520', 'post71282520')">        import browser</li>
<li onclick="toggle('pre71282520', 'post71282520')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71282520', 'post71282520')"></li>
<li onclick="toggle('pre71282520', 'post71282520')">    def handle(self):</li>
<li onclick="toggle('pre71282520', 'post71282520')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71282520', 'post71282520')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71282520">
<li onclick="toggle('pre71282520', 'post71282520')">        </li>
<li onclick="toggle('pre71282520', 'post71282520')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71282520', 'post71282520')">        def process(processors):</li>
<li onclick="toggle('pre71282520', 'post71282520')">            try:</li>
<li onclick="toggle('pre71282520', 'post71282520')">                if processors:</li>
<li onclick="toggle('pre71282520', 'post71282520')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71282520')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71282520"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71280280">
<ol start="231" class="pre-context" id="pre71280280">
<li onclick="toggle('pre71280280', 'post71280280')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280280', 'post71280280')">        def process(processors):</li>
<li onclick="toggle('pre71280280', 'post71280280')">            try:</li>
<li onclick="toggle('pre71280280', 'post71280280')">                if processors:</li>
<li onclick="toggle('pre71280280', 'post71280280')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71280280', 'post71280280')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71280280', 'post71280280')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71280280', 'post71280280')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71280280">
<li onclick="toggle('pre71280280', 'post71280280')">            except web.HTTPError:</li>
<li onclick="toggle('pre71280280', 'post71280280')">                raise</li>
<li onclick="toggle('pre71280280', 'post71280280')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71280280', 'post71280280')">                raise</li>
<li onclick="toggle('pre71280280', 'post71280280')">            except:</li>
<li onclick="toggle('pre71280280', 'post71280280')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280280')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280280"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x04326130&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62650&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0293E670&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.KeyError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.KeyError&#39;&gt; at /rest/logging</h1>
  <h2>&#39;c__programdata_vmware_vdm_logs&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in stop, line 59</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>stop</code>
<div class="context" id="c71279000">
<ol start="52" class="pre-context" id="pre71279000">
<li onclick="toggle('pre71279000', 'post71279000')">            os.mkdir(dst_dir)</li>
<li onclick="toggle('pre71279000', 'post71279000')"></li>
<li onclick="toggle('pre71279000', 'post71279000')">        # logfiles_before show the files when call start method</li>
<li onclick="toggle('pre71279000', 'post71279000')">        # logfiles_now show the files when call stop method</li>
<li onclick="toggle('pre71279000', 'post71279000')">        # logfile_new show new files during start and stop</li>
<li onclick="toggle('pre71279000', 'post71279000')">        logfiles_before = []</li>
<li onclick="toggle('pre71279000', 'post71279000')">        # handle logfiles_before stop</li>
</ol>
<ol start="59" class="context-line"><li onclick="toggle('pre71279000', 'post71279000')">        for old_file,position in common_data[self.db_key]: <span>...</span></li></ol>
<ol start='60' class="post-context" id="post71279000">
<li onclick="toggle('pre71279000', 'post71279000')">            logfiles_before.append(old_file)</li>
<li onclick="toggle('pre71279000', 'post71279000')">            dst_file = os.path.join(dst_dir,old_file)</li>
<li onclick="toggle('pre71279000', 'post71279000')">            content = &#39;&#39;</li>
<li onclick="toggle('pre71279000', 'post71279000')">            logfile_full_name = os.path.join(self.src_dir,old_file)</li>
<li onclick="toggle('pre71279000', 'post71279000')">            if not os.path.exists(logfile_full_name):</li>
<li onclick="toggle('pre71279000', 'post71279000')">                continue</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279000')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279000"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dst_dir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto\\20150929-0232&#39;</div></td></tr>
<tr><td>logfiles_before</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x028375D0&gt;</div></td></tr>
<tr><td>stop_time</td><td class="code"><div>1443519150.74</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_stoploggingrequest</code>
<div class="context" id="c71280160">
<ol start="161" class="pre-context" id="pre71280160">
<li onclick="toggle('pre71280160', 'post71280160')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71280160', 'post71280160')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71280160', 'post71280160')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71280160', 'post71280160')">        dstdir = logcaptor.LogCaptor._replace_username(dstdir)</li>
<li onclick="toggle('pre71280160', 'post71280160')">        if not os.path.exists(dstdir):</li>
<li onclick="toggle('pre71280160', 'post71280160')">            os.mkdir(dstdir)</li>
<li onclick="toggle('pre71280160', 'post71280160')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="168" class="context-line"><li onclick="toggle('pre71280160', 'post71280160')">        lc.stop(dstdir) <span>...</span></li></ol>
<ol start='169' class="post-context" id="post71280160">
<li onclick="toggle('pre71280160', 'post71280160')"></li>
<li onclick="toggle('pre71280160', 'post71280160')"></li>
<li onclick="toggle('pre71280160', 'post71280160')">    def handle_ziplogsrequest(self,msgobj):</li>
<li onclick="toggle('pre71280160', 'post71280160')">        request = msgobj[&#39;ziplogsrequest&#39;]</li>
<li onclick="toggle('pre71280160', 'post71280160')">        dstdir = logcaptor.LogCaptor._replace_username(request[&#39;dstdir&#39;])</li>
<li onclick="toggle('pre71280160', 'post71280160')">        logcaptor.LogCaptor.zip_logs(dstdir)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280160')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280160"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x028375D0&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;stoploggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                        &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                   &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;}}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDB70&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71281480">
<ol start="123" class="pre-context" id="pre71281480">
<li onclick="toggle('pre71281480', 'post71281480')">                try:</li>
<li onclick="toggle('pre71281480', 'post71281480')">                    self.handle_startloggingrequest(msgobj)</li>
<li onclick="toggle('pre71281480', 'post71281480')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71281480', 'post71281480')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71281480', 'post71281480')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71281480', 'post71281480')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71281480', 'post71281480')">                try:</li>
</ol>
<ol start="130" class="context-line"><li onclick="toggle('pre71281480', 'post71281480')">                    self.handle_stoploggingrequest(msgobj) <span>...</span></li></ol>
<ol start='131' class="post-context" id="post71281480">
<li onclick="toggle('pre71281480', 'post71281480')">                    return StopLoggingResponseJSON</li>
<li onclick="toggle('pre71281480', 'post71281480')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71281480', 'post71281480')">                    return StopLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71281480', 'post71281480')">            elif &#39;ziplogsrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71281480', 'post71281480')">                try:</li>
<li onclick="toggle('pre71281480', 'post71281480')">                    self.handle_ziplogsrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281480')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281480"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;stoploggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;stoploggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                        &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                   &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;}}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DDB70&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71279960">
<ol start="430" class="pre-context" id="pre71279960">
<li onclick="toggle('pre71279960', 'post71279960')">        def handle_class(cls):</li>
<li onclick="toggle('pre71279960', 'post71279960')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71279960', 'post71279960')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71279960', 'post71279960')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71279960', 'post71279960')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71279960', 'post71279960')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71279960', 'post71279960')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71279960', 'post71279960')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71279960">
<li onclick="toggle('pre71279960', 'post71279960')">            </li>
<li onclick="toggle('pre71279960', 'post71279960')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71279960', 'post71279960')">            </li>
<li onclick="toggle('pre71279960', 'post71279960')">        if f is None:</li>
<li onclick="toggle('pre71279960', 'post71279960')">            raise web.notfound()</li>
<li onclick="toggle('pre71279960', 'post71279960')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279960')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279960"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DDB70&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71280880">
<ol start="454" class="pre-context" id="pre71280880">
<li onclick="toggle('pre71280880', 'post71280880')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71280880', 'post71280880')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71280880', 'post71280880')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71280880', 'post71280880')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71280880', 'post71280880')">            else:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71280880', 'post71280880')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71280880">
<li onclick="toggle('pre71280880', 'post71280880')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71280880', 'post71280880')">            return f()</li>
<li onclick="toggle('pre71280880', 'post71280880')">        else:</li>
<li onclick="toggle('pre71280880', 'post71280880')">            return web.notfound()</li>
<li onclick="toggle('pre71280880', 'post71280880')"></li>
<li onclick="toggle('pre71280880', 'post71280880')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280880')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280880"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04326430&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x04326EB0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71280080">
<ol start="222" class="pre-context" id="pre71280080">
<li onclick="toggle('pre71280080', 'post71280080')"></li>
<li onclick="toggle('pre71280080', 'post71280080')">    def browser(self):</li>
<li onclick="toggle('pre71280080', 'post71280080')">        import browser</li>
<li onclick="toggle('pre71280080', 'post71280080')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71280080', 'post71280080')"></li>
<li onclick="toggle('pre71280080', 'post71280080')">    def handle(self):</li>
<li onclick="toggle('pre71280080', 'post71280080')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71280080', 'post71280080')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71280080">
<li onclick="toggle('pre71280080', 'post71280080')">        </li>
<li onclick="toggle('pre71280080', 'post71280080')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280080', 'post71280080')">        def process(processors):</li>
<li onclick="toggle('pre71280080', 'post71280080')">            try:</li>
<li onclick="toggle('pre71280080', 'post71280080')">                if processors:</li>
<li onclick="toggle('pre71280080', 'post71280080')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280080')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280080"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71279880">
<ol start="231" class="pre-context" id="pre71279880">
<li onclick="toggle('pre71279880', 'post71279880')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71279880', 'post71279880')">        def process(processors):</li>
<li onclick="toggle('pre71279880', 'post71279880')">            try:</li>
<li onclick="toggle('pre71279880', 'post71279880')">                if processors:</li>
<li onclick="toggle('pre71279880', 'post71279880')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71279880', 'post71279880')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71279880', 'post71279880')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71279880', 'post71279880')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71279880">
<li onclick="toggle('pre71279880', 'post71279880')">            except web.HTTPError:</li>
<li onclick="toggle('pre71279880', 'post71279880')">                raise</li>
<li onclick="toggle('pre71279880', 'post71279880')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71279880', 'post71279880')">                raise</li>
<li onclick="toggle('pre71279880', 'post71279880')">            except:</li>
<li onclick="toggle('pre71279880', 'post71279880')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279880')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279880"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x04326CF0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;stoploggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;165&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62652&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0293E0B0&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"Error"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"Error"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"Error"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c71279000">
<ol start="81" class="pre-context" id="pre71279000">
<li onclick="toggle('pre71279000', 'post71279000')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre71279000', 'post71279000')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre71279000', 'post71279000')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre71279000', 'post71279000')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre71279000', 'post71279000')"></li>
<li onclick="toggle('pre71279000', 'post71279000')">    @staticmethod</li>
<li onclick="toggle('pre71279000', 'post71279000')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre71279000', 'post71279000')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post71279000">
<li onclick="toggle('pre71279000', 'post71279000')">            tf.seek(0,2)</li>
<li onclick="toggle('pre71279000', 'post71279000')">            return tf.tell()</li>
<li onclick="toggle('pre71279000', 'post71279000')">    @staticmethod</li>
<li onclick="toggle('pre71279000', 'post71279000')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre71279000', 'post71279000')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre71279000', 'post71279000')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279000')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279000"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\debug-2015-09-18-171534.txt&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c71280240">
<ol start="29" class="pre-context" id="pre71280240">
<li onclick="toggle('pre71280240', 'post71280240')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre71280240', 'post71280240')"></li>
<li onclick="toggle('pre71280240', 'post71280240')">    def start(self):</li>
<li onclick="toggle('pre71280240', 'post71280240')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre71280240', 'post71280240')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre71280240', 'post71280240')">        start_time = time.time()</li>
<li onclick="toggle('pre71280240', 'post71280240')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre71280240', 'post71280240')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post71280240">
<li onclick="toggle('pre71280240', 'post71280240')">        with self.lock:</li>
<li onclick="toggle('pre71280240', 'post71280240')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre71280240', 'post71280240')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre71280240', 'post71280240')"></li>
<li onclick="toggle('pre71280240', 'post71280240')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre71280240', 'post71280240')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280240')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280240"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;debug-2015-09-18-171534.txt&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA080&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c71279640">
<ol start="150" class="pre-context" id="pre71279640">
<li onclick="toggle('pre71279640', 'post71279640')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71279640', 'post71279640')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre71279640', 'post71279640')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre71279640', 'post71279640')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre71279640', 'post71279640')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre71279640', 'post71279640')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre71279640', 'post71279640')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre71279640', 'post71279640')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post71279640">
<li onclick="toggle('pre71279640', 'post71279640')"></li>
<li onclick="toggle('pre71279640', 'post71279640')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre71279640', 'post71279640')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre71279640', 'post71279640')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre71279640', 'post71279640')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre71279640', 'post71279640')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279640')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279640"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x043FA080&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DD310&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c71279560">
<ol start="117" class="pre-context" id="pre71279560">
<li onclick="toggle('pre71279560', 'post71279560')">        try:</li>
<li onclick="toggle('pre71279560', 'post71279560')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre71279560', 'post71279560')">            body = web.data().strip()</li>
<li onclick="toggle('pre71279560', 'post71279560')">            print body</li>
<li onclick="toggle('pre71279560', 'post71279560')">            msgobj = eval(body)</li>
<li onclick="toggle('pre71279560', 'post71279560')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279560', 'post71279560')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre71279560', 'post71279560')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post71279560">
<li onclick="toggle('pre71279560', 'post71279560')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre71279560', 'post71279560')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre71279560', 'post71279560')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre71279560', 'post71279560')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre71279560', 'post71279560')">                try:</li>
<li onclick="toggle('pre71279560', 'post71279560')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71279560')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71279560"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043DD310&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c71280080">
<ol start="430" class="pre-context" id="pre71280080">
<li onclick="toggle('pre71280080', 'post71280080')">        def handle_class(cls):</li>
<li onclick="toggle('pre71280080', 'post71280080')">            meth = web.ctx.method</li>
<li onclick="toggle('pre71280080', 'post71280080')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280080', 'post71280080')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre71280080', 'post71280080')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre71280080', 'post71280080')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre71280080', 'post71280080')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre71280080', 'post71280080')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post71280080">
<li onclick="toggle('pre71280080', 'post71280080')">            </li>
<li onclick="toggle('pre71280080', 'post71280080')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre71280080', 'post71280080')">            </li>
<li onclick="toggle('pre71280080', 'post71280080')">        if f is None:</li>
<li onclick="toggle('pre71280080', 'post71280080')">            raise web.notfound()</li>
<li onclick="toggle('pre71280080', 'post71280080')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280080')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280080"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043DD310&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c71281600">
<ol start="454" class="pre-context" id="pre71281600">
<li onclick="toggle('pre71281600', 'post71281600')">                raise web.redirect(url)</li>
<li onclick="toggle('pre71281600', 'post71281600')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre71281600', 'post71281600')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre71281600', 'post71281600')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre71281600', 'post71281600')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre71281600', 'post71281600')">            else:</li>
<li onclick="toggle('pre71281600', 'post71281600')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre71281600', 'post71281600')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post71281600">
<li onclick="toggle('pre71281600', 'post71281600')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre71281600', 'post71281600')">            return f()</li>
<li onclick="toggle('pre71281600', 'post71281600')">        else:</li>
<li onclick="toggle('pre71281600', 'post71281600')">            return web.notfound()</li>
<li onclick="toggle('pre71281600', 'post71281600')"></li>
<li onclick="toggle('pre71281600', 'post71281600')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281600')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281600"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0274ED50&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x02836B70&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x02836970&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x04325AB0&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x04325270&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c71281880">
<ol start="222" class="pre-context" id="pre71281880">
<li onclick="toggle('pre71281880', 'post71281880')"></li>
<li onclick="toggle('pre71281880', 'post71281880')">    def browser(self):</li>
<li onclick="toggle('pre71281880', 'post71281880')">        import browser</li>
<li onclick="toggle('pre71281880', 'post71281880')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre71281880', 'post71281880')"></li>
<li onclick="toggle('pre71281880', 'post71281880')">    def handle(self):</li>
<li onclick="toggle('pre71281880', 'post71281880')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre71281880', 'post71281880')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post71281880">
<li onclick="toggle('pre71281880', 'post71281880')">        </li>
<li onclick="toggle('pre71281880', 'post71281880')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71281880', 'post71281880')">        def process(processors):</li>
<li onclick="toggle('pre71281880', 'post71281880')">            try:</li>
<li onclick="toggle('pre71281880', 'post71281880')">                if processors:</li>
<li onclick="toggle('pre71281880', 'post71281880')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71281880')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71281880"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c71280880">
<ol start="231" class="pre-context" id="pre71280880">
<li onclick="toggle('pre71280880', 'post71280880')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre71280880', 'post71280880')">        def process(processors):</li>
<li onclick="toggle('pre71280880', 'post71280880')">            try:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                if processors:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre71280880', 'post71280880')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre71280880', 'post71280880')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre71280880', 'post71280880')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post71280880">
<li onclick="toggle('pre71280880', 'post71280880')">            except web.HTTPError:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                raise</li>
<li onclick="toggle('pre71280880', 'post71280880')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre71280880', 'post71280880')">                raise</li>
<li onclick="toggle('pre71280880', 'post71280880')">            except:</li>
<li onclick="toggle('pre71280880', 'post71280880')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '71280880')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v71280880"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x043253F0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x027878C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x027878C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62729&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0039D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x043B5BD0&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\PCoIP Secure Gateway&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>c:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>c:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c40279096">
<ol start="81" class="pre-context" id="pre40279096">
<li onclick="toggle('pre40279096', 'post40279096')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre40279096', 'post40279096')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre40279096', 'post40279096')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre40279096', 'post40279096')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre40279096', 'post40279096')"></li>
<li onclick="toggle('pre40279096', 'post40279096')">    @staticmethod</li>
<li onclick="toggle('pre40279096', 'post40279096')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre40279096', 'post40279096')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post40279096">
<li onclick="toggle('pre40279096', 'post40279096')">            tf.seek(0,2)</li>
<li onclick="toggle('pre40279096', 'post40279096')">            return tf.tell()</li>
<li onclick="toggle('pre40279096', 'post40279096')">    @staticmethod</li>
<li onclick="toggle('pre40279096', 'post40279096')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre40279096', 'post40279096')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre40279096', 'post40279096')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40279096')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40279096"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\PCoIP Secure Gateway&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c40279136">
<ol start="29" class="pre-context" id="pre40279136">
<li onclick="toggle('pre40279136', 'post40279136')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre40279136', 'post40279136')"></li>
<li onclick="toggle('pre40279136', 'post40279136')">    def start(self):</li>
<li onclick="toggle('pre40279136', 'post40279136')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre40279136', 'post40279136')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre40279136', 'post40279136')">        start_time = time.time()</li>
<li onclick="toggle('pre40279136', 'post40279136')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre40279136', 'post40279136')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post40279136">
<li onclick="toggle('pre40279136', 'post40279136')">        with self.lock:</li>
<li onclick="toggle('pre40279136', 'post40279136')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre40279136', 'post40279136')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre40279136', 'post40279136')"></li>
<li onclick="toggle('pre40279136', 'post40279136')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre40279136', 'post40279136')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40279136')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40279136"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;PCoIP Secure Gateway&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_000015bc.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-4640.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-5792.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x02669AA8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c40279176">
<ol start="150" class="pre-context" id="pre40279176">
<li onclick="toggle('pre40279176', 'post40279176')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre40279176', 'post40279176')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre40279176', 'post40279176')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre40279176', 'post40279176')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre40279176', 'post40279176')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre40279176', 'post40279176')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre40279176', 'post40279176')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre40279176', 'post40279176')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post40279176">
<li onclick="toggle('pre40279176', 'post40279176')"></li>
<li onclick="toggle('pre40279176', 'post40279176')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre40279176', 'post40279176')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre40279176', 'post40279176')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre40279176', 'post40279176')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre40279176', 'post40279176')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40279176')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40279176"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x02669AA8&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x0265D890&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c40279216">
<ol start="117" class="pre-context" id="pre40279216">
<li onclick="toggle('pre40279216', 'post40279216')">        try:</li>
<li onclick="toggle('pre40279216', 'post40279216')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre40279216', 'post40279216')">            body = web.data().strip()</li>
<li onclick="toggle('pre40279216', 'post40279216')">            print body</li>
<li onclick="toggle('pre40279216', 'post40279216')">            msgobj = eval(body)</li>
<li onclick="toggle('pre40279216', 'post40279216')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre40279216', 'post40279216')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre40279216', 'post40279216')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post40279216">
<li onclick="toggle('pre40279216', 'post40279216')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre40279216', 'post40279216')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre40279216', 'post40279216')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre40279216', 'post40279216')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre40279216', 'post40279216')">                try:</li>
<li onclick="toggle('pre40279216', 'post40279216')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40279216')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40279216"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x0265D890&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c40279296">
<ol start="430" class="pre-context" id="pre40279296">
<li onclick="toggle('pre40279296', 'post40279296')">        def handle_class(cls):</li>
<li onclick="toggle('pre40279296', 'post40279296')">            meth = web.ctx.method</li>
<li onclick="toggle('pre40279296', 'post40279296')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre40279296', 'post40279296')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre40279296', 'post40279296')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre40279296', 'post40279296')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre40279296', 'post40279296')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre40279296', 'post40279296')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post40279296">
<li onclick="toggle('pre40279296', 'post40279296')">            </li>
<li onclick="toggle('pre40279296', 'post40279296')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre40279296', 'post40279296')">            </li>
<li onclick="toggle('pre40279296', 'post40279296')">        if f is None:</li>
<li onclick="toggle('pre40279296', 'post40279296')">            raise web.notfound()</li>
<li onclick="toggle('pre40279296', 'post40279296')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40279296')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40279296"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x0265D890&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c40279256">
<ol start="454" class="pre-context" id="pre40279256">
<li onclick="toggle('pre40279256', 'post40279256')">                raise web.redirect(url)</li>
<li onclick="toggle('pre40279256', 'post40279256')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre40279256', 'post40279256')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre40279256', 'post40279256')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre40279256', 'post40279256')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre40279256', 'post40279256')">            else:</li>
<li onclick="toggle('pre40279256', 'post40279256')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre40279256', 'post40279256')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post40279256">
<li onclick="toggle('pre40279256', 'post40279256')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre40279256', 'post40279256')">            return f()</li>
<li onclick="toggle('pre40279256', 'post40279256')">        else:</li>
<li onclick="toggle('pre40279256', 'post40279256')">            return web.notfound()</li>
<li onclick="toggle('pre40279256', 'post40279256')"></li>
<li onclick="toggle('pre40279256', 'post40279256')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40279256')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40279256"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;c:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x02565CB0&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0265C7F0&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;c:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;c:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;c:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;c:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0265C5F0&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;c:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;c:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0265C870&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0265C8F0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x025C3A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c40279336">
<ol start="222" class="pre-context" id="pre40279336">
<li onclick="toggle('pre40279336', 'post40279336')"></li>
<li onclick="toggle('pre40279336', 'post40279336')">    def browser(self):</li>
<li onclick="toggle('pre40279336', 'post40279336')">        import browser</li>
<li onclick="toggle('pre40279336', 'post40279336')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre40279336', 'post40279336')"></li>
<li onclick="toggle('pre40279336', 'post40279336')">    def handle(self):</li>
<li onclick="toggle('pre40279336', 'post40279336')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre40279336', 'post40279336')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post40279336">
<li onclick="toggle('pre40279336', 'post40279336')">        </li>
<li onclick="toggle('pre40279336', 'post40279336')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre40279336', 'post40279336')">        def process(processors):</li>
<li onclick="toggle('pre40279336', 'post40279336')">            try:</li>
<li onclick="toggle('pre40279336', 'post40279336')">                if processors:</li>
<li onclick="toggle('pre40279336', 'post40279336')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40279336')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40279336"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x025C3A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c40279376">
<ol start="231" class="pre-context" id="pre40279376">
<li onclick="toggle('pre40279376', 'post40279376')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre40279376', 'post40279376')">        def process(processors):</li>
<li onclick="toggle('pre40279376', 'post40279376')">            try:</li>
<li onclick="toggle('pre40279376', 'post40279376')">                if processors:</li>
<li onclick="toggle('pre40279376', 'post40279376')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre40279376', 'post40279376')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre40279376', 'post40279376')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre40279376', 'post40279376')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post40279376">
<li onclick="toggle('pre40279376', 'post40279376')">            except web.HTTPError:</li>
<li onclick="toggle('pre40279376', 'post40279376')">                raise</li>
<li onclick="toggle('pre40279376', 'post40279376')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre40279376', 'post40279376')">                raise</li>
<li onclick="toggle('pre40279376', 'post40279376')">            except:</li>
<li onclick="toggle('pre40279376', 'post40279376')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40279376')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40279376"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0265C3B0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x025C3A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x025C3A80&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62569&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x01D8D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0265D270&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\PCoIP Secure Gateway&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>c:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>c:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c40545416">
<ol start="81" class="pre-context" id="pre40545416">
<li onclick="toggle('pre40545416', 'post40545416')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre40545416', 'post40545416')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre40545416', 'post40545416')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre40545416', 'post40545416')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre40545416', 'post40545416')"></li>
<li onclick="toggle('pre40545416', 'post40545416')">    @staticmethod</li>
<li onclick="toggle('pre40545416', 'post40545416')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre40545416', 'post40545416')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post40545416">
<li onclick="toggle('pre40545416', 'post40545416')">            tf.seek(0,2)</li>
<li onclick="toggle('pre40545416', 'post40545416')">            return tf.tell()</li>
<li onclick="toggle('pre40545416', 'post40545416')">    @staticmethod</li>
<li onclick="toggle('pre40545416', 'post40545416')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre40545416', 'post40545416')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre40545416', 'post40545416')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40545416')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40545416"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\PCoIP Secure Gateway&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c40512568">
<ol start="29" class="pre-context" id="pre40512568">
<li onclick="toggle('pre40512568', 'post40512568')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre40512568', 'post40512568')"></li>
<li onclick="toggle('pre40512568', 'post40512568')">    def start(self):</li>
<li onclick="toggle('pre40512568', 'post40512568')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre40512568', 'post40512568')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre40512568', 'post40512568')">        start_time = time.time()</li>
<li onclick="toggle('pre40512568', 'post40512568')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre40512568', 'post40512568')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post40512568">
<li onclick="toggle('pre40512568', 'post40512568')">        with self.lock:</li>
<li onclick="toggle('pre40512568', 'post40512568')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre40512568', 'post40512568')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre40512568', 'post40512568')"></li>
<li onclick="toggle('pre40512568', 'post40512568')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre40512568', 'post40512568')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40512568')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40512568"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;PCoIP Secure Gateway&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_000015bc.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-4640.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-5792.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x025C3C60&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c40077872">
<ol start="150" class="pre-context" id="pre40077872">
<li onclick="toggle('pre40077872', 'post40077872')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre40077872', 'post40077872')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre40077872', 'post40077872')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre40077872', 'post40077872')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre40077872', 'post40077872')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre40077872', 'post40077872')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre40077872', 'post40077872')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre40077872', 'post40077872')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post40077872">
<li onclick="toggle('pre40077872', 'post40077872')"></li>
<li onclick="toggle('pre40077872', 'post40077872')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre40077872', 'post40077872')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre40077872', 'post40077872')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre40077872', 'post40077872')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre40077872', 'post40077872')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40077872')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40077872"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x025C3C60&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043515B0&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c40077952">
<ol start="117" class="pre-context" id="pre40077952">
<li onclick="toggle('pre40077952', 'post40077952')">        try:</li>
<li onclick="toggle('pre40077952', 'post40077952')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre40077952', 'post40077952')">            body = web.data().strip()</li>
<li onclick="toggle('pre40077952', 'post40077952')">            print body</li>
<li onclick="toggle('pre40077952', 'post40077952')">            msgobj = eval(body)</li>
<li onclick="toggle('pre40077952', 'post40077952')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre40077952', 'post40077952')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre40077952', 'post40077952')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post40077952">
<li onclick="toggle('pre40077952', 'post40077952')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre40077952', 'post40077952')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre40077952', 'post40077952')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre40077952', 'post40077952')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre40077952', 'post40077952')">                try:</li>
<li onclick="toggle('pre40077952', 'post40077952')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40077952')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40077952"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x043515B0&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c38801320">
<ol start="430" class="pre-context" id="pre38801320">
<li onclick="toggle('pre38801320', 'post38801320')">        def handle_class(cls):</li>
<li onclick="toggle('pre38801320', 'post38801320')">            meth = web.ctx.method</li>
<li onclick="toggle('pre38801320', 'post38801320')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre38801320', 'post38801320')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre38801320', 'post38801320')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre38801320', 'post38801320')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre38801320', 'post38801320')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre38801320', 'post38801320')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post38801320">
<li onclick="toggle('pre38801320', 'post38801320')">            </li>
<li onclick="toggle('pre38801320', 'post38801320')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre38801320', 'post38801320')">            </li>
<li onclick="toggle('pre38801320', 'post38801320')">        if f is None:</li>
<li onclick="toggle('pre38801320', 'post38801320')">            raise web.notfound()</li>
<li onclick="toggle('pre38801320', 'post38801320')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '38801320')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v38801320"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x043515B0&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c39928136">
<ol start="454" class="pre-context" id="pre39928136">
<li onclick="toggle('pre39928136', 'post39928136')">                raise web.redirect(url)</li>
<li onclick="toggle('pre39928136', 'post39928136')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre39928136', 'post39928136')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre39928136', 'post39928136')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre39928136', 'post39928136')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre39928136', 'post39928136')">            else:</li>
<li onclick="toggle('pre39928136', 'post39928136')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre39928136', 'post39928136')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post39928136">
<li onclick="toggle('pre39928136', 'post39928136')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre39928136', 'post39928136')">            return f()</li>
<li onclick="toggle('pre39928136', 'post39928136')">        else:</li>
<li onclick="toggle('pre39928136', 'post39928136')">            return web.notfound()</li>
<li onclick="toggle('pre39928136', 'post39928136')"></li>
<li onclick="toggle('pre39928136', 'post39928136')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '39928136')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v39928136"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;c:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x02565CB0&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0265C7F0&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;c:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;c:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;c:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;c:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0265C5F0&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;c:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;c:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0268F930&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0268F8F0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x025C3A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c39862024">
<ol start="222" class="pre-context" id="pre39862024">
<li onclick="toggle('pre39862024', 'post39862024')"></li>
<li onclick="toggle('pre39862024', 'post39862024')">    def browser(self):</li>
<li onclick="toggle('pre39862024', 'post39862024')">        import browser</li>
<li onclick="toggle('pre39862024', 'post39862024')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre39862024', 'post39862024')"></li>
<li onclick="toggle('pre39862024', 'post39862024')">    def handle(self):</li>
<li onclick="toggle('pre39862024', 'post39862024')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre39862024', 'post39862024')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post39862024">
<li onclick="toggle('pre39862024', 'post39862024')">        </li>
<li onclick="toggle('pre39862024', 'post39862024')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre39862024', 'post39862024')">        def process(processors):</li>
<li onclick="toggle('pre39862024', 'post39862024')">            try:</li>
<li onclick="toggle('pre39862024', 'post39862024')">                if processors:</li>
<li onclick="toggle('pre39862024', 'post39862024')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '39862024')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v39862024"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x025C3A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c40366888">
<ol start="231" class="pre-context" id="pre40366888">
<li onclick="toggle('pre40366888', 'post40366888')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre40366888', 'post40366888')">        def process(processors):</li>
<li onclick="toggle('pre40366888', 'post40366888')">            try:</li>
<li onclick="toggle('pre40366888', 'post40366888')">                if processors:</li>
<li onclick="toggle('pre40366888', 'post40366888')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre40366888', 'post40366888')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre40366888', 'post40366888')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre40366888', 'post40366888')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post40366888">
<li onclick="toggle('pre40366888', 'post40366888')">            except web.HTTPError:</li>
<li onclick="toggle('pre40366888', 'post40366888')">                raise</li>
<li onclick="toggle('pre40366888', 'post40366888')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre40366888', 'post40366888')">                raise</li>
<li onclick="toggle('pre40366888', 'post40366888')">            except:</li>
<li onclick="toggle('pre40366888', 'post40366888')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '40366888')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v40366888"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x026906B0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x025C3A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x025C3A80&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62572&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x01D8D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x027700F0&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.IOError&#39;&gt; at /rest/logging</h1>
  <h2>[Errno 13] Permission denied: &#39;C:\\ProgramData\\VMware\\VDM\\logs\\PCoIP Secure Gateway&#39;</h2>
  <table><tr>
    <th>Python</th>
    <td>c:\autotool\impl\logcaptor.py in _last_position, line 88</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.40.183:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>c:\autotool\impl\logcaptor.py</code> in <code>_last_position</code>
<div class="context" id="c41065888">
<ol start="81" class="pre-context" id="pre41065888">
<li onclick="toggle('pre41065888', 'post41065888')">            shutil.copy(src,des)</li>
<li onclick="toggle('pre41065888', 'post41065888')">        # if no new files in this dir, then remove it</li>
<li onclick="toggle('pre41065888', 'post41065888')">        if not os.listdir(dst_dir):</li>
<li onclick="toggle('pre41065888', 'post41065888')">            os.rmdir(dst_dir)</li>
<li onclick="toggle('pre41065888', 'post41065888')"></li>
<li onclick="toggle('pre41065888', 'post41065888')">    @staticmethod</li>
<li onclick="toggle('pre41065888', 'post41065888')">    def _last_position(filename):</li>
</ol>
<ol start="88" class="context-line"><li onclick="toggle('pre41065888', 'post41065888')">        with open(filename,&#39;r&#39;) as tf: <span>...</span></li></ol>
<ol start='89' class="post-context" id="post41065888">
<li onclick="toggle('pre41065888', 'post41065888')">            tf.seek(0,2)</li>
<li onclick="toggle('pre41065888', 'post41065888')">            return tf.tell()</li>
<li onclick="toggle('pre41065888', 'post41065888')">    @staticmethod</li>
<li onclick="toggle('pre41065888', 'post41065888')">    def _replace_username(dirname):</li>
<li onclick="toggle('pre41065888', 'post41065888')">        real_username = getpass.getuser()</li>
<li onclick="toggle('pre41065888', 'post41065888')">        return dirname.replace(&#39;&lt;username&gt;&#39;,real_username)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '41065888')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v41065888"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>filename</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs\\PCoIP Secure Gateway&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\impl\logcaptor.py</code> in <code>start</code>
<div class="context" id="c41065928">
<ol start="29" class="pre-context" id="pre41065928">
<li onclick="toggle('pre41065928', 'post41065928')">        self.db_key = str.lower(re.sub(r&#39;\\|:|/&#39;,&#39;_&#39;,self.src_dir))</li>
<li onclick="toggle('pre41065928', 'post41065928')"></li>
<li onclick="toggle('pre41065928', 'post41065928')">    def start(self):</li>
<li onclick="toggle('pre41065928', 'post41065928')">        global sub_dirname,start_time,common_data</li>
<li onclick="toggle('pre41065928', 'post41065928')">        sub_dirname= time.strftime(&#39;%Y%m%d-%H%M&#39;)</li>
<li onclick="toggle('pre41065928', 'post41065928')">        start_time = time.time()</li>
<li onclick="toggle('pre41065928', 'post41065928')">        logfiles = self.logfiles</li>
</ol>
<ol start="36" class="context-line"><li onclick="toggle('pre41065928', 'post41065928')">        lastpositions = [self._last_position(os.path.join(self.src_dir,f)) for f in logfiles] <span>...</span></li></ol>
<ol start='37' class="post-context" id="post41065928">
<li onclick="toggle('pre41065928', 'post41065928')">        with self.lock:</li>
<li onclick="toggle('pre41065928', 'post41065928')">            common_data[self.db_key] = []</li>
<li onclick="toggle('pre41065928', 'post41065928')">            common_data[self.db_key] = zip(logfiles,lastpositions)</li>
<li onclick="toggle('pre41065928', 'post41065928')"></li>
<li onclick="toggle('pre41065928', 'post41065928')">    def stop(self,dst_dir):</li>
<li onclick="toggle('pre41065928', 'post41065928')">        global sub_dirname,start_time,common_data</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '41065928')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v41065928"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>f</td><td class="code"><div>&#39;PCoIP Secure Gateway&#39;</div></td></tr>
<tr><td>logfiles</td><td class="code"><div>[&#39;debug-2015-09-18-171534.txt&#39;,
 &#39;debug-2015-09-19-180642.txt&#39;,
 &#39;debug-2015-09-20-190103.txt&#39;,
 &#39;debug-2015-09-21-095143.txt&#39;,
 &#39;debug-2015-09-21-232838.txt&#39;,
 &#39;debug-2015-09-22-104245.txt&#39;,
 &#39;debug-2015-09-23-102507.txt&#39;,
 &#39;debug-2015-09-24-111730.txt&#39;,
 &#39;debug-2015-09-28-082053.txt&#39;,
 &#39;debug-2015-09-29-015803.txt&#39;,
 &#39;log-2015-09-22.txt&#39;,
 &#39;log-2015-09-23.txt&#39;,
 &#39;log-2015-09-24.txt&#39;,
 &#39;log-2015-09-28.txt&#39;,
 &#39;log-2015-09-29.txt&#39;,
 &#39;PCoIP Secure Gateway&#39;,
 &#39;pcoip_agent_2015_09_28_000000d4.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000010c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_0000012c.txt&#39;,
 &#39;pcoip_agent_2015_09_28_00000684.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000330.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_0000059c.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_00000788.txt&#39;,
 &#39;pcoip_server_2015_09_28_0_000008e0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_00000ff0.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_0000124c.txt&#39;,
 &#39;pcoip_server_2015_09_28_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_0000054c.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000a64.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000b54.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00000d60.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000011fc.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001398.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000013d8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001548.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_000017b8.txt&#39;,
 &#39;pcoip_server_2015_09_29_2_00001afc.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_00000fd0.txt&#39;,
 &#39;pcoip_server_2015_09_29_3_000015bc.txt&#39;,
 &#39;VChan-Server-spoolsv.log&#39;,
 &#39;VChan-Server-TPAutoConnect.log&#39;,
 &#39;VChan-Server-TPAutoConnSvc.log&#39;,
 &#39;VChan-Server-TPVCGateway.log&#39;,
 &#39;vmware-tsdrpp-1020.log&#39;,
 &#39;vmware-tsdrpp-312.log&#39;,
 &#39;vmware-vdpServiceServer-1508.log&#39;,
 &#39;vmware-vdpServiceServer-2024.log&#39;,
 &#39;vmware-vdpServiceServer-2396.log&#39;,
 &#39;vmware-vdpServiceServer-2544.log&#39;,
 &#39;vmware-vdpServiceServer-2572.log&#39;,
 &#39;vmware-vdpServiceServer-2644.log&#39;,
 &#39;vmware-vdpServiceServer-2772.log&#39;,
 &#39;vmware-vdpServiceServer-3252.log&#39;,
 &#39;vmware-vdpServiceServer-3544.log&#39;,
 &#39;vmware-vdpServiceServer-3828.log&#39;,
 &#39;vmware-vdpServiceServer-3832.log&#39;,
 &#39;vmware-vdpServiceServer-392.log&#39;,
 &#39;vmware-vdpServiceServer-4352.log&#39;,
 &#39;vmware-vdpServiceServer-4408.log&#39;,
 &#39;vmware-vdpServiceServer-4640.log&#39;,
 &#39;vmware-vdpServiceServer-484.log&#39;,
 &#39;vmware-vdpServiceServer-5080.log&#39;,
 &#39;vmware-vdpServiceServer-5332.log&#39;,
 &#39;vmware-vdpServiceServer-5508.log&#39;,
 &#39;vmware-vdpServiceServer-5720.log&#39;,
 &#39;vmware-vdpServiceServer-5736.log&#39;,
 &#39;vmware-vdpServiceServer-5792.log&#39;,
 &#39;vmware-vdpServiceServer-6204.log&#39;,
 &#39;vmware-vdpServiceServer-6208.log&#39;,
 &#39;vmware-vdpServiceServer-6400.log&#39;,
 &#39;vmware-vdpServiceServer-7128.log&#39;,
 &#39;vmware-vdpServiceServer-7964.log&#39;,
 &#39;wsnm_starts.txt&#39;]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x0271A968&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>handle_startloggingrequest</code>
<div class="context" id="c41065968">
<ol start="150" class="pre-context" id="pre41065968">
<li onclick="toggle('pre41065968', 'post41065968')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre41065968', 'post41065968')">        if filefilter == &#39;&#39; or None:</li>
<li onclick="toggle('pre41065968', 'post41065968')">            filefilter = r&#39;.*&#39;</li>
<li onclick="toggle('pre41065968', 'post41065968')">        dstdir = request[&#39;dstdir&#39;]</li>
<li onclick="toggle('pre41065968', 'post41065968')">        interval = request[&#39;interval&#39;]</li>
<li onclick="toggle('pre41065968', 'post41065968')">        timeout = request[&#39;timeout&#39;]</li>
<li onclick="toggle('pre41065968', 'post41065968')">        lc = logcaptor.LogCaptor(srcdir,filefilter)</li>
</ol>
<ol start="157" class="context-line"><li onclick="toggle('pre41065968', 'post41065968')">        lc.start() <span>...</span></li></ol>
<ol start='158' class="post-context" id="post41065968">
<li onclick="toggle('pre41065968', 'post41065968')"></li>
<li onclick="toggle('pre41065968', 'post41065968')">    def handle_stoploggingrequest(self,msgobj):</li>
<li onclick="toggle('pre41065968', 'post41065968')">        request = msgobj[&#39;stoploggingrequest&#39;]</li>
<li onclick="toggle('pre41065968', 'post41065968')">        srcdir = request[&#39;srcdir&#39;][&#39;name&#39;]</li>
<li onclick="toggle('pre41065968', 'post41065968')">        filefilter = request[&#39;srcdir&#39;][&#39;filefilter&#39;]</li>
<li onclick="toggle('pre41065968', 'post41065968')">        dstdir = request[&#39;dstdir&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '41065968')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v41065968"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>dstdir</td><td class="code"><div>&#39;C:\\vdm-sdct-auto&#39;</div></td></tr>
<tr><td>filefilter</td><td class="code"><div>&#39;.*&#39;</div></td></tr>
<tr><td>interval</td><td class="code"><div>&#39;5&#39;</div></td></tr>
<tr><td>lc</td><td class="code"><div>&lt;impl.logcaptor.LogCaptor instance at 0x0271A968&gt;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
 &#39;interval&#39;: &#39;5&#39;,
 &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;, &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
 &#39;timeout&#39;: &#39;300&#39;}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x0271D890&gt;</div></td></tr>
<tr><td>srcdir</td><td class="code"><div>&#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;</div></td></tr>
<tr><td>timeout</td><td class="code"><div>&#39;300&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c41066008">
<ol start="117" class="pre-context" id="pre41066008">
<li onclick="toggle('pre41066008', 'post41066008')">        try:</li>
<li onclick="toggle('pre41066008', 'post41066008')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre41066008', 'post41066008')">            body = web.data().strip()</li>
<li onclick="toggle('pre41066008', 'post41066008')">            print body</li>
<li onclick="toggle('pre41066008', 'post41066008')">            msgobj = eval(body)</li>
<li onclick="toggle('pre41066008', 'post41066008')">            if &#39;startloggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre41066008', 'post41066008')">                try:</li>
</ol>
<ol start="124" class="context-line"><li onclick="toggle('pre41066008', 'post41066008')">                    self.handle_startloggingrequest(msgobj) <span>...</span></li></ol>
<ol start='125' class="post-context" id="post41066008">
<li onclick="toggle('pre41066008', 'post41066008')">                    return StartLoggingResponseJSON</li>
<li onclick="toggle('pre41066008', 'post41066008')">                except logcaptor.LogCaptorException, e:</li>
<li onclick="toggle('pre41066008', 'post41066008')">                    return StartLoggingResponseJSON_Error % e.value</li>
<li onclick="toggle('pre41066008', 'post41066008')">            elif &#39;stoploggingrequest&#39; in msgobj.keys():</li>
<li onclick="toggle('pre41066008', 'post41066008')">                try:</li>
<li onclick="toggle('pre41066008', 'post41066008')">                    self.handle_stoploggingrequest(msgobj)</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '41066008')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v41066008"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;startloggingrequest&#39;: {&#39;dstdir&#39;: &#39;C:\\vdm-sdct-auto&#39;,
                         &#39;interval&#39;: &#39;5&#39;,
                         &#39;srcdir&#39;: {&#39;filefilter&#39;: &#39;.*&#39;,
                                    &#39;name&#39;: &#39;C:\\ProgramData\\VMware\\VDM\\logs&#39;},
                         &#39;timeout&#39;: &#39;300&#39;}}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.LoggingService object at 0x0271D890&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c41066088">
<ol start="430" class="pre-context" id="pre41066088">
<li onclick="toggle('pre41066088', 'post41066088')">        def handle_class(cls):</li>
<li onclick="toggle('pre41066088', 'post41066088')">            meth = web.ctx.method</li>
<li onclick="toggle('pre41066088', 'post41066088')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre41066088', 'post41066088')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre41066088', 'post41066088')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre41066088', 'post41066088')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre41066088', 'post41066088')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre41066088', 'post41066088')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post41066088">
<li onclick="toggle('pre41066088', 'post41066088')">            </li>
<li onclick="toggle('pre41066088', 'post41066088')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre41066088', 'post41066088')">            </li>
<li onclick="toggle('pre41066088', 'post41066088')">        if f is None:</li>
<li onclick="toggle('pre41066088', 'post41066088')">            raise web.notfound()</li>
<li onclick="toggle('pre41066088', 'post41066088')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '41066088')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v41066088"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method LoggingService.POST of &lt;webservice.LoggingService object at 0x0271D890&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c41066048">
<ol start="454" class="pre-context" id="pre41066048">
<li onclick="toggle('pre41066048', 'post41066048')">                raise web.redirect(url)</li>
<li onclick="toggle('pre41066048', 'post41066048')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre41066048', 'post41066048')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre41066048', 'post41066048')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre41066048', 'post41066048')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre41066048', 'post41066048')">            else:</li>
<li onclick="toggle('pre41066048', 'post41066048')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre41066048', 'post41066048')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post41066048">
<li onclick="toggle('pre41066048', 'post41066048')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre41066048', 'post41066048')">            return f()</li>
<li onclick="toggle('pre41066048', 'post41066048')">        else:</li>
<li onclick="toggle('pre41066048', 'post41066048')">            return web.notfound()</li>
<li onclick="toggle('pre41066048', 'post41066048')"></li>
<li onclick="toggle('pre41066048', 'post41066048')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '41066048')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v41066048"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.LoggingService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;c:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x02625CB0&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0271C7F0&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;c:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;c:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;c:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;c:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0271C5F0&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;c:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;c:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0271C3B0&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0271C3F0&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x02683A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c41066128">
<ol start="222" class="pre-context" id="pre41066128">
<li onclick="toggle('pre41066128', 'post41066128')"></li>
<li onclick="toggle('pre41066128', 'post41066128')">    def browser(self):</li>
<li onclick="toggle('pre41066128', 'post41066128')">        import browser</li>
<li onclick="toggle('pre41066128', 'post41066128')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre41066128', 'post41066128')"></li>
<li onclick="toggle('pre41066128', 'post41066128')">    def handle(self):</li>
<li onclick="toggle('pre41066128', 'post41066128')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre41066128', 'post41066128')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post41066128">
<li onclick="toggle('pre41066128', 'post41066128')">        </li>
<li onclick="toggle('pre41066128', 'post41066128')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre41066128', 'post41066128')">        def process(processors):</li>
<li onclick="toggle('pre41066128', 'post41066128')">            try:</li>
<li onclick="toggle('pre41066128', 'post41066128')">                if processors:</li>
<li onclick="toggle('pre41066128', 'post41066128')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '41066128')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v41066128"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;LoggingService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x02683A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c41066168">
<ol start="231" class="pre-context" id="pre41066168">
<li onclick="toggle('pre41066168', 'post41066168')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre41066168', 'post41066168')">        def process(processors):</li>
<li onclick="toggle('pre41066168', 'post41066168')">            try:</li>
<li onclick="toggle('pre41066168', 'post41066168')">                if processors:</li>
<li onclick="toggle('pre41066168', 'post41066168')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre41066168', 'post41066168')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre41066168', 'post41066168')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre41066168', 'post41066168')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post41066168">
<li onclick="toggle('pre41066168', 'post41066168')">            except web.HTTPError:</li>
<li onclick="toggle('pre41066168', 'post41066168')">                raise</li>
<li onclick="toggle('pre41066168', 'post41066168')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre41066168', 'post41066168')">                raise</li>
<li onclick="toggle('pre41066168', 'post41066168')">            except:</li>
<li onclick="toggle('pre41066168', 'post41066168')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '41066168')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v41066168"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0271C8F0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x02683A80&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x02683A80&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.40.183:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.40.183:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;62597&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x01E4D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0271D930&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnRdp&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPClnICA&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CClient&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CThinPrint%5CTPView&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnRdp&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPClnICA&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CClient&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugLevel


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugLevel


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 

/rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugFile


this message url in DeleteMessage is: 
 /rest/registry?key=HKEY_LOCAL_MACHINE%5CSOFTWARE%5CWow6432Node%5CThinPrint%5CTPView&name=DebugFile


this response in DeleteMessage is 
 {"registry":{"status":"OK"}} 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"ziplogsresponse":{"status":"OK"}} 

tell me which dir
want zipfile name?
server ready
receive zip file successfully

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"ziplogsresponse":{"status":"OK"}} 

tell me which dir
want zipfile name?
server ready
receive zip file successfully

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 

Get an exception when trying to connection to host and send GET /rest/logging
Exception:[Errno 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
retry it again
Get an exception when trying to connection to host and send GET /rest/logging
Exception:[Errno 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
retry it again

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}

Get an exception when trying to connection to host and send GET /rest/logging
Exception:[Errno 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
retry it again

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{
  "ziplogsresponse": {
    "status": "Error",
    "description": "no new logs"
  }
} 

tell me which dir
zipfile is not existing

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"ziplogsresponse":{"status":"OK"}} 

tell me which dir
want zipfile name?
server ready
receive zip file successfully

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}

Get an exception when trying to connection to host and send GET /rest/registry
Exception:[Errno 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
retry it again

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}

Get an exception when trying to connection to host and send GET /rest/registry
Exception:[Errno 10060] A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
retry it again

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"true",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"TraceEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM",
    "name":"DebugEnabled",
    "value":"True",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VDM\Log",
    "name":"VChanLogLevel",
    "value":"1",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnRdp",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnRdp.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnRdp",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnRdp.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnRdp",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnRdp",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnICA",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnICA.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnICA",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnICA.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnICA",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnICA",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\Client",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnt.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\Client",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnt.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\Client",
    "name":"DebugLevel",
    "value":"215",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\Client",
    "name":"DebugLevel",
    "value":"215",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPView",
    "name":"DebugLevel",
    "value":"31",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPView",
    "name":"DebugLevel",
    "value":"31",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPView",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPView.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPView",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPView.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnRdp",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnRdp_6432.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnRdp",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnRdp_6432.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnRdp",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnRdp",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnICA",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnICA_6432.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnICA",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnICA_6432.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnICA",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnICA",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\Client",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnt_6432.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\Client",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnt_6432.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\Client",
    "name":"DebugLevel",
    "value":"215",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\Client",
    "name":"DebugLevel",
    "value":"215",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPView",
    "name":"DebugLevel",
    "value":"31",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPView",
    "name":"DebugLevel",
    "value":"31",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPView",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPView_6432.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPView",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPView_6432.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnRdp",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnRdp.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnRdp",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnRdp.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnRdp",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnRdp",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnICA",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnICA.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnICA",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnICA.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnICA",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPClnICA",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\Client",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnt.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\Client",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnt.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\Client",
    "name":"DebugLevel",
    "value":"215",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\Client",
    "name":"DebugLevel",
    "value":"215",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPView",
    "name":"DebugLevel",
    "value":"31",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPView",
    "name":"DebugLevel",
    "value":"31",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPView",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPView.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\ThinPrint\TPView",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPView.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnRdp",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnRdp_6432.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnRdp",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnRdp_6432.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnRdp",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnRdp",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnICA",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnICA_6432.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnICA",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnICA_6432.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnICA",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPClnICA",
    "name":"DebugLevel",
    "value":"7",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\Client",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnt_6432.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\Client",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPClnt_6432.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\Client",
    "name":"DebugLevel",
    "value":"215",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\Client",
    "name":"DebugLevel",
    "value":"215",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPView",
    "name":"DebugLevel",
    "value":"31",
    "type":"REG_DWORD",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPView",
    "name":"DebugLevel",
    "value":"31",
    "type":"REG_DWORD",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPView",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPView_6432.log",
    "type":"REG_SZ",
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "registry":{
    "key":r"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\ThinPrint\TPView",
    "name":"DebugFile",
    "value":"C:\\Temp\\TPView_6432.log",
    "type":"REG_SZ",
  }
}



this response in PostMessage is 
{"registry":{"status":"OK"}} 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;class &#39;thread.error&#39;&gt; at /rest/logging</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;class &#39;thread.error&#39;&gt; at /rest/logging</h1>
  <h2>release unlocked lock</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\web\utils.py in update, line 495</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://10.117.41.93:9180/rest/logging</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\web\utils.py</code> in <code>update</code>
<div class="context" id="c37581928">
<ol start="488" class="pre-context" id="pre37581928">
<li onclick="toggle('pre37581928', 'post37581928')">        if not self.running.get(key):</li>
<li onclick="toggle('pre37581928', 'post37581928')">            self.running[key] = threading.Lock()</li>
<li onclick="toggle('pre37581928', 'post37581928')">        def update(block=False):</li>
<li onclick="toggle('pre37581928', 'post37581928')">            if self.running[key].acquire(block):</li>
<li onclick="toggle('pre37581928', 'post37581928')">                try:</li>
<li onclick="toggle('pre37581928', 'post37581928')">                    self.cache[key] = (self.func(*args, **keywords), time.time())</li>
<li onclick="toggle('pre37581928', 'post37581928')">                finally:</li>
</ol>
<ol start="495" class="context-line"><li onclick="toggle('pre37581928', 'post37581928')">                    self.running[key].release() <span>...</span></li></ol>
<ol start='496' class="post-context" id="post37581928">
<li onclick="toggle('pre37581928', 'post37581928')">        </li>
<li onclick="toggle('pre37581928', 'post37581928')">        if key not in self.cache: </li>
<li onclick="toggle('pre37581928', 'post37581928')">            update(block=True)</li>
<li onclick="toggle('pre37581928', 'post37581928')">        elif self.expires and (time.time() - self.cache[key][1]) &gt; self.expires:</li>
<li onclick="toggle('pre37581928', 'post37581928')">            if self.background:</li>
<li onclick="toggle('pre37581928', 'post37581928')">                threading.Thread(target=update).start()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '37581928')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v37581928"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>(&#39;^/rest/registry/?$&#39;,)</div></td></tr>
<tr><td>block</td><td class="code"><div>True</div></td></tr>
<tr><td>key</td><td class="code"><div>((&#39;^/rest/registry/?$&#39;,), ())</div></td></tr>
<tr><td>keywords</td><td class="code"><div>{}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.utils.Memoize instance at 0x01F4AA80&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\utils.py</code> in <code>__call__</code>
<div class="context" id="c37581968">
<ol start="491" class="pre-context" id="pre37581968">
<li onclick="toggle('pre37581968', 'post37581968')">            if self.running[key].acquire(block):</li>
<li onclick="toggle('pre37581968', 'post37581968')">                try:</li>
<li onclick="toggle('pre37581968', 'post37581968')">                    self.cache[key] = (self.func(*args, **keywords), time.time())</li>
<li onclick="toggle('pre37581968', 'post37581968')">                finally:</li>
<li onclick="toggle('pre37581968', 'post37581968')">                    self.running[key].release()</li>
<li onclick="toggle('pre37581968', 'post37581968')">        </li>
<li onclick="toggle('pre37581968', 'post37581968')">        if key not in self.cache: </li>
</ol>
<ol start="498" class="context-line"><li onclick="toggle('pre37581968', 'post37581968')">            update(block=True) <span>...</span></li></ol>
<ol start='499' class="post-context" id="post37581968">
<li onclick="toggle('pre37581968', 'post37581968')">        elif self.expires and (time.time() - self.cache[key][1]) &gt; self.expires:</li>
<li onclick="toggle('pre37581968', 'post37581968')">            if self.background:</li>
<li onclick="toggle('pre37581968', 'post37581968')">                threading.Thread(target=update).start()</li>
<li onclick="toggle('pre37581968', 'post37581968')">            else:</li>
<li onclick="toggle('pre37581968', 'post37581968')">                update()</li>
<li onclick="toggle('pre37581968', 'post37581968')">        return self.cache[key][0]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '37581968')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v37581968"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>(&#39;^/rest/registry/?$&#39;,)</div></td></tr>
<tr><td>key</td><td class="code"><div>((&#39;^/rest/registry/?$&#39;,), ())</div></td></tr>
<tr><td>keywords</td><td class="code"><div>{}</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.utils.Memoize instance at 0x01F4AA80&gt;</div></td></tr>
<tr><td>update</td><td class="code"><div>&lt;function update at 0x023C7BB0&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\utils.py</code> in <code>re_subm</code>
<div class="context" id="c37582008">
<ol start="523" class="pre-context" id="pre37582008">
<li onclick="toggle('pre37582008', 'post37582008')">    </li>
<li onclick="toggle('pre37582008', 'post37582008')">        &gt;&gt;&gt; t, m = re_subm(&#39;g(oo+)fball&#39;, r&#39;f\\1lish&#39;, &#39;goooooofball&#39;)</li>
<li onclick="toggle('pre37582008', 'post37582008')">        &gt;&gt;&gt; t</li>
<li onclick="toggle('pre37582008', 'post37582008')">        &#39;foooooolish&#39;</li>
<li onclick="toggle('pre37582008', 'post37582008')">        &gt;&gt;&gt; m.groups()</li>
<li onclick="toggle('pre37582008', 'post37582008')">        (&#39;oooooo&#39;,)</li>
<li onclick="toggle('pre37582008', 'post37582008')">    &quot;&quot;&quot;</li>
</ol>
<ol start="530" class="context-line"><li onclick="toggle('pre37582008', 'post37582008')">    compiled_pat = re_compile(pat) <span>...</span></li></ol>
<ol start='531' class="post-context" id="post37582008">
<li onclick="toggle('pre37582008', 'post37582008')">    proxy = _re_subm_proxy()</li>
<li onclick="toggle('pre37582008', 'post37582008')">    compiled_pat.sub(proxy.__call__, string)</li>
<li onclick="toggle('pre37582008', 'post37582008')">    return compiled_pat.sub(repl, string), proxy.match</li>
<li onclick="toggle('pre37582008', 'post37582008')"></li>
<li onclick="toggle('pre37582008', 'post37582008')">def group(seq, size): </li>
<li onclick="toggle('pre37582008', 'post37582008')">    &quot;&quot;&quot;</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '37582008')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v37582008"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>pat</td><td class="code"><div>&#39;^/rest/registry/?$&#39;</div></td></tr>
<tr><td>repl</td><td class="code"><div>&#39;RegistryService&#39;</div></td></tr>
<tr><td>string</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_match</code>
<div class="context" id="c37582088">
<ol start="469" class="pre-context" id="pre37582088">
<li onclick="toggle('pre37582088', 'post37582088')">            if isinstance(what, application):</li>
<li onclick="toggle('pre37582088', 'post37582088')">                if value.startswith(pat):</li>
<li onclick="toggle('pre37582088', 'post37582088')">                    f = lambda: self._delegate_sub_application(pat, what)</li>
<li onclick="toggle('pre37582088', 'post37582088')">                    return f, None</li>
<li onclick="toggle('pre37582088', 'post37582088')">                else:</li>
<li onclick="toggle('pre37582088', 'post37582088')">                    continue</li>
<li onclick="toggle('pre37582088', 'post37582088')">            elif isinstance(what, basestring):</li>
</ol>
<ol start="476" class="context-line"><li onclick="toggle('pre37582088', 'post37582088')">                what, result = utils.re_subm(&#39;^&#39; + pat + &#39;$&#39;, what, value) <span>...</span></li></ol>
<ol start='477' class="post-context" id="post37582088">
<li onclick="toggle('pre37582088', 'post37582088')">            else:</li>
<li onclick="toggle('pre37582088', 'post37582088')">                result = utils.re_compile(&#39;^&#39; + pat + &#39;$&#39;).match(value)</li>
<li onclick="toggle('pre37582088', 'post37582088')">                </li>
<li onclick="toggle('pre37582088', 'post37582088')">            if result: # it&#39;s a match</li>
<li onclick="toggle('pre37582088', 'post37582088')">                return what, [x for x in result.groups()]</li>
<li onclick="toggle('pre37582088', 'post37582088')">        return None, None</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '37582088')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v37582088"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>mapping</td><td class="code"><div>[[&#39;/rest/registry/?&#39;, &#39;RegistryService&#39;], [&#39;/rest/logging&#39;, &#39;LoggingService&#39;]]</div></td></tr>
<tr><td>pat</td><td class="code"><div>&#39;/rest/registry/?&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x02336648&gt;</div></td></tr>
<tr><td>value</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>what</td><td class="code"><div>&#39;RegistryService&#39;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c37582328">
<ol start="221" class="pre-context" id="pre37582328">
<li onclick="toggle('pre37582328', 'post37582328')">        return response</li>
<li onclick="toggle('pre37582328', 'post37582328')"></li>
<li onclick="toggle('pre37582328', 'post37582328')">    def browser(self):</li>
<li onclick="toggle('pre37582328', 'post37582328')">        import browser</li>
<li onclick="toggle('pre37582328', 'post37582328')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre37582328', 'post37582328')"></li>
<li onclick="toggle('pre37582328', 'post37582328')">    def handle(self):</li>
</ol>
<ol start="228" class="context-line"><li onclick="toggle('pre37582328', 'post37582328')">        fn, args = self._match(self.mapping, web.ctx.path) <span>...</span></li></ol>
<ol start='229' class="post-context" id="post37582328">
<li onclick="toggle('pre37582328', 'post37582328')">        return self._delegate(fn, self.fvars, args)</li>
<li onclick="toggle('pre37582328', 'post37582328')">        </li>
<li onclick="toggle('pre37582328', 'post37582328')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre37582328', 'post37582328')">        def process(processors):</li>
<li onclick="toggle('pre37582328', 'post37582328')">            try:</li>
<li onclick="toggle('pre37582328', 'post37582328')">                if processors:</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '37582328')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v37582328"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x02336648&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c37584128">
<ol start="231" class="pre-context" id="pre37584128">
<li onclick="toggle('pre37584128', 'post37584128')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre37584128', 'post37584128')">        def process(processors):</li>
<li onclick="toggle('pre37584128', 'post37584128')">            try:</li>
<li onclick="toggle('pre37584128', 'post37584128')">                if processors:</li>
<li onclick="toggle('pre37584128', 'post37584128')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre37584128', 'post37584128')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre37584128', 'post37584128')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre37584128', 'post37584128')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post37584128">
<li onclick="toggle('pre37584128', 'post37584128')">            except web.HTTPError:</li>
<li onclick="toggle('pre37584128', 'post37584128')">                raise</li>
<li onclick="toggle('pre37584128', 'post37584128')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre37584128', 'post37584128')">                raise</li>
<li onclick="toggle('pre37584128', 'post37584128')">            except:</li>
<li onclick="toggle('pre37584128', 'post37584128')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '37584128')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v37584128"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x023C76B0&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x02336648&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x02336648&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;\n{\n  &quot;startloggingrequest&quot;: {\n    &quot;srcdir&quot;: {\n      &quot;name&quot;: r&quot;C:\\ProgramData\\VMware\\VDM\\logs&quot;,\n      &quot;filefilter&quot;: &quot;.*&quot;\n    },\n    &quot;dstdir&quot;: r&quot;C:\\vdm-sdct-auto&quot;,\n    &quot;interval&quot;: &quot;5&quot;,\n    &quot;timeout&quot;: &quot;300&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://10.117.41.93:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://10.117.41.93:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;10.117.41.93:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/logging&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://10.117.41.93:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;209&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;10.117.41.93:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;10.112.116.250&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;58269&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/logging&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x01D3D0D0&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x023C8270&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 



this response in PostMessage is 
{"startloggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"ziplogsresponse":{"status":"OK"}} 

tell me which dir
want zipfile name?
server ready
receive zip file successfully

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "stoploggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"stoploggingresponse":{"status":"OK"}} 


{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "ziplogsrequest": {
    "dstdir": r"C:\vdm-sdct-auto"
  }
}



this response in PostMessage is 
{"ziplogsresponse":{"status":"OK"}} 

tell me which dir
want zipfile name?
server ready
receive zip file successfully
