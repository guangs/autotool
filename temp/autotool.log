
{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\Administrator\AppData\Local\Temp\vmware-<username>",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\Administrator\AppData\Local\Temp\vmware-<username>",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Users\<username>\AppData\Local\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VMware Blast",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\Temp",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VDM\logs",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}

{
  "startloggingrequest": {
    "srcdir": {
      "name": r"C:\ProgramData\VMware\VMware Blast",
      "filefilter": ".*"
    },
    "dstdir": r"C:\vdm-sdct-auto",
    "interval": "5",
    "timeout": "300"
  }
}

Get an exception when trying to connection to host and send GET /rest/logging
Exception:[Errno 11004] getaddrinfo failed
retry it again
Get an exception when trying to connection to host and send GET /rest/logging
Exception:[Errno 11004] getaddrinfo failed
Get an exception when trying to connection to host and send GET /rest/logging
retry it again
Exception:[Errno 11004] getaddrinfo failed
retry it again
Get an exception when trying to connection to host and send GET /rest/logging
Exception:[Errno 10061] No connection could be made because the target machine actively refused it
retry it again
Get an exception when trying to connection to host and send GET /rest/logging
Get an exception when trying to connection to host and send GET /rest/logging
Exception:[Errno 10061] No connection could be made because the target machine actively refused it
Exception:[Errno 10061] No connection could be made because the target machine actively refused it
retry it again
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": "\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:[Errno 10061] No connection could be made because the target machine actively refused it
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": "\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": "\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": "\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:timed out
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"\\sanya.eng.vmware.com\Exchange\gshi\automation\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"C:\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"C:\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"C:\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:[Errno 10054] An existing connection was forcibly closed by the remote host
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"C:\autotool\dispatch2.bat",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use S: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;
    s:\automation\autotool\dispatch2.bat;
    net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.SyntaxError&#39;&gt; at /rest/cmd</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.SyntaxError&#39;&gt; at /rest/cmd</h1>
  <h2>EOL while scanning string literal (&lt;string&gt;, line 3)</h2>
  <table><tr>
    <th>Python</th>
    <td>c:\autotool\webservice.py in POST, line 202</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://localhost:9180/rest/cmd</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c29829128">
<ol start="195" class="pre-context" id="pre29829128">
<li onclick="toggle('pre29829128', 'post29829128')">class CommandService(object):</li>
<li onclick="toggle('pre29829128', 'post29829128')"></li>
<li onclick="toggle('pre29829128', 'post29829128')">    def POST(self):</li>
<li onclick="toggle('pre29829128', 'post29829128')">        try:</li>
<li onclick="toggle('pre29829128', 'post29829128')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre29829128', 'post29829128')">            body = web.data().strip()</li>
<li onclick="toggle('pre29829128', 'post29829128')">            print body</li>
</ol>
<ol start="202" class="context-line"><li onclick="toggle('pre29829128', 'post29829128')">            msgobj = eval(body) <span>...</span></li></ol>
<ol start='203' class="post-context" id="post29829128">
<li onclick="toggle('pre29829128', 'post29829128')">            if &#39;request&#39; in msgobj.keys():</li>
<li onclick="toggle('pre29829128', 'post29829128')">                try:</li>
<li onclick="toggle('pre29829128', 'post29829128')">                    request = msgobj[&#39;request&#39;]</li>
<li onclick="toggle('pre29829128', 'post29829128')">                    command = request[&#39;command&#39;]</li>
<li onclick="toggle('pre29829128', 'post29829128')">                    interpreter = request[&#39;interpreter&#39;]</li>
<li onclick="toggle('pre29829128', 'post29829128')">                    role = request[&#39;role&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29829128')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29829128"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use S: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;\n    s:\\automation\\autotool\\dispatch2.bat;\n    net use /delete s:&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.CommandService object at 0x0000000001C16748&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c29830280">
<ol start="430" class="pre-context" id="pre29830280">
<li onclick="toggle('pre29830280', 'post29830280')">        def handle_class(cls):</li>
<li onclick="toggle('pre29830280', 'post29830280')">            meth = web.ctx.method</li>
<li onclick="toggle('pre29830280', 'post29830280')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre29830280', 'post29830280')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre29830280', 'post29830280')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre29830280', 'post29830280')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre29830280', 'post29830280')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre29830280', 'post29830280')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post29830280">
<li onclick="toggle('pre29830280', 'post29830280')">            </li>
<li onclick="toggle('pre29830280', 'post29830280')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre29830280', 'post29830280')">            </li>
<li onclick="toggle('pre29830280', 'post29830280')">        if f is None:</li>
<li onclick="toggle('pre29830280', 'post29830280')">            raise web.notfound()</li>
<li onclick="toggle('pre29830280', 'post29830280')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29830280')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29830280"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method CommandService.POST of &lt;webservice.CommandService object at 0x0000000001C16748&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c29829064">
<ol start="454" class="pre-context" id="pre29829064">
<li onclick="toggle('pre29829064', 'post29829064')">                raise web.redirect(url)</li>
<li onclick="toggle('pre29829064', 'post29829064')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre29829064', 'post29829064')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre29829064', 'post29829064')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre29829064', 'post29829064')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre29829064', 'post29829064')">            else:</li>
<li onclick="toggle('pre29829064', 'post29829064')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre29829064', 'post29829064')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post29829064">
<li onclick="toggle('pre29829064', 'post29829064')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre29829064', 'post29829064')">            return f()</li>
<li onclick="toggle('pre29829064', 'post29829064')">        else:</li>
<li onclick="toggle('pre29829064', 'post29829064')">            return web.notfound()</li>
<li onclick="toggle('pre29829064', 'post29829064')"></li>
<li onclick="toggle('pre29829064', 'post29829064')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29829064')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29829064"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;CommandResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;CommandResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;CommandService&#39;: &lt;class &#39;webservice.CommandService&#39;&gt;,
 &#39;InstallResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;InstallResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;InstallService&#39;: &lt;class &#39;webservice.InstallService&#39;&gt;,
 &#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;c:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0000000001965918&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;cmdexecutor&#39;: &lt;module &#39;impl.cmdexecutor&#39; from &#39;c:\autotool\impl\cmdexecutor.py&#39;&gt;,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0000000001C71A58&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;c:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;handle_reboot_after_tasks&#39;: &lt;function handle_reboot_after_tasks at 0x0000000001C719E8&gt;,
 &#39;installer&#39;: &lt;module &#39;impl.installer&#39; from &#39;c:\autotool\impl\installer.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;c:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;c:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;c:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0000000001C71588&gt;,
 &#39;threading&#39;: &lt;module &#39;threading&#39; from &#39;C:\Python27\lib\threading.pyc&#39;&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;,
          &#39;/rest/cmd&#39;,
          &#39;CommandService&#39;,
          &#39;/rest/install&#39;,
          &#39;InstallService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;c:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;c:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0000000001C71518&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0000000001C71AC8&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001BB8F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c29830536">
<ol start="222" class="pre-context" id="pre29830536">
<li onclick="toggle('pre29830536', 'post29830536')"></li>
<li onclick="toggle('pre29830536', 'post29830536')">    def browser(self):</li>
<li onclick="toggle('pre29830536', 'post29830536')">        import browser</li>
<li onclick="toggle('pre29830536', 'post29830536')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre29830536', 'post29830536')"></li>
<li onclick="toggle('pre29830536', 'post29830536')">    def handle(self):</li>
<li onclick="toggle('pre29830536', 'post29830536')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre29830536', 'post29830536')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post29830536">
<li onclick="toggle('pre29830536', 'post29830536')">        </li>
<li onclick="toggle('pre29830536', 'post29830536')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre29830536', 'post29830536')">        def process(processors):</li>
<li onclick="toggle('pre29830536', 'post29830536')">            try:</li>
<li onclick="toggle('pre29830536', 'post29830536')">                if processors:</li>
<li onclick="toggle('pre29830536', 'post29830536')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29830536')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29830536"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001BB8F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c29830600">
<ol start="231" class="pre-context" id="pre29830600">
<li onclick="toggle('pre29830600', 'post29830600')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre29830600', 'post29830600')">        def process(processors):</li>
<li onclick="toggle('pre29830600', 'post29830600')">            try:</li>
<li onclick="toggle('pre29830600', 'post29830600')">                if processors:</li>
<li onclick="toggle('pre29830600', 'post29830600')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre29830600', 'post29830600')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre29830600', 'post29830600')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre29830600', 'post29830600')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post29830600">
<li onclick="toggle('pre29830600', 'post29830600')">            except web.HTTPError:</li>
<li onclick="toggle('pre29830600', 'post29830600')">                raise</li>
<li onclick="toggle('pre29830600', 'post29830600')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre29830600', 'post29830600')">                raise</li>
<li onclick="toggle('pre29830600', 'post29830600')">            except:</li>
<li onclick="toggle('pre29830600', 'post29830600')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29830600')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29830600"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0000000001C172E8&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001BB8F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x0000000001BB8F88&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use S: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;\n    s:\\automation\\autotool\\dispatch2.bat;\n    net use /delete s:&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;localhost:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;231&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;localhost:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;56547&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0000000000A42150&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0000000001C16588&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use S: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;
    s:\automation\autotool\dispatch2.bat;
    net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.SyntaxError&#39;&gt; at /rest/cmd</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.SyntaxError&#39;&gt; at /rest/cmd</h1>
  <h2>EOL while scanning string literal (&lt;string&gt;, line 3)</h2>
  <table><tr>
    <th>Python</th>
    <td>c:\autotool\webservice.py in POST, line 202</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://localhost:9180/rest/cmd</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c29346568">
<ol start="195" class="pre-context" id="pre29346568">
<li onclick="toggle('pre29346568', 'post29346568')">class CommandService(object):</li>
<li onclick="toggle('pre29346568', 'post29346568')"></li>
<li onclick="toggle('pre29346568', 'post29346568')">    def POST(self):</li>
<li onclick="toggle('pre29346568', 'post29346568')">        try:</li>
<li onclick="toggle('pre29346568', 'post29346568')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre29346568', 'post29346568')">            body = web.data().strip()</li>
<li onclick="toggle('pre29346568', 'post29346568')">            print body</li>
</ol>
<ol start="202" class="context-line"><li onclick="toggle('pre29346568', 'post29346568')">            msgobj = eval(body) <span>...</span></li></ol>
<ol start='203' class="post-context" id="post29346568">
<li onclick="toggle('pre29346568', 'post29346568')">            if &#39;request&#39; in msgobj.keys():</li>
<li onclick="toggle('pre29346568', 'post29346568')">                try:</li>
<li onclick="toggle('pre29346568', 'post29346568')">                    request = msgobj[&#39;request&#39;]</li>
<li onclick="toggle('pre29346568', 'post29346568')">                    command = request[&#39;command&#39;]</li>
<li onclick="toggle('pre29346568', 'post29346568')">                    interpreter = request[&#39;interpreter&#39;]</li>
<li onclick="toggle('pre29346568', 'post29346568')">                    role = request[&#39;role&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29346568')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29346568"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use S: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;\n    s:\\automation\\autotool\\dispatch2.bat;\n    net use /delete s:&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.CommandService object at 0x0000000001E45828&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c29344200">
<ol start="430" class="pre-context" id="pre29344200">
<li onclick="toggle('pre29344200', 'post29344200')">        def handle_class(cls):</li>
<li onclick="toggle('pre29344200', 'post29344200')">            meth = web.ctx.method</li>
<li onclick="toggle('pre29344200', 'post29344200')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre29344200', 'post29344200')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre29344200', 'post29344200')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre29344200', 'post29344200')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre29344200', 'post29344200')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre29344200', 'post29344200')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post29344200">
<li onclick="toggle('pre29344200', 'post29344200')">            </li>
<li onclick="toggle('pre29344200', 'post29344200')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre29344200', 'post29344200')">            </li>
<li onclick="toggle('pre29344200', 'post29344200')">        if f is None:</li>
<li onclick="toggle('pre29344200', 'post29344200')">            raise web.notfound()</li>
<li onclick="toggle('pre29344200', 'post29344200')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29344200')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29344200"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method CommandService.POST of &lt;webservice.CommandService object at 0x0000000001E45828&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c29344392">
<ol start="454" class="pre-context" id="pre29344392">
<li onclick="toggle('pre29344392', 'post29344392')">                raise web.redirect(url)</li>
<li onclick="toggle('pre29344392', 'post29344392')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre29344392', 'post29344392')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre29344392', 'post29344392')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre29344392', 'post29344392')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre29344392', 'post29344392')">            else:</li>
<li onclick="toggle('pre29344392', 'post29344392')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre29344392', 'post29344392')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post29344392">
<li onclick="toggle('pre29344392', 'post29344392')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre29344392', 'post29344392')">            return f()</li>
<li onclick="toggle('pre29344392', 'post29344392')">        else:</li>
<li onclick="toggle('pre29344392', 'post29344392')">            return web.notfound()</li>
<li onclick="toggle('pre29344392', 'post29344392')"></li>
<li onclick="toggle('pre29344392', 'post29344392')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29344392')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29344392"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;CommandResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;CommandResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;CommandService&#39;: &lt;class &#39;webservice.CommandService&#39;&gt;,
 &#39;InstallResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;InstallResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;InstallService&#39;: &lt;class &#39;webservice.InstallService&#39;&gt;,
 &#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;c:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0000000001965918&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;cmdexecutor&#39;: &lt;module &#39;impl.cmdexecutor&#39; from &#39;c:\autotool\impl\cmdexecutor.py&#39;&gt;,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0000000001C71A58&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;c:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;handle_reboot_after_tasks&#39;: &lt;function handle_reboot_after_tasks at 0x0000000001C719E8&gt;,
 &#39;installer&#39;: &lt;module &#39;impl.installer&#39; from &#39;c:\autotool\impl\installer.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;c:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;c:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;c:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0000000001C71588&gt;,
 &#39;threading&#39;: &lt;module &#39;threading&#39; from &#39;C:\Python27\lib\threading.pyc&#39;&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;,
          &#39;/rest/cmd&#39;,
          &#39;CommandService&#39;,
          &#39;/rest/install&#39;,
          &#39;InstallService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;c:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;c:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0000000001C71AC8&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0000000001C71B38&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001BB8F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c29479112">
<ol start="222" class="pre-context" id="pre29479112">
<li onclick="toggle('pre29479112', 'post29479112')"></li>
<li onclick="toggle('pre29479112', 'post29479112')">    def browser(self):</li>
<li onclick="toggle('pre29479112', 'post29479112')">        import browser</li>
<li onclick="toggle('pre29479112', 'post29479112')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre29479112', 'post29479112')"></li>
<li onclick="toggle('pre29479112', 'post29479112')">    def handle(self):</li>
<li onclick="toggle('pre29479112', 'post29479112')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre29479112', 'post29479112')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post29479112">
<li onclick="toggle('pre29479112', 'post29479112')">        </li>
<li onclick="toggle('pre29479112', 'post29479112')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre29479112', 'post29479112')">        def process(processors):</li>
<li onclick="toggle('pre29479112', 'post29479112')">            try:</li>
<li onclick="toggle('pre29479112', 'post29479112')">                if processors:</li>
<li onclick="toggle('pre29479112', 'post29479112')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29479112')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29479112"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001BB8F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c29480008">
<ol start="231" class="pre-context" id="pre29480008">
<li onclick="toggle('pre29480008', 'post29480008')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre29480008', 'post29480008')">        def process(processors):</li>
<li onclick="toggle('pre29480008', 'post29480008')">            try:</li>
<li onclick="toggle('pre29480008', 'post29480008')">                if processors:</li>
<li onclick="toggle('pre29480008', 'post29480008')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre29480008', 'post29480008')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre29480008', 'post29480008')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre29480008', 'post29480008')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post29480008">
<li onclick="toggle('pre29480008', 'post29480008')">            except web.HTTPError:</li>
<li onclick="toggle('pre29480008', 'post29480008')">                raise</li>
<li onclick="toggle('pre29480008', 'post29480008')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre29480008', 'post29480008')">                raise</li>
<li onclick="toggle('pre29480008', 'post29480008')">            except:</li>
<li onclick="toggle('pre29480008', 'post29480008')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29480008')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29480008"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0000000001C17358&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001BB8F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x0000000001BB8F88&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use S: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;\n    s:\\automation\\autotool\\dispatch2.bat;\n    net use /delete s:&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;localhost:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;231&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;localhost:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;56550&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0000000000A42150&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0000000001C166D8&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use S: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;
    s:\automation\autotool\dispatch2.bat;
    net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.SyntaxError&#39;&gt; at /rest/cmd</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.SyntaxError&#39;&gt; at /rest/cmd</h1>
  <h2>EOL while scanning string literal (&lt;string&gt;, line 3)</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\webservice.py in POST, line 202</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://localhost:9180/rest/cmd</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c49202056">
<ol start="195" class="pre-context" id="pre49202056">
<li onclick="toggle('pre49202056', 'post49202056')">class CommandService(object):</li>
<li onclick="toggle('pre49202056', 'post49202056')"></li>
<li onclick="toggle('pre49202056', 'post49202056')">    def POST(self):</li>
<li onclick="toggle('pre49202056', 'post49202056')">        try:</li>
<li onclick="toggle('pre49202056', 'post49202056')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre49202056', 'post49202056')">            body = web.data().strip()</li>
<li onclick="toggle('pre49202056', 'post49202056')">            print body</li>
</ol>
<ol start="202" class="context-line"><li onclick="toggle('pre49202056', 'post49202056')">            msgobj = eval(body) <span>...</span></li></ol>
<ol start='203' class="post-context" id="post49202056">
<li onclick="toggle('pre49202056', 'post49202056')">            if &#39;request&#39; in msgobj.keys():</li>
<li onclick="toggle('pre49202056', 'post49202056')">                try:</li>
<li onclick="toggle('pre49202056', 'post49202056')">                    request = msgobj[&#39;request&#39;]</li>
<li onclick="toggle('pre49202056', 'post49202056')">                    command = request[&#39;command&#39;]</li>
<li onclick="toggle('pre49202056', 'post49202056')">                    interpreter = request[&#39;interpreter&#39;]</li>
<li onclick="toggle('pre49202056', 'post49202056')">                    role = request[&#39;role&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49202056')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49202056"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use S: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;\n    s:\\automation\\autotool\\dispatch2.bat;\n    net use /delete s:&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.CommandService object at 0x0000000002E9A630&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c49203208">
<ol start="430" class="pre-context" id="pre49203208">
<li onclick="toggle('pre49203208', 'post49203208')">        def handle_class(cls):</li>
<li onclick="toggle('pre49203208', 'post49203208')">            meth = web.ctx.method</li>
<li onclick="toggle('pre49203208', 'post49203208')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre49203208', 'post49203208')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre49203208', 'post49203208')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre49203208', 'post49203208')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre49203208', 'post49203208')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre49203208', 'post49203208')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post49203208">
<li onclick="toggle('pre49203208', 'post49203208')">            </li>
<li onclick="toggle('pre49203208', 'post49203208')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre49203208', 'post49203208')">            </li>
<li onclick="toggle('pre49203208', 'post49203208')">        if f is None:</li>
<li onclick="toggle('pre49203208', 'post49203208')">            raise web.notfound()</li>
<li onclick="toggle('pre49203208', 'post49203208')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49203208')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49203208"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method CommandService.POST of &lt;webservice.CommandService object at 0x0000000002E9A630&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c49201992">
<ol start="454" class="pre-context" id="pre49201992">
<li onclick="toggle('pre49201992', 'post49201992')">                raise web.redirect(url)</li>
<li onclick="toggle('pre49201992', 'post49201992')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre49201992', 'post49201992')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre49201992', 'post49201992')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre49201992', 'post49201992')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre49201992', 'post49201992')">            else:</li>
<li onclick="toggle('pre49201992', 'post49201992')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre49201992', 'post49201992')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post49201992">
<li onclick="toggle('pre49201992', 'post49201992')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre49201992', 'post49201992')">            return f()</li>
<li onclick="toggle('pre49201992', 'post49201992')">        else:</li>
<li onclick="toggle('pre49201992', 'post49201992')">            return web.notfound()</li>
<li onclick="toggle('pre49201992', 'post49201992')"></li>
<li onclick="toggle('pre49201992', 'post49201992')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49201992')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49201992"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;CommandResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;CommandResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;CommandService&#39;: &lt;class &#39;webservice.CommandService&#39;&gt;,
 &#39;InstallResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;InstallResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;InstallService&#39;: &lt;class &#39;webservice.InstallService&#39;&gt;,
 &#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0000000002BF6E58&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;cmdexecutor&#39;: &lt;module &#39;impl.cmdexecutor&#39; from &#39;C:\autotool\impl\cmdexecutor.pyc&#39;&gt;,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0000000002EE7B38&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;handle_reboot_after_tasks&#39;: &lt;function handle_reboot_after_tasks at 0x0000000002EE7AC8&gt;,
 &#39;installer&#39;: &lt;module &#39;impl.installer&#39; from &#39;C:\autotool\impl\installer.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0000000002EE7668&gt;,
 &#39;threading&#39;: &lt;module &#39;threading&#39; from &#39;C:\Python27\lib\threading.pyc&#39;&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;,
          &#39;/rest/cmd&#39;,
          &#39;CommandService&#39;,
          &#39;/rest/install&#39;,
          &#39;InstallService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0000000002EE75F8&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0000000002EE7BA8&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002E47B08&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c49203464">
<ol start="222" class="pre-context" id="pre49203464">
<li onclick="toggle('pre49203464', 'post49203464')"></li>
<li onclick="toggle('pre49203464', 'post49203464')">    def browser(self):</li>
<li onclick="toggle('pre49203464', 'post49203464')">        import browser</li>
<li onclick="toggle('pre49203464', 'post49203464')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre49203464', 'post49203464')"></li>
<li onclick="toggle('pre49203464', 'post49203464')">    def handle(self):</li>
<li onclick="toggle('pre49203464', 'post49203464')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre49203464', 'post49203464')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post49203464">
<li onclick="toggle('pre49203464', 'post49203464')">        </li>
<li onclick="toggle('pre49203464', 'post49203464')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre49203464', 'post49203464')">        def process(processors):</li>
<li onclick="toggle('pre49203464', 'post49203464')">            try:</li>
<li onclick="toggle('pre49203464', 'post49203464')">                if processors:</li>
<li onclick="toggle('pre49203464', 'post49203464')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49203464')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49203464"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002E47B08&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c49203528">
<ol start="231" class="pre-context" id="pre49203528">
<li onclick="toggle('pre49203528', 'post49203528')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre49203528', 'post49203528')">        def process(processors):</li>
<li onclick="toggle('pre49203528', 'post49203528')">            try:</li>
<li onclick="toggle('pre49203528', 'post49203528')">                if processors:</li>
<li onclick="toggle('pre49203528', 'post49203528')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre49203528', 'post49203528')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre49203528', 'post49203528')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre49203528', 'post49203528')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post49203528">
<li onclick="toggle('pre49203528', 'post49203528')">            except web.HTTPError:</li>
<li onclick="toggle('pre49203528', 'post49203528')">                raise</li>
<li onclick="toggle('pre49203528', 'post49203528')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre49203528', 'post49203528')">                raise</li>
<li onclick="toggle('pre49203528', 'post49203528')">            except:</li>
<li onclick="toggle('pre49203528', 'post49203528')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49203528')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49203528"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0000000002E993C8&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002E47B08&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x0000000002E47B08&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use S: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;\n    s:\\automation\\autotool\\dispatch2.bat;\n    net use /delete s:&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;localhost:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;231&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;localhost:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;56565&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0000000000592150&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0000000002E9A470&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use S: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware
    s:utomationutotool\dispatch2.bat
    net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.SyntaxError&#39;&gt; at /rest/cmd</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.SyntaxError&#39;&gt; at /rest/cmd</h1>
  <h2>EOL while scanning string literal (&lt;string&gt;, line 3)</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\webservice.py in POST, line 202</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://localhost:9180/rest/cmd</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c49697672">
<ol start="195" class="pre-context" id="pre49697672">
<li onclick="toggle('pre49697672', 'post49697672')">class CommandService(object):</li>
<li onclick="toggle('pre49697672', 'post49697672')"></li>
<li onclick="toggle('pre49697672', 'post49697672')">    def POST(self):</li>
<li onclick="toggle('pre49697672', 'post49697672')">        try:</li>
<li onclick="toggle('pre49697672', 'post49697672')">            web.header(&#39;Content-Type&#39;, &#39;application/json&#39;)</li>
<li onclick="toggle('pre49697672', 'post49697672')">            body = web.data().strip()</li>
<li onclick="toggle('pre49697672', 'post49697672')">            print body</li>
</ol>
<ol start="202" class="context-line"><li onclick="toggle('pre49697672', 'post49697672')">            msgobj = eval(body) <span>...</span></li></ol>
<ol start='203' class="post-context" id="post49697672">
<li onclick="toggle('pre49697672', 'post49697672')">            if &#39;request&#39; in msgobj.keys():</li>
<li onclick="toggle('pre49697672', 'post49697672')">                try:</li>
<li onclick="toggle('pre49697672', 'post49697672')">                    request = msgobj[&#39;request&#39;]</li>
<li onclick="toggle('pre49697672', 'post49697672')">                    command = request[&#39;command&#39;]</li>
<li onclick="toggle('pre49697672', 'post49697672')">                    interpreter = request[&#39;interpreter&#39;]</li>
<li onclick="toggle('pre49697672', 'post49697672')">                    role = request[&#39;role&#39;]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49697672')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49697672"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use s: \\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware\n    s:\x07utomation\x07utotool\\dispatch2.bat\n    net use /delete s:&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.CommandService object at 0x0000000002F07630&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c49698824">
<ol start="430" class="pre-context" id="pre49698824">
<li onclick="toggle('pre49698824', 'post49698824')">        def handle_class(cls):</li>
<li onclick="toggle('pre49698824', 'post49698824')">            meth = web.ctx.method</li>
<li onclick="toggle('pre49698824', 'post49698824')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre49698824', 'post49698824')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre49698824', 'post49698824')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre49698824', 'post49698824')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre49698824', 'post49698824')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre49698824', 'post49698824')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post49698824">
<li onclick="toggle('pre49698824', 'post49698824')">            </li>
<li onclick="toggle('pre49698824', 'post49698824')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre49698824', 'post49698824')">            </li>
<li onclick="toggle('pre49698824', 'post49698824')">        if f is None:</li>
<li onclick="toggle('pre49698824', 'post49698824')">            raise web.notfound()</li>
<li onclick="toggle('pre49698824', 'post49698824')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49698824')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49698824"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method CommandService.POST of &lt;webservice.CommandService object at 0x0000000002F07630&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c49697608">
<ol start="454" class="pre-context" id="pre49697608">
<li onclick="toggle('pre49697608', 'post49697608')">                raise web.redirect(url)</li>
<li onclick="toggle('pre49697608', 'post49697608')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre49697608', 'post49697608')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre49697608', 'post49697608')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre49697608', 'post49697608')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre49697608', 'post49697608')">            else:</li>
<li onclick="toggle('pre49697608', 'post49697608')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre49697608', 'post49697608')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post49697608">
<li onclick="toggle('pre49697608', 'post49697608')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre49697608', 'post49697608')">            return f()</li>
<li onclick="toggle('pre49697608', 'post49697608')">        else:</li>
<li onclick="toggle('pre49697608', 'post49697608')">            return web.notfound()</li>
<li onclick="toggle('pre49697608', 'post49697608')"></li>
<li onclick="toggle('pre49697608', 'post49697608')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49697608')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49697608"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;CommandResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;CommandResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;CommandService&#39;: &lt;class &#39;webservice.CommandService&#39;&gt;,
 &#39;InstallResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;InstallResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;InstallService&#39;: &lt;class &#39;webservice.InstallService&#39;&gt;,
 &#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0000000002C8AE58&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;cmdexecutor&#39;: &lt;module &#39;impl.cmdexecutor&#39; from &#39;C:\autotool\impl\cmdexecutor.pyc&#39;&gt;,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0000000002F60B38&gt;,
 &#39;generateJunitReport&#39;: &lt;module &#39;impl.generateJunitReport&#39; from &#39;C:\autotool\impl\generateJunitReport.pyc&#39;&gt;,
 &#39;handle_reboot_after_tasks&#39;: &lt;function handle_reboot_after_tasks at 0x0000000002F60AC8&gt;,
 &#39;installer&#39;: &lt;module &#39;impl.installer&#39; from &#39;C:\autotool\impl\installer.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0000000002F60668&gt;,
 &#39;threading&#39;: &lt;module &#39;threading&#39; from &#39;C:\Python27\lib\threading.pyc&#39;&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;,
          &#39;/rest/cmd&#39;,
          &#39;CommandService&#39;,
          &#39;/rest/install&#39;,
          &#39;InstallService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0000000002F605F8&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0000000002F60BA8&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002EB4B08&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c49699080">
<ol start="222" class="pre-context" id="pre49699080">
<li onclick="toggle('pre49699080', 'post49699080')"></li>
<li onclick="toggle('pre49699080', 'post49699080')">    def browser(self):</li>
<li onclick="toggle('pre49699080', 'post49699080')">        import browser</li>
<li onclick="toggle('pre49699080', 'post49699080')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre49699080', 'post49699080')"></li>
<li onclick="toggle('pre49699080', 'post49699080')">    def handle(self):</li>
<li onclick="toggle('pre49699080', 'post49699080')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre49699080', 'post49699080')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post49699080">
<li onclick="toggle('pre49699080', 'post49699080')">        </li>
<li onclick="toggle('pre49699080', 'post49699080')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre49699080', 'post49699080')">        def process(processors):</li>
<li onclick="toggle('pre49699080', 'post49699080')">            try:</li>
<li onclick="toggle('pre49699080', 'post49699080')">                if processors:</li>
<li onclick="toggle('pre49699080', 'post49699080')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49699080')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49699080"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002EB4B08&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c49699144">
<ol start="231" class="pre-context" id="pre49699144">
<li onclick="toggle('pre49699144', 'post49699144')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre49699144', 'post49699144')">        def process(processors):</li>
<li onclick="toggle('pre49699144', 'post49699144')">            try:</li>
<li onclick="toggle('pre49699144', 'post49699144')">                if processors:</li>
<li onclick="toggle('pre49699144', 'post49699144')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre49699144', 'post49699144')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre49699144', 'post49699144')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre49699144', 'post49699144')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post49699144">
<li onclick="toggle('pre49699144', 'post49699144')">            except web.HTTPError:</li>
<li onclick="toggle('pre49699144', 'post49699144')">                raise</li>
<li onclick="toggle('pre49699144', 'post49699144')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre49699144', 'post49699144')">                raise</li>
<li onclick="toggle('pre49699144', 'post49699144')">            except:</li>
<li onclick="toggle('pre49699144', 'post49699144')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '49699144')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v49699144"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0000000002F063C8&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002EB4B08&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x0000000002EB4B08&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use s: \\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware\n    s:\x07utomation\x07utotool\\dispatch2.bat\n    net use /delete s:&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;localhost:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;226&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;localhost:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;56848&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0000000001E42150&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0000000002F07470&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;s:utomationutotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:timed out
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:timed out
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:timed out
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:[Errno 10054] An existing connection was forcibly closed by the remote host
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;s:\automation\autotool\dispatch2.bat;net use /delete s:",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;s:\automation\autotool\dispatch2.bat;net use /delete s:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use s: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;s:\automation\autotool\dispatch2.bat;net use /delete s:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:[Errno 10054] An existing connection was forcibly closed by the remote host
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:timed out
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.NameError&#39;&gt; at /rest/cmd</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.NameError&#39;&gt; at /rest/cmd</h1>
  <h2>global name &#39;cmdexcutor&#39; is not defined</h2>
  <table><tr>
    <th>Python</th>
    <td>c:\autotool\webservice.py in POST, line 211</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://localhost:9180/rest/cmd</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c30564104">
<ol start="204" class="pre-context" id="pre30564104">
<li onclick="toggle('pre30564104', 'post30564104')">                try:</li>
<li onclick="toggle('pre30564104', 'post30564104')">                    request = msgobj[&#39;request&#39;]</li>
<li onclick="toggle('pre30564104', 'post30564104')">                    command = request[&#39;command&#39;]</li>
<li onclick="toggle('pre30564104', 'post30564104')">                    interpreter = request[&#39;interpreter&#39;]</li>
<li onclick="toggle('pre30564104', 'post30564104')">                    role = request[&#39;role&#39;]</li>
<li onclick="toggle('pre30564104', 'post30564104')">                    cmdexecutor.execute(command,interpreter,role)</li>
<li onclick="toggle('pre30564104', 'post30564104')">                    return CommandResponseJSON</li>
</ol>
<ol start="211" class="context-line"><li onclick="toggle('pre30564104', 'post30564104')">                except cmdexcutor.CommandException,e: <span>...</span></li></ol>
<ol start='212' class="post-context" id="post30564104">
<li onclick="toggle('pre30564104', 'post30564104')">                    return CommandResponseJSON_Error % e.value</li>
<li onclick="toggle('pre30564104', 'post30564104')">            else:</li>
<li onclick="toggle('pre30564104', 'post30564104')">                &#39;not support&#39;</li>
<li onclick="toggle('pre30564104', 'post30564104')">                return CommandResponseJSON_Error % &#39;not support&#39;</li>
<li onclick="toggle('pre30564104', 'post30564104')">        except AttributeError:</li>
<li onclick="toggle('pre30564104', 'post30564104')">            print &#39;there is error&#39;</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '30564104')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v30564104"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>command</td><td class="code"><div>&#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;</div></td></tr>
<tr><td>interpreter</td><td class="code"><div>&#39;bat&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;request&#39;: {&#39;command&#39;: &#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;,
             &#39;interpreter&#39;: &#39;bat&#39;,
             &#39;role&#39;: &#39;view_client&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;command&#39;: &#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;,
 &#39;interpreter&#39;: &#39;bat&#39;,
 &#39;role&#39;: &#39;view_client&#39;}</div></td></tr>
<tr><td>role</td><td class="code"><div>&#39;view_client&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.CommandService object at 0x0000000001C77470&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c30488392">
<ol start="430" class="pre-context" id="pre30488392">
<li onclick="toggle('pre30488392', 'post30488392')">        def handle_class(cls):</li>
<li onclick="toggle('pre30488392', 'post30488392')">            meth = web.ctx.method</li>
<li onclick="toggle('pre30488392', 'post30488392')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre30488392', 'post30488392')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre30488392', 'post30488392')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre30488392', 'post30488392')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre30488392', 'post30488392')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre30488392', 'post30488392')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post30488392">
<li onclick="toggle('pre30488392', 'post30488392')">            </li>
<li onclick="toggle('pre30488392', 'post30488392')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre30488392', 'post30488392')">            </li>
<li onclick="toggle('pre30488392', 'post30488392')">        if f is None:</li>
<li onclick="toggle('pre30488392', 'post30488392')">            raise web.notfound()</li>
<li onclick="toggle('pre30488392', 'post30488392')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '30488392')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v30488392"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method CommandService.POST of &lt;webservice.CommandService object at 0x0000000001C77470&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c30487816">
<ol start="454" class="pre-context" id="pre30487816">
<li onclick="toggle('pre30487816', 'post30487816')">                raise web.redirect(url)</li>
<li onclick="toggle('pre30487816', 'post30487816')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre30487816', 'post30487816')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre30487816', 'post30487816')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre30487816', 'post30487816')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre30487816', 'post30487816')">            else:</li>
<li onclick="toggle('pre30487816', 'post30487816')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre30487816', 'post30487816')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post30487816">
<li onclick="toggle('pre30487816', 'post30487816')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre30487816', 'post30487816')">            return f()</li>
<li onclick="toggle('pre30487816', 'post30487816')">        else:</li>
<li onclick="toggle('pre30487816', 'post30487816')">            return web.notfound()</li>
<li onclick="toggle('pre30487816', 'post30487816')"></li>
<li onclick="toggle('pre30487816', 'post30487816')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '30487816')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v30487816"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;CommandResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;CommandResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;CommandService&#39;: &lt;class &#39;webservice.CommandService&#39;&gt;,
 &#39;InstallResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;InstallResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;InstallService&#39;: &lt;class &#39;webservice.InstallService&#39;&gt;,
 &#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;c:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x00000000019B5918&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;cmdexecutor&#39;: &lt;module &#39;impl.cmdexecutor&#39; from &#39;c:\autotool\impl\cmdexecutor.py&#39;&gt;,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0000000001CE1588&gt;,
 &#39;handle_reboot_after_tasks&#39;: &lt;function handle_reboot_after_tasks at 0x0000000001CE1518&gt;,
 &#39;installer&#39;: &lt;module &#39;impl.installer&#39; from &#39;c:\autotool\impl\installer.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;c:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;c:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;c:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0000000001CE10B8&gt;,
 &#39;threading&#39;: &lt;module &#39;threading&#39; from &#39;C:\Python27\lib\threading.pyc&#39;&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;,
          &#39;/rest/cmd&#39;,
          &#39;CommandService&#39;,
          &#39;/rest/install&#39;,
          &#39;InstallService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;c:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;c:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0000000001CE1048&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0000000001CE15F8&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001C1CB88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c30562632">
<ol start="222" class="pre-context" id="pre30562632">
<li onclick="toggle('pre30562632', 'post30562632')"></li>
<li onclick="toggle('pre30562632', 'post30562632')">    def browser(self):</li>
<li onclick="toggle('pre30562632', 'post30562632')">        import browser</li>
<li onclick="toggle('pre30562632', 'post30562632')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre30562632', 'post30562632')"></li>
<li onclick="toggle('pre30562632', 'post30562632')">    def handle(self):</li>
<li onclick="toggle('pre30562632', 'post30562632')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre30562632', 'post30562632')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post30562632">
<li onclick="toggle('pre30562632', 'post30562632')">        </li>
<li onclick="toggle('pre30562632', 'post30562632')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre30562632', 'post30562632')">        def process(processors):</li>
<li onclick="toggle('pre30562632', 'post30562632')">            try:</li>
<li onclick="toggle('pre30562632', 'post30562632')">                if processors:</li>
<li onclick="toggle('pre30562632', 'post30562632')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '30562632')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v30562632"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001C1CB88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c30563784">
<ol start="231" class="pre-context" id="pre30563784">
<li onclick="toggle('pre30563784', 'post30563784')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre30563784', 'post30563784')">        def process(processors):</li>
<li onclick="toggle('pre30563784', 'post30563784')">            try:</li>
<li onclick="toggle('pre30563784', 'post30563784')">                if processors:</li>
<li onclick="toggle('pre30563784', 'post30563784')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre30563784', 'post30563784')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre30563784', 'post30563784')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre30563784', 'post30563784')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post30563784">
<li onclick="toggle('pre30563784', 'post30563784')">            except web.HTTPError:</li>
<li onclick="toggle('pre30563784', 'post30563784')">                raise</li>
<li onclick="toggle('pre30563784', 'post30563784')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre30563784', 'post30563784')">                raise</li>
<li onclick="toggle('pre30563784', 'post30563784')">            except:</li>
<li onclick="toggle('pre30563784', 'post30563784')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '30563784')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v30563784"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0000000001C72DD8&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001C1CB88&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x0000000001C1CB88&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;localhost:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;263&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;localhost:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;52198&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0000000000AD2150&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0000000001C772B0&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.NameError&#39;&gt; at /rest/cmd</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.NameError&#39;&gt; at /rest/cmd</h1>
  <h2>global name &#39;cmdexcutor&#39; is not defined</h2>
  <table><tr>
    <th>Python</th>
    <td>c:\autotool\webservice.py in POST, line 211</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://localhost:9180/rest/cmd</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>c:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c30487816">
<ol start="204" class="pre-context" id="pre30487816">
<li onclick="toggle('pre30487816', 'post30487816')">                try:</li>
<li onclick="toggle('pre30487816', 'post30487816')">                    request = msgobj[&#39;request&#39;]</li>
<li onclick="toggle('pre30487816', 'post30487816')">                    command = request[&#39;command&#39;]</li>
<li onclick="toggle('pre30487816', 'post30487816')">                    interpreter = request[&#39;interpreter&#39;]</li>
<li onclick="toggle('pre30487816', 'post30487816')">                    role = request[&#39;role&#39;]</li>
<li onclick="toggle('pre30487816', 'post30487816')">                    cmdexecutor.execute(command,interpreter,role)</li>
<li onclick="toggle('pre30487816', 'post30487816')">                    return CommandResponseJSON</li>
</ol>
<ol start="211" class="context-line"><li onclick="toggle('pre30487816', 'post30487816')">                except cmdexcutor.CommandException,e: <span>...</span></li></ol>
<ol start='212' class="post-context" id="post30487816">
<li onclick="toggle('pre30487816', 'post30487816')">                    return CommandResponseJSON_Error % e.value</li>
<li onclick="toggle('pre30487816', 'post30487816')">            else:</li>
<li onclick="toggle('pre30487816', 'post30487816')">                &#39;not support&#39;</li>
<li onclick="toggle('pre30487816', 'post30487816')">                return CommandResponseJSON_Error % &#39;not support&#39;</li>
<li onclick="toggle('pre30487816', 'post30487816')">        except AttributeError:</li>
<li onclick="toggle('pre30487816', 'post30487816')">            print &#39;there is error&#39;</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '30487816')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v30487816"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>command</td><td class="code"><div>&#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;</div></td></tr>
<tr><td>interpreter</td><td class="code"><div>&#39;bat&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;request&#39;: {&#39;command&#39;: &#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;,
             &#39;interpreter&#39;: &#39;bat&#39;,
             &#39;role&#39;: &#39;view_client&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;command&#39;: &#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;,
 &#39;interpreter&#39;: &#39;bat&#39;,
 &#39;role&#39;: &#39;view_client&#39;}</div></td></tr>
<tr><td>role</td><td class="code"><div>&#39;view_client&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.CommandService object at 0x0000000001E5ED30&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c30666696">
<ol start="430" class="pre-context" id="pre30666696">
<li onclick="toggle('pre30666696', 'post30666696')">        def handle_class(cls):</li>
<li onclick="toggle('pre30666696', 'post30666696')">            meth = web.ctx.method</li>
<li onclick="toggle('pre30666696', 'post30666696')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre30666696', 'post30666696')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre30666696', 'post30666696')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre30666696', 'post30666696')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre30666696', 'post30666696')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre30666696', 'post30666696')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post30666696">
<li onclick="toggle('pre30666696', 'post30666696')">            </li>
<li onclick="toggle('pre30666696', 'post30666696')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre30666696', 'post30666696')">            </li>
<li onclick="toggle('pre30666696', 'post30666696')">        if f is None:</li>
<li onclick="toggle('pre30666696', 'post30666696')">            raise web.notfound()</li>
<li onclick="toggle('pre30666696', 'post30666696')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '30666696')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v30666696"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method CommandService.POST of &lt;webservice.CommandService object at 0x0000000001E5ED30&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c29478088">
<ol start="454" class="pre-context" id="pre29478088">
<li onclick="toggle('pre29478088', 'post29478088')">                raise web.redirect(url)</li>
<li onclick="toggle('pre29478088', 'post29478088')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre29478088', 'post29478088')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre29478088', 'post29478088')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre29478088', 'post29478088')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre29478088', 'post29478088')">            else:</li>
<li onclick="toggle('pre29478088', 'post29478088')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre29478088', 'post29478088')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post29478088">
<li onclick="toggle('pre29478088', 'post29478088')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre29478088', 'post29478088')">            return f()</li>
<li onclick="toggle('pre29478088', 'post29478088')">        else:</li>
<li onclick="toggle('pre29478088', 'post29478088')">            return web.notfound()</li>
<li onclick="toggle('pre29478088', 'post29478088')"></li>
<li onclick="toggle('pre29478088', 'post29478088')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29478088')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29478088"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;CommandResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;CommandResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;CommandService&#39;: &lt;class &#39;webservice.CommandService&#39;&gt;,
 &#39;InstallResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;InstallResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;InstallService&#39;: &lt;class &#39;webservice.InstallService&#39;&gt;,
 &#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;c:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x00000000019B5918&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;cmdexecutor&#39;: &lt;module &#39;impl.cmdexecutor&#39; from &#39;c:\autotool\impl\cmdexecutor.py&#39;&gt;,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0000000001CE1588&gt;,
 &#39;handle_reboot_after_tasks&#39;: &lt;function handle_reboot_after_tasks at 0x0000000001CE1518&gt;,
 &#39;installer&#39;: &lt;module &#39;impl.installer&#39; from &#39;c:\autotool\impl\installer.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;c:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;c:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;c:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0000000001CE10B8&gt;,
 &#39;threading&#39;: &lt;module &#39;threading&#39; from &#39;C:\Python27\lib\threading.pyc&#39;&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;,
          &#39;/rest/cmd&#39;,
          &#39;CommandService&#39;,
          &#39;/rest/install&#39;,
          &#39;InstallService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;c:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;c:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0000000001CE15F8&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0000000001D30EB8&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001C1CB88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c29826952">
<ol start="222" class="pre-context" id="pre29826952">
<li onclick="toggle('pre29826952', 'post29826952')"></li>
<li onclick="toggle('pre29826952', 'post29826952')">    def browser(self):</li>
<li onclick="toggle('pre29826952', 'post29826952')">        import browser</li>
<li onclick="toggle('pre29826952', 'post29826952')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre29826952', 'post29826952')"></li>
<li onclick="toggle('pre29826952', 'post29826952')">    def handle(self):</li>
<li onclick="toggle('pre29826952', 'post29826952')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre29826952', 'post29826952')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post29826952">
<li onclick="toggle('pre29826952', 'post29826952')">        </li>
<li onclick="toggle('pre29826952', 'post29826952')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre29826952', 'post29826952')">        def process(processors):</li>
<li onclick="toggle('pre29826952', 'post29826952')">            try:</li>
<li onclick="toggle('pre29826952', 'post29826952')">                if processors:</li>
<li onclick="toggle('pre29826952', 'post29826952')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29826952')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29826952"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001C1CB88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>c:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c29826760">
<ol start="231" class="pre-context" id="pre29826760">
<li onclick="toggle('pre29826760', 'post29826760')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre29826760', 'post29826760')">        def process(processors):</li>
<li onclick="toggle('pre29826760', 'post29826760')">            try:</li>
<li onclick="toggle('pre29826760', 'post29826760')">                if processors:</li>
<li onclick="toggle('pre29826760', 'post29826760')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre29826760', 'post29826760')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre29826760', 'post29826760')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre29826760', 'post29826760')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post29826760">
<li onclick="toggle('pre29826760', 'post29826760')">            except web.HTTPError:</li>
<li onclick="toggle('pre29826760', 'post29826760')">                raise</li>
<li onclick="toggle('pre29826760', 'post29826760')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre29826760', 'post29826760')">                raise</li>
<li onclick="toggle('pre29826760', 'post29826760')">            except:</li>
<li onclick="toggle('pre29826760', 'post29826760')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '29826760')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v29826760"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0000000001C72E48&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000001C1CB88&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x0000000001C1CB88&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;localhost:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;263&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;localhost:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;52217&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0000000000AD2150&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0000000001C77400&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.NameError&#39;&gt; at /rest/cmd</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.NameError&#39;&gt; at /rest/cmd</h1>
  <h2>global name &#39;cmdexcutor&#39; is not defined</h2>
  <table><tr>
    <th>Python</th>
    <td>C:\autotool\webservice.py in POST, line 211</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://localhost:9180/rest/cmd</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>C:\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c50706760">
<ol start="204" class="pre-context" id="pre50706760">
<li onclick="toggle('pre50706760', 'post50706760')">                try:</li>
<li onclick="toggle('pre50706760', 'post50706760')">                    request = msgobj[&#39;request&#39;]</li>
<li onclick="toggle('pre50706760', 'post50706760')">                    command = request[&#39;command&#39;]</li>
<li onclick="toggle('pre50706760', 'post50706760')">                    interpreter = request[&#39;interpreter&#39;]</li>
<li onclick="toggle('pre50706760', 'post50706760')">                    role = request[&#39;role&#39;]</li>
<li onclick="toggle('pre50706760', 'post50706760')">                    cmdexecutor.execute(command,interpreter,role)</li>
<li onclick="toggle('pre50706760', 'post50706760')">                    return CommandResponseJSON</li>
</ol>
<ol start="211" class="context-line"><li onclick="toggle('pre50706760', 'post50706760')">                except cmdexcutor.CommandException,e: <span>...</span></li></ol>
<ol start='212' class="post-context" id="post50706760">
<li onclick="toggle('pre50706760', 'post50706760')">                    return CommandResponseJSON_Error % e.value</li>
<li onclick="toggle('pre50706760', 'post50706760')">            else:</li>
<li onclick="toggle('pre50706760', 'post50706760')">                &#39;not support&#39;</li>
<li onclick="toggle('pre50706760', 'post50706760')">                return CommandResponseJSON_Error % &#39;not support&#39;</li>
<li onclick="toggle('pre50706760', 'post50706760')">        except AttributeError:</li>
<li onclick="toggle('pre50706760', 'post50706760')">            print &#39;there is error&#39;</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50706760')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50706760"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>command</td><td class="code"><div>&#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;</div></td></tr>
<tr><td>interpreter</td><td class="code"><div>&#39;bat&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;request&#39;: {&#39;command&#39;: &#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;,
             &#39;interpreter&#39;: &#39;bat&#39;,
             &#39;role&#39;: &#39;view_client&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;command&#39;: &#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;,
 &#39;interpreter&#39;: &#39;bat&#39;,
 &#39;role&#39;: &#39;view_client&#39;}</div></td></tr>
<tr><td>role</td><td class="code"><div>&#39;view_client&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.CommandService object at 0x0000000002FD6358&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c50658056">
<ol start="430" class="pre-context" id="pre50658056">
<li onclick="toggle('pre50658056', 'post50658056')">        def handle_class(cls):</li>
<li onclick="toggle('pre50658056', 'post50658056')">            meth = web.ctx.method</li>
<li onclick="toggle('pre50658056', 'post50658056')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre50658056', 'post50658056')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre50658056', 'post50658056')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre50658056', 'post50658056')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre50658056', 'post50658056')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre50658056', 'post50658056')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post50658056">
<li onclick="toggle('pre50658056', 'post50658056')">            </li>
<li onclick="toggle('pre50658056', 'post50658056')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre50658056', 'post50658056')">            </li>
<li onclick="toggle('pre50658056', 'post50658056')">        if f is None:</li>
<li onclick="toggle('pre50658056', 'post50658056')">            raise web.notfound()</li>
<li onclick="toggle('pre50658056', 'post50658056')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50658056')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50658056"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method CommandService.POST of &lt;webservice.CommandService object at 0x0000000002FD6358&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c50657992">
<ol start="454" class="pre-context" id="pre50657992">
<li onclick="toggle('pre50657992', 'post50657992')">                raise web.redirect(url)</li>
<li onclick="toggle('pre50657992', 'post50657992')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre50657992', 'post50657992')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre50657992', 'post50657992')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre50657992', 'post50657992')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre50657992', 'post50657992')">            else:</li>
<li onclick="toggle('pre50657992', 'post50657992')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre50657992', 'post50657992')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post50657992">
<li onclick="toggle('pre50657992', 'post50657992')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre50657992', 'post50657992')">            return f()</li>
<li onclick="toggle('pre50657992', 'post50657992')">        else:</li>
<li onclick="toggle('pre50657992', 'post50657992')">            return web.notfound()</li>
<li onclick="toggle('pre50657992', 'post50657992')"></li>
<li onclick="toggle('pre50657992', 'post50657992')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50657992')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50657992"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;CommandResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;CommandResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;CommandService&#39;: &lt;class &#39;webservice.CommandService&#39;&gt;,
 &#39;InstallResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;InstallResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;InstallService&#39;: &lt;class &#39;webservice.InstallService&#39;&gt;,
 &#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;C:\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0000000002D36E58&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;cmdexecutor&#39;: &lt;module &#39;impl.cmdexecutor&#39; from &#39;C:\autotool\impl\cmdexecutor.pyc&#39;&gt;,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0000000003024668&gt;,
 &#39;handle_reboot_after_tasks&#39;: &lt;function handle_reboot_after_tasks at 0x00000000030245F8&gt;,
 &#39;installer&#39;: &lt;module &#39;impl.installer&#39; from &#39;C:\autotool\impl\installer.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;C:\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;C:\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;C:\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0000000003024198&gt;,
 &#39;threading&#39;: &lt;module &#39;threading&#39; from &#39;C:\Python27\lib\threading.pyc&#39;&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;,
          &#39;/rest/cmd&#39;,
          &#39;CommandService&#39;,
          &#39;/rest/install&#39;,
          &#39;InstallService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;C:\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;C:\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0000000003024128&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x00000000030246D8&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002F616C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c50807880">
<ol start="222" class="pre-context" id="pre50807880">
<li onclick="toggle('pre50807880', 'post50807880')"></li>
<li onclick="toggle('pre50807880', 'post50807880')">    def browser(self):</li>
<li onclick="toggle('pre50807880', 'post50807880')">        import browser</li>
<li onclick="toggle('pre50807880', 'post50807880')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre50807880', 'post50807880')"></li>
<li onclick="toggle('pre50807880', 'post50807880')">    def handle(self):</li>
<li onclick="toggle('pre50807880', 'post50807880')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre50807880', 'post50807880')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post50807880">
<li onclick="toggle('pre50807880', 'post50807880')">        </li>
<li onclick="toggle('pre50807880', 'post50807880')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre50807880', 'post50807880')">        def process(processors):</li>
<li onclick="toggle('pre50807880', 'post50807880')">            try:</li>
<li onclick="toggle('pre50807880', 'post50807880')">                if processors:</li>
<li onclick="toggle('pre50807880', 'post50807880')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50807880')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50807880"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002F616C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>C:\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c50807816">
<ol start="231" class="pre-context" id="pre50807816">
<li onclick="toggle('pre50807816', 'post50807816')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre50807816', 'post50807816')">        def process(processors):</li>
<li onclick="toggle('pre50807816', 'post50807816')">            try:</li>
<li onclick="toggle('pre50807816', 'post50807816')">                if processors:</li>
<li onclick="toggle('pre50807816', 'post50807816')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre50807816', 'post50807816')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre50807816', 'post50807816')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre50807816', 'post50807816')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post50807816">
<li onclick="toggle('pre50807816', 'post50807816')">            except web.HTTPError:</li>
<li onclick="toggle('pre50807816', 'post50807816')">                raise</li>
<li onclick="toggle('pre50807816', 'post50807816')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre50807816', 'post50807816')">                raise</li>
<li onclick="toggle('pre50807816', 'post50807816')">            except:</li>
<li onclick="toggle('pre50807816', 'post50807816')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50807816')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50807816"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0000000002FCFEB8&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002F616C8&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x0000000002F616C8&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;localhost:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;263&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;localhost:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;52235&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0000000001DE2150&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0000000002FD6198&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <meta name="robots" content="NONE,NOARCHIVE" />
  <title>&lt;type &#39;exceptions.NameError&#39;&gt; at /rest/cmd</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { 
        border:1px solid #ccc; border-collapse: collapse; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { 
        padding:1px 6px 1px 3px; background:#fefefe; text-align:left; 
        font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%;}
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { 
        font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { 
        padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { 
        font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; 
        // Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    //-->
  </script>
</head>
<body>

<div id="summary">
  <h1>&lt;type &#39;exceptions.NameError&#39;&gt; at /rest/cmd</h1>
  <h2>global name &#39;cmdexcutor&#39; is not defined</h2>
  <table><tr>
    <th>Python</th>
    <td>E:\GitHub\autotool\webservice.py in POST, line 211</td>
  </tr><tr>
    <th>Web</th>
    <td>POST http://localhost:9180/rest/cmd</td>
  </tr></table>
</div>
<div id="traceback">
<h2>Traceback <span>(innermost first)</span></h2>
<ul class="traceback">
<li class="frame">
<code>E:\GitHub\autotool\webservice.py</code> in <code>POST</code>
<div class="context" id="c50418568">
<ol start="204" class="pre-context" id="pre50418568">
<li onclick="toggle('pre50418568', 'post50418568')">                try:</li>
<li onclick="toggle('pre50418568', 'post50418568')">                    request = msgobj[&#39;request&#39;]</li>
<li onclick="toggle('pre50418568', 'post50418568')">                    command = request[&#39;command&#39;]</li>
<li onclick="toggle('pre50418568', 'post50418568')">                    interpreter = request[&#39;interpreter&#39;]</li>
<li onclick="toggle('pre50418568', 'post50418568')">                    role = request[&#39;role&#39;]</li>
<li onclick="toggle('pre50418568', 'post50418568')">                    cmdexecutor.execute(command,interpreter,role)</li>
<li onclick="toggle('pre50418568', 'post50418568')">                    return CommandResponseJSON</li>
</ol>
<ol start="211" class="context-line"><li onclick="toggle('pre50418568', 'post50418568')">                except cmdexcutor.CommandException,e: <span>...</span></li></ol>
<ol start='212' class="post-context" id="post50418568">
<li onclick="toggle('pre50418568', 'post50418568')">                    return CommandResponseJSON_Error % e.value</li>
<li onclick="toggle('pre50418568', 'post50418568')">            else:</li>
<li onclick="toggle('pre50418568', 'post50418568')">                &#39;not support&#39;</li>
<li onclick="toggle('pre50418568', 'post50418568')">                return CommandResponseJSON_Error % &#39;not support&#39;</li>
<li onclick="toggle('pre50418568', 'post50418568')">        except AttributeError:</li>
<li onclick="toggle('pre50418568', 'post50418568')">            print &#39;there is error&#39;</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50418568')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50418568"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>body</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>command</td><td class="code"><div>&#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;</div></td></tr>
<tr><td>interpreter</td><td class="code"><div>&#39;bat&#39;</div></td></tr>
<tr><td>msgobj</td><td class="code"><div>{&#39;request&#39;: {&#39;command&#39;: &#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;,
             &#39;interpreter&#39;: &#39;bat&#39;,
             &#39;role&#39;: &#39;view_client&#39;}}</div></td></tr>
<tr><td>request</td><td class="code"><div>{&#39;command&#39;: &#39;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&#39;,
 &#39;interpreter&#39;: &#39;bat&#39;,
 &#39;role&#39;: &#39;view_client&#39;}</div></td></tr>
<tr><td>role</td><td class="code"><div>&#39;view_client&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;webservice.CommandService object at 0x0000000002F37358&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>E:\GitHub\autotool\web\application.py</code> in <code>handle_class</code>
<div class="context" id="c50472008">
<ol start="430" class="pre-context" id="pre50472008">
<li onclick="toggle('pre50472008', 'post50472008')">        def handle_class(cls):</li>
<li onclick="toggle('pre50472008', 'post50472008')">            meth = web.ctx.method</li>
<li onclick="toggle('pre50472008', 'post50472008')">            if meth == &#39;HEAD&#39; and not hasattr(cls, meth):</li>
<li onclick="toggle('pre50472008', 'post50472008')">                meth = &#39;GET&#39;</li>
<li onclick="toggle('pre50472008', 'post50472008')">            if not hasattr(cls, meth):</li>
<li onclick="toggle('pre50472008', 'post50472008')">                raise web.nomethod(cls)</li>
<li onclick="toggle('pre50472008', 'post50472008')">            tocall = getattr(cls(), meth)</li>
</ol>
<ol start="437" class="context-line"><li onclick="toggle('pre50472008', 'post50472008')">            return tocall(*args) <span>...</span></li></ol>
<ol start='438' class="post-context" id="post50472008">
<li onclick="toggle('pre50472008', 'post50472008')">            </li>
<li onclick="toggle('pre50472008', 'post50472008')">        def is_class(o): return isinstance(o, (types.ClassType, type))</li>
<li onclick="toggle('pre50472008', 'post50472008')">            </li>
<li onclick="toggle('pre50472008', 'post50472008')">        if f is None:</li>
<li onclick="toggle('pre50472008', 'post50472008')">            raise web.notfound()</li>
<li onclick="toggle('pre50472008', 'post50472008')">        elif isinstance(f, application):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50472008')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50472008"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>meth</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>tocall</td><td class="code"><div>&lt;bound method CommandService.POST of &lt;webservice.CommandService object at 0x0000000002F37358&gt;&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>E:\GitHub\autotool\web\application.py</code> in <code>_delegate</code>
<div class="context" id="c50418504">
<ol start="454" class="pre-context" id="pre50418504">
<li onclick="toggle('pre50418504', 'post50418504')">                raise web.redirect(url)</li>
<li onclick="toggle('pre50418504', 'post50418504')">            elif &#39;.&#39; in f:</li>
<li onclick="toggle('pre50418504', 'post50418504')">                mod, cls = f.rsplit(&#39;.&#39;, 1)</li>
<li onclick="toggle('pre50418504', 'post50418504')">                mod = __import__(mod, None, None, [&#39;&#39;])</li>
<li onclick="toggle('pre50418504', 'post50418504')">                cls = getattr(mod, cls)</li>
<li onclick="toggle('pre50418504', 'post50418504')">            else:</li>
<li onclick="toggle('pre50418504', 'post50418504')">                cls = fvars[f]</li>
</ol>
<ol start="461" class="context-line"><li onclick="toggle('pre50418504', 'post50418504')">            return handle_class(cls) <span>...</span></li></ol>
<ol start='462' class="post-context" id="post50418504">
<li onclick="toggle('pre50418504', 'post50418504')">        elif hasattr(f, &#39;__call__&#39;):</li>
<li onclick="toggle('pre50418504', 'post50418504')">            return f()</li>
<li onclick="toggle('pre50418504', 'post50418504')">        else:</li>
<li onclick="toggle('pre50418504', 'post50418504')">            return web.notfound()</li>
<li onclick="toggle('pre50418504', 'post50418504')"></li>
<li onclick="toggle('pre50418504', 'post50418504')">    def _match(self, mapping, value):</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50418504')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50418504"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>cls</td><td class="code"><div>&lt;class &#39;webservice.CommandService&#39;&gt;</div></td></tr>
<tr><td>f</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>fvars</td><td class="code"><div>{&#39;CommandResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;CommandResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;CommandService&#39;: &lt;class &#39;webservice.CommandService&#39;&gt;,
 &#39;InstallResponseJSON&#39;: &#39;{&quot;response&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;InstallResponseJSON_Error&#39;: &#39;{\n  &quot;response&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;InstallService&#39;: &lt;class &#39;webservice.InstallService&#39;&gt;,
 &#39;LoggingResponseJSON_Error&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;LoggingResponseJSON_NotSupport&#39;: &#39;{&quot;loggingresponse&quot;:{&quot;status&quot;:&quot;Not Support Request&quot;}}&#39;,
 &#39;LoggingService&#39;: &lt;class &#39;webservice.LoggingService&#39;&gt;,
 &#39;RegistryService&#39;: &lt;class &#39;webservice.RegistryService&#39;&gt;,
 &#39;SetRegistryResponseJSON&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;SetRegistryResponseJSON_Error&#39;: &#39;{&quot;registry&quot;:{&quot;status&quot;:&quot;Error&quot;}}&#39;,
 &#39;StartLoggingResponseJSON&#39;: &#39;{&quot;startloggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StartLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;startloggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;StopLoggingResponseJSON&#39;: &#39;{&quot;stoploggingresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;StopLoggingResponseJSON_Error&#39;: &#39;{\n  &quot;stoploggingresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;ZipLogsResponseJSON&#39;: &#39;{&quot;ziplogsresponse&quot;:{&quot;status&quot;:&quot;OK&quot;}}&#39;,
 &#39;ZipLogsResponseJSON_Error&#39;: &#39;{\n  &quot;ziplogsresponse&quot;: {\n    &quot;status&quot;: &quot;Error&quot;,\n    &quot;description&quot;: &quot;%s&quot;\n  }\n}&#39;,
 &#39;__builtins__&#39;: {&#39;ArithmeticError&#39;: &lt;type &#39;exceptions.ArithmeticError&#39;&gt;,
                  &#39;AssertionError&#39;: &lt;type &#39;exceptions.AssertionError&#39;&gt;,
                  &#39;AttributeError&#39;: &lt;type &#39;exceptions.AttributeError&#39;&gt;,
                  &#39;BaseException&#39;: &lt;type &#39;exceptions.BaseException&#39;&gt;,
                  &#39;BufferError&#39;: &lt;type &#39;exceptions.BufferError&#39;&gt;,
                  &#39;BytesWarning&#39;: &lt;type &#39;exceptions.BytesWarning&#39;&gt;,
                  &#39;DeprecationWarning&#39;: &lt;type &#39;exceptions.DeprecationWarning&#39;&gt;,
                  &#39;EOFError&#39;: &lt;type &#39;exceptions.EOFError&#39;&gt;,
                  &#39;Ellipsis&#39;: Ellipsis,
                  &#39;EnvironmentError&#39;: &lt;type &#39;exceptions.EnvironmentError&#39;&gt;,
                  &#39;Exception&#39;: &lt;type &#39;exceptions.Exception&#39;&gt;,
                  &#39;False&#39;: False,
                  &#39;FloatingPointError&#39;: &lt;type &#39;exceptions.FloatingPointError&#39;&gt;,
                  &#39;FutureWarning&#39;: &lt;type &#39;exceptions.FutureWarning&#39;&gt;,
                  &#39;GeneratorExit&#39;: &lt;type &#39;exceptions.GeneratorExit&#39;&gt;,
                  &#39;IOError&#39;: &lt;type &#39;exceptions.IOError&#39;&gt;,
                  &#39;ImportError&#39;: &lt;type &#39;exceptions.ImportError&#39;&gt;,
                  &#39;ImportWarning&#39;: &lt;type &#39;exceptions.ImportWarning&#39;&gt;,
                  &#39;IndentationError&#39;: &lt;type &#39;exceptions.IndentationError&#39;&gt;,
                  &#39;IndexError&#39;: &lt;type &#39;exceptions.IndexError&#39;&gt;,
                  &#39;KeyError&#39;: &lt;type &#39;exceptions.KeyError&#39;&gt;,
                  &#39;KeyboardInterrupt&#39;: &lt;type &#39;exceptions.KeyboardInterrupt&#39;&gt;,
                  &#39;LookupError&#39;: &lt;type &#39;exceptions.LookupError&#39;&gt;,
                  &#39;MemoryError&#39;: &lt;type &#39;exceptions.MemoryError&#39;&gt;,
                  &#39;NameError&#39;: &lt;type &#39;exceptions.NameError&#39;&gt;,
                  &#39;None&#39;: None,
                  &#39;NotImplemented&#39;: NotImplemented,
                  &#39;NotImplementedError&#39;: &lt;type &#39;exceptions.NotImplementedError&#39;&gt;,
                  &#39;OSError&#39;: &lt;type &#39;exceptions.OSError&#39;&gt;,
                  &#39;OverflowError&#39;: &lt;type &#39;exceptions.OverflowError&#39;&gt;,
                  &#39;PendingDeprecationWarning&#39;: &lt;type &#39;exceptions.PendingDeprecationWarning&#39;&gt;,
                  &#39;ReferenceError&#39;: &lt;type &#39;exceptions.ReferenceError&#39;&gt;,
                  &#39;RuntimeError&#39;: &lt;type &#39;exceptions.RuntimeError&#39;&gt;,
                  &#39;RuntimeWarning&#39;: &lt;type &#39;exceptions.RuntimeWarning&#39;&gt;,
                  &#39;StandardError&#39;: &lt;type &#39;exceptions.StandardError&#39;&gt;,
                  &#39;StopIteration&#39;: &lt;type &#39;exceptions.StopIteration&#39;&gt;,
                  &#39;SyntaxError&#39;: &lt;type &#39;exceptions.SyntaxError&#39;&gt;,
                  &#39;SyntaxWarning&#39;: &lt;type &#39;exceptions.SyntaxWarning&#39;&gt;,
                  &#39;SystemError&#39;: &lt;type &#39;exceptions.SystemError&#39;&gt;,
                  &#39;SystemExit&#39;: &lt;type &#39;exceptions.SystemExit&#39;&gt;,
                  &#39;TabError&#39;: &lt;type &#39;exceptions.TabError&#39;&gt;,
                  &#39;True&#39;: True,
                  &#39;TypeError&#39;: &lt;type &#39;exceptions.TypeError&#39;&gt;,
                  &#39;UnboundLocalError&#39;: &lt;type &#39;exceptions.UnboundLocalError&#39;&gt;,
                  &#39;UnicodeDecodeError&#39;: &lt;type &#39;exceptions.UnicodeDecodeError&#39;&gt;,
                  &#39;UnicodeEncodeError&#39;: &lt;type &#39;exceptions.UnicodeEncodeError&#39;&gt;,
                  &#39;UnicodeError&#39;: &lt;type &#39;exceptions.UnicodeError&#39;&gt;,
                  &#39;UnicodeTranslateError&#39;: &lt;type &#39;exceptions.UnicodeTranslateError&#39;&gt;,
                  &#39;UnicodeWarning&#39;: &lt;type &#39;exceptions.UnicodeWarning&#39;&gt;,
                  &#39;UserWarning&#39;: &lt;type &#39;exceptions.UserWarning&#39;&gt;,
                  &#39;ValueError&#39;: &lt;type &#39;exceptions.ValueError&#39;&gt;,
                  &#39;Warning&#39;: &lt;type &#39;exceptions.Warning&#39;&gt;,
                  &#39;WindowsError&#39;: &lt;type &#39;exceptions.WindowsError&#39;&gt;,
                  &#39;ZeroDivisionError&#39;: &lt;type &#39;exceptions.ZeroDivisionError&#39;&gt;,
                  &#39;__debug__&#39;: True,
                  &#39;__doc__&#39;: &quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#39; object; Ellipsis represents `...&#39; in slices.&quot;,
                  &#39;__import__&#39;: &lt;built-in function __import__&gt;,
                  &#39;__name__&#39;: &#39;__builtin__&#39;,
                  &#39;__package__&#39;: None,
                  &#39;abs&#39;: &lt;built-in function abs&gt;,
                  &#39;all&#39;: &lt;built-in function all&gt;,
                  &#39;any&#39;: &lt;built-in function any&gt;,
                  &#39;apply&#39;: &lt;built-in function apply&gt;,
                  &#39;basestring&#39;: &lt;type &#39;basestring&#39;&gt;,
                  &#39;bin&#39;: &lt;built-in function bin&gt;,
                  &#39;bool&#39;: &lt;type &#39;bool&#39;&gt;,
                  &#39;buffer&#39;: &lt;type &#39;buffer&#39;&gt;,
                  &#39;bytearray&#39;: &lt;type &#39;bytearray&#39;&gt;,
                  &#39;bytes&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;callable&#39;: &lt;built-in function callable&gt;,
                  &#39;chr&#39;: &lt;built-in function chr&gt;,
                  &#39;classmethod&#39;: &lt;type &#39;classmethod&#39;&gt;,
                  &#39;cmp&#39;: &lt;built-in function cmp&gt;,
                  &#39;coerce&#39;: &lt;built-in function coerce&gt;,
                  &#39;compile&#39;: &lt;built-in function compile&gt;,
                  &#39;complex&#39;: &lt;type &#39;complex&#39;&gt;,
                  &#39;copyright&#39;: Copyright (c) 2001-2014 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved.,
                  &#39;credits&#39;:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information.,
                  &#39;delattr&#39;: &lt;built-in function delattr&gt;,
                  &#39;dict&#39;: &lt;type &#39;dict&#39;&gt;,
                  &#39;dir&#39;: &lt;built-in function dir&gt;,
                  &#39;divmod&#39;: &lt;built-in function divmod&gt;,
                  &#39;enumerate&#39;: &lt;type &#39;enumerate&#39;&gt;,
                  &#39;eval&#39;: &lt;built-in function eval&gt;,
                  &#39;execfile&#39;: &lt;built-in function execfile&gt;,
                  &#39;exit&#39;: Use exit() or Ctrl-Z plus Return to exit,
                  &#39;file&#39;: &lt;type &#39;file&#39;&gt;,
                  &#39;filter&#39;: &lt;built-in function filter&gt;,
                  &#39;float&#39;: &lt;type &#39;float&#39;&gt;,
                  &#39;format&#39;: &lt;built-in function format&gt;,
                  &#39;frozenset&#39;: &lt;type &#39;frozenset&#39;&gt;,
                  &#39;getattr&#39;: &lt;built-in function getattr&gt;,
                  &#39;globals&#39;: &lt;built-in function globals&gt;,
                  &#39;hasattr&#39;: &lt;built-in function hasattr&gt;,
                  &#39;hash&#39;: &lt;built-in function hash&gt;,
                  &#39;help&#39;: Type help() for interactive help, or help(object) for help about object.,
                  &#39;hex&#39;: &lt;built-in function hex&gt;,
                  &#39;id&#39;: &lt;built-in function id&gt;,
                  &#39;input&#39;: &lt;built-in function input&gt;,
                  &#39;int&#39;: &lt;type &#39;int&#39;&gt;,
                  &#39;intern&#39;: &lt;built-in function intern&gt;,
                  &#39;isinstance&#39;: &lt;built-in function isinstance&gt;,
                  &#39;issubclass&#39;: &lt;built-in function issubclass&gt;,
                  &#39;iter&#39;: &lt;built-in function iter&gt;,
                  &#39;len&#39;: &lt;built-in function len&gt;,
                  &#39;license&#39;: Type license() to see the full license text,
                  &#39;list&#39;: &lt;type &#39;list&#39;&gt;,
                  &#39;locals&#39;: &lt;built-in function locals&gt;,
                  &#39;long&#39;: &lt;type &#39;long&#39;&gt;,
                  &#39;map&#39;: &lt;built-in function map&gt;,
                  &#39;max&#39;: &lt;built-in function max&gt;,
                  &#39;memoryview&#39;: &lt;type &#39;memoryview&#39;&gt;,
                  &#39;min&#39;: &lt;built-in function min&gt;,
                  &#39;next&#39;: &lt;built-in function next&gt;,
                  &#39;object&#39;: &lt;type &#39;object&#39;&gt;,
                  &#39;oct&#39;: &lt;built-in function oct&gt;,
                  &#39;open&#39;: &lt;built-in function open&gt;,
                  &#39;ord&#39;: &lt;built-in function ord&gt;,
                  &#39;pow&#39;: &lt;built-in function pow&gt;,
                  &#39;print&#39;: &lt;built-in function print&gt;,
                  &#39;property&#39;: &lt;type &#39;property&#39;&gt;,
                  &#39;quit&#39;: Use quit() or Ctrl-Z plus Return to exit,
                  &#39;range&#39;: &lt;built-in function range&gt;,
                  &#39;raw_input&#39;: &lt;built-in function raw_input&gt;,
                  &#39;reduce&#39;: &lt;built-in function reduce&gt;,
                  &#39;reload&#39;: &lt;built-in function reload&gt;,
                  &#39;repr&#39;: &lt;built-in function repr&gt;,
                  &#39;reversed&#39;: &lt;type &#39;reversed&#39;&gt;,
                  &#39;round&#39;: &lt;built-in function round&gt;,
                  &#39;set&#39;: &lt;type &#39;set&#39;&gt;,
                  &#39;setattr&#39;: &lt;built-in function setattr&gt;,
                  &#39;slice&#39;: &lt;type &#39;slice&#39;&gt;,
                  &#39;sorted&#39;: &lt;built-in function sorted&gt;,
                  &#39;staticmethod&#39;: &lt;type &#39;staticmethod&#39;&gt;,
                  &#39;str&#39;: &lt;type &#39;str&#39;&gt;,
                  &#39;sum&#39;: &lt;built-in function sum&gt;,
                  &#39;super&#39;: &lt;type &#39;super&#39;&gt;,
                  &#39;tuple&#39;: &lt;type &#39;tuple&#39;&gt;,
                  &#39;type&#39;: &lt;type &#39;type&#39;&gt;,
                  &#39;unichr&#39;: &lt;built-in function unichr&gt;,
                  &#39;unicode&#39;: &lt;type &#39;unicode&#39;&gt;,
                  &#39;vars&#39;: &lt;built-in function vars&gt;,
                  &#39;xrange&#39;: &lt;type &#39;xrange&#39;&gt;,
                  &#39;zip&#39;: &lt;built-in function zip&gt;},
 &#39;__doc__&#39;: None,
 &#39;__file__&#39;: &#39;E:\\GitHub\\autotool\\webservice.pyc&#39;,
 &#39;__init__&#39;: &lt;method-wrapper &#39;__init__&#39; of module object at 0x0000000002CBEDC8&gt;,
 &#39;__name__&#39;: &#39;webservice&#39;,
 &#39;__package__&#39;: None,
 &#39;cmdexecutor&#39;: &lt;module &#39;impl.cmdexecutor&#39; from &#39;E:\GitHub\autotool\impl\cmdexecutor.py&#39;&gt;,
 &#39;create_tempdir&#39;: &lt;function create_tempdir at 0x0000000002FB57B8&gt;,
 &#39;handle_reboot_after_tasks&#39;: &lt;function handle_reboot_after_tasks at 0x0000000002FB5748&gt;,
 &#39;installer&#39;: &lt;module &#39;impl.installer&#39; from &#39;E:\GitHub\autotool\impl\installer.pyc&#39;&gt;,
 &#39;json&#39;: &lt;module &#39;json&#39; from &#39;C:\Python27\lib\json\__init__.pyc&#39;&gt;,
 &#39;logcaptor&#39;: &lt;module &#39;impl.logcaptor&#39; from &#39;E:\GitHub\autotool\impl\logcaptor.pyc&#39;&gt;,
 &#39;logtransfer&#39;: &lt;module &#39;impl.logtransfer&#39; from &#39;E:\GitHub\autotool\impl\logtransfer.pyc&#39;&gt;,
 &#39;os&#39;: &lt;module &#39;os&#39; from &#39;C:\Python27\lib\os.pyc&#39;&gt;,
 &#39;re&#39;: &lt;module &#39;re&#39; from &#39;C:\Python27\lib\re.pyc&#39;&gt;,
 &#39;registry&#39;: &lt;module &#39;impl.registry&#39; from &#39;E:\GitHub\autotool\impl\registry.pyc&#39;&gt;,
 &#39;start_web_services&#39;: &lt;function start_web_services at 0x0000000002FB52E8&gt;,
 &#39;threading&#39;: &lt;module &#39;threading&#39; from &#39;C:\Python27\lib\threading.pyc&#39;&gt;,
 &#39;urllib&#39;: &lt;module &#39;urllib&#39; from &#39;C:\Python27\lib\urllib.pyc&#39;&gt;,
 &#39;urls&#39;: (&#39;/rest/registry/?&#39;,
          &#39;RegistryService&#39;,
          &#39;/rest/logging&#39;,
          &#39;LoggingService&#39;,
          &#39;/rest/cmd&#39;,
          &#39;CommandService&#39;,
          &#39;/rest/install&#39;,
          &#39;InstallService&#39;),
 &#39;web&#39;: &lt;module &#39;web&#39; from &#39;E:\GitHub\autotool\web\__init__.pyc&#39;&gt;,
 &#39;windows&#39;: &lt;module &#39;impl.windows&#39; from &#39;E:\GitHub\autotool\impl\windows.pyc&#39;&gt;}</div></td></tr>
<tr><td>handle_class</td><td class="code"><div>&lt;function handle_class at 0x0000000002FB5278&gt;</div></td></tr>
<tr><td>is_class</td><td class="code"><div>&lt;function is_class at 0x0000000002FB5828&gt;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002EF4F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>E:\GitHub\autotool\web\application.py</code> in <code>handle</code>
<div class="context" id="c50539528">
<ol start="222" class="pre-context" id="pre50539528">
<li onclick="toggle('pre50539528', 'post50539528')"></li>
<li onclick="toggle('pre50539528', 'post50539528')">    def browser(self):</li>
<li onclick="toggle('pre50539528', 'post50539528')">        import browser</li>
<li onclick="toggle('pre50539528', 'post50539528')">        return browser.AppBrowser(self)</li>
<li onclick="toggle('pre50539528', 'post50539528')"></li>
<li onclick="toggle('pre50539528', 'post50539528')">    def handle(self):</li>
<li onclick="toggle('pre50539528', 'post50539528')">        fn, args = self._match(self.mapping, web.ctx.path)</li>
</ol>
<ol start="229" class="context-line"><li onclick="toggle('pre50539528', 'post50539528')">        return self._delegate(fn, self.fvars, args) <span>...</span></li></ol>
<ol start='230' class="post-context" id="post50539528">
<li onclick="toggle('pre50539528', 'post50539528')">        </li>
<li onclick="toggle('pre50539528', 'post50539528')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre50539528', 'post50539528')">        def process(processors):</li>
<li onclick="toggle('pre50539528', 'post50539528')">            try:</li>
<li onclick="toggle('pre50539528', 'post50539528')">                if processors:</li>
<li onclick="toggle('pre50539528', 'post50539528')">                    p, processors = processors[0], processors[1:]</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50539528')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50539528"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>args</td><td class="code"><div>[]</div></td></tr>
<tr><td>fn</td><td class="code"><div>u&#39;CommandService&#39;</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002EF4F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
<li class="frame">
<code>E:\GitHub\autotool\web\application.py</code> in <code>process</code>
<div class="context" id="c50539464">
<ol start="231" class="pre-context" id="pre50539464">
<li onclick="toggle('pre50539464', 'post50539464')">    def handle_with_processors(self):</li>
<li onclick="toggle('pre50539464', 'post50539464')">        def process(processors):</li>
<li onclick="toggle('pre50539464', 'post50539464')">            try:</li>
<li onclick="toggle('pre50539464', 'post50539464')">                if processors:</li>
<li onclick="toggle('pre50539464', 'post50539464')">                    p, processors = processors[0], processors[1:]</li>
<li onclick="toggle('pre50539464', 'post50539464')">                    return p(lambda: process(processors))</li>
<li onclick="toggle('pre50539464', 'post50539464')">                else:</li>
</ol>
<ol start="238" class="context-line"><li onclick="toggle('pre50539464', 'post50539464')">                    return self.handle() <span>...</span></li></ol>
<ol start='239' class="post-context" id="post50539464">
<li onclick="toggle('pre50539464', 'post50539464')">            except web.HTTPError:</li>
<li onclick="toggle('pre50539464', 'post50539464')">                raise</li>
<li onclick="toggle('pre50539464', 'post50539464')">            except (KeyboardInterrupt, SystemExit):</li>
<li onclick="toggle('pre50539464', 'post50539464')">                raise</li>
<li onclick="toggle('pre50539464', 'post50539464')">            except:</li>
<li onclick="toggle('pre50539464', 'post50539464')">                print &gt;&gt; web.debug, traceback.format_exc()</li>
</ol>
  </div>

<div class="commands">
<a href='#' onclick="return varToggle(this, '50539464')"><span>&#x25b6;</span> Local vars</a>

</div>

<table class="vars"
id="v50539464"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>process</td><td class="code"><div>&lt;function process at 0x0000000002F40048&gt;</div></td></tr>
<tr><td>processors</td><td class="code"><div>[]</div></td></tr>
<tr><td>self</td><td class="code"><div>&lt;web.application.application instance at 0x0000000002EF4F88&gt;</div></td></tr>
</tbody>
</table>



  </li>
  </ul>
</div>

<div id="requestinfo">
<h2>Response so far</h2>
<h3>HEADERS</h3>
<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>Content-Type</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
</tbody>
</table>


<h3>BODY</h3>
<p class="req" style="padding-bottom: 2em"><code>

</code></p>

<h2>Request information</h2>

<h3>INPUT</h3>

<p>No data.</p>





<h3 id="cookie-info">COOKIES</h3>

<p>No data.</p>





<h3 id="meta-info">META</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>app_stack</td><td class="code"><div>[&lt;web.application.application instance at 0x0000000002EF4F88&gt;]</div></td></tr>
<tr><td>data</td><td class="code"><div>&#39;{\n  &quot;request&quot;: {\n    &quot;command&quot;: r&quot;net use y: \\\\sanya.eng.vmware.com\\exchange\\gshi /user:sanya\\gshi vmware;ping 127.0.0.1 -n 10;y:\\automation\\autotool\\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10&quot;,\n    &quot;interpreter&quot;: &quot;bat&quot;,\n    &quot;role&quot;: &quot;view_client&quot;\n  }\n}&#39;</div></td></tr>
<tr><td>fullpath</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>headers</td><td class="code"><div>[(&#39;Content-Type&#39;, &#39;application/json&#39;)]</div></td></tr>
<tr><td>home</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homedomain</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>homepath</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>host</td><td class="code"><div>u&#39;localhost:9180&#39;</div></td></tr>
<tr><td>ip</td><td class="code"><div>u&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>method</td><td class="code"><div>u&#39;POST&#39;</div></td></tr>
<tr><td>output</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>path</td><td class="code"><div>u&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>protocol</td><td class="code"><div>u&#39;http&#39;</div></td></tr>
<tr><td>query</td><td class="code"><div>u&#39;&#39;</div></td></tr>
<tr><td>realhome</td><td class="code"><div>u&#39;http://localhost:9180&#39;</div></td></tr>
<tr><td>status</td><td class="code"><div>&#39;200 OK&#39;</div></td></tr>
</tbody>
</table>




<h3 id="meta-info">ENVIRONMENT</h3>

<table class="req"
><thead><tr><th>Variable</th><th>Value</th></tr></thead>
<tbody>
<tr><td>ACTUAL_SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>CONTENT_LENGTH</td><td class="code"><div>&#39;263&#39;</div></td></tr>
<tr><td>CONTENT_TYPE</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT</td><td class="code"><div>&#39;application/json&#39;</div></td></tr>
<tr><td>HTTP_ACCEPT_ENCODING</td><td class="code"><div>&#39;identity&#39;</div></td></tr>
<tr><td>HTTP_HOST</td><td class="code"><div>&#39;localhost:9180&#39;</div></td></tr>
<tr><td>PATH_INFO</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>QUERY_STRING</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>REMOTE_ADDR</td><td class="code"><div>&#39;127.0.0.1&#39;</div></td></tr>
<tr><td>REMOTE_PORT</td><td class="code"><div>&#39;52300&#39;</div></td></tr>
<tr><td>REQUEST_METHOD</td><td class="code"><div>&#39;POST&#39;</div></td></tr>
<tr><td>REQUEST_URI</td><td class="code"><div>&#39;/rest/cmd&#39;</div></td></tr>
<tr><td>SCRIPT_NAME</td><td class="code"><div>&#39;&#39;</div></td></tr>
<tr><td>SERVER_NAME</td><td class="code"><div>&#39;localhost&#39;</div></td></tr>
<tr><td>SERVER_PORT</td><td class="code"><div>&#39;9180&#39;</div></td></tr>
<tr><td>SERVER_PROTOCOL</td><td class="code"><div>&#39;HTTP/1.1&#39;</div></td></tr>
<tr><td>SERVER_SOFTWARE</td><td class="code"><div>&#39;CherryPy/3.2.0 Server&#39;</div></td></tr>
<tr><td>wsgi.errors</td><td class="code"><div>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0x0000000001DB2150&gt;</div></td></tr>
<tr><td>wsgi.input</td><td class="code"><div>&lt;web.wsgiserver.KnownLengthRFile object at 0x0000000002F37198&gt;</div></td></tr>
<tr><td>wsgi.multiprocess</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.multithread</td><td class="code"><div>True</div></td></tr>
<tr><td>wsgi.run_once</td><td class="code"><div>False</div></td></tr>
<tr><td>wsgi.url_scheme</td><td class="code"><div>&#39;http&#39;</div></td></tr>
<tr><td>wsgi.version</td><td class="code"><div>(1, 0)</div></td></tr>
</tbody>
</table>



</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>web.config.debug</code>
    set to <code>True</code>. Set that to <code>False</code> if you don't want to see this.
  </p>
</div>

</body>
</html> 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}

Get an exception when trying to connection to host and send GET /rest/cmd
Exception:timed out
retry it again


this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch2.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 



this message request in PostMessage is: 
{'Content-type': 'application/json', 'Accept': 'application/json'}
{
  "request": {
    "command": r"net use y: \\sanya.eng.vmware.com\exchange\gshi /user:sanya\gshi vmware;ping 127.0.0.1 -n 10;y:\automation\autotool\dispatch.bat;net use /delete y:;ping 127.0.0.1 -n 10",
    "interpreter": "bat",
    "role": "view_client"
  }
}



this response in PostMessage is 
{"response":{"status":"OK"}} 

